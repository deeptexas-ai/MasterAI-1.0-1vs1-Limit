// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dealer.proto

#ifndef PROTOBUF_dealer_2eproto__INCLUDED
#define PROTOBUF_dealer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "system.pb.h"
#include "acpc.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_dealer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDRoleStateImpl();
void InitDefaultsDRoleState();
void InitDefaultsDRoleInfoImpl();
void InitDefaultsDRoleInfo();
void InitDefaultsDRequestCardsReqImpl();
void InitDefaultsDRequestCardsReq();
void InitDefaultsDRequestCardsRespImpl();
void InitDefaultsDRequestCardsResp();
void InitDefaultsDNotifyMatchStateImpl();
void InitDefaultsDNotifyMatchState();
void InitDefaultsBCRequestCardsReqImpl();
void InitDefaultsBCRequestCardsReq();
void InitDefaultsBCRequestCardsRespImpl();
void InitDefaultsBCRequestCardsResp();
inline void InitDefaults() {
  InitDefaultsDRoleState();
  InitDefaultsDRoleInfo();
  InitDefaultsDRequestCardsReq();
  InitDefaultsDRequestCardsResp();
  InitDefaultsDNotifyMatchState();
  InitDefaultsBCRequestCardsReq();
  InitDefaultsBCRequestCardsResp();
}
}  // namespace protobuf_dealer_2eproto
namespace Pb {
class BCRequestCardsReq;
class BCRequestCardsReqDefaultTypeInternal;
extern BCRequestCardsReqDefaultTypeInternal _BCRequestCardsReq_default_instance_;
class BCRequestCardsResp;
class BCRequestCardsRespDefaultTypeInternal;
extern BCRequestCardsRespDefaultTypeInternal _BCRequestCardsResp_default_instance_;
class DNotifyMatchState;
class DNotifyMatchStateDefaultTypeInternal;
extern DNotifyMatchStateDefaultTypeInternal _DNotifyMatchState_default_instance_;
class DRequestCardsReq;
class DRequestCardsReqDefaultTypeInternal;
extern DRequestCardsReqDefaultTypeInternal _DRequestCardsReq_default_instance_;
class DRequestCardsResp;
class DRequestCardsRespDefaultTypeInternal;
extern DRequestCardsRespDefaultTypeInternal _DRequestCardsResp_default_instance_;
class DRoleInfo;
class DRoleInfoDefaultTypeInternal;
extern DRoleInfoDefaultTypeInternal _DRoleInfo_default_instance_;
class DRoleState;
class DRoleStateDefaultTypeInternal;
extern DRoleStateDefaultTypeInternal _DRoleState_default_instance_;
}  // namespace Pb
namespace Pb {

// ===================================================================

class DRoleState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.DRoleState) */ {
 public:
  DRoleState();
  virtual ~DRoleState();

  DRoleState(const DRoleState& from);

  inline DRoleState& operator=(const DRoleState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRoleState(DRoleState&& from) noexcept
    : DRoleState() {
    *this = ::std::move(from);
  }

  inline DRoleState& operator=(DRoleState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRoleState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRoleState* internal_default_instance() {
    return reinterpret_cast<const DRoleState*>(
               &_DRoleState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DRoleState* other);
  friend void swap(DRoleState& a, DRoleState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRoleState* New() const PROTOBUF_FINAL { return New(NULL); }

  DRoleState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRoleState& from);
  void MergeFrom(const DRoleState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRoleState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.AcpcCard hole_cards = 5;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 5;
  const ::Pb::AcpcCard& hole_cards(int index) const;
  ::Pb::AcpcCard* mutable_hole_cards(int index);
  ::Pb::AcpcCard* add_hole_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_hole_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      hole_cards() const;

  // string role_name = 2;
  void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& role_name() const;
  void set_role_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_name(::std::string&& value);
  #endif
  void set_role_name(const char* value);
  void set_role_name(const char* value, size_t size);
  ::std::string* mutable_role_name();
  ::std::string* release_role_name();
  void set_allocated_role_name(::std::string* role_name);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 spent = 3;
  void clear_spent();
  static const int kSpentFieldNumber = 3;
  ::google::protobuf::uint32 spent() const;
  void set_spent(::google::protobuf::uint32 value);

  // uint32 fold = 4;
  void clear_fold();
  static const int kFoldFieldNumber = 4;
  ::google::protobuf::uint32 fold() const;
  void set_fold(::google::protobuf::uint32 value);

  // int32 Score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // int32 turn = 7;
  void clear_turn();
  static const int kTurnFieldNumber = 7;
  ::google::protobuf::int32 turn() const;
  void set_turn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.DRoleState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > hole_cards_;
  ::google::protobuf::internal::ArenaStringPtr role_name_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 spent_;
  ::google::protobuf::uint32 fold_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 turn_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsDRoleStateImpl();
};
// -------------------------------------------------------------------

class DRoleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.DRoleInfo) */ {
 public:
  DRoleInfo();
  virtual ~DRoleInfo();

  DRoleInfo(const DRoleInfo& from);

  inline DRoleInfo& operator=(const DRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRoleInfo(DRoleInfo&& from) noexcept
    : DRoleInfo() {
    *this = ::std::move(from);
  }

  inline DRoleInfo& operator=(DRoleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRoleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRoleInfo* internal_default_instance() {
    return reinterpret_cast<const DRoleInfo*>(
               &_DRoleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DRoleInfo* other);
  friend void swap(DRoleInfo& a, DRoleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRoleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DRoleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRoleInfo& from);
  void MergeFrom(const DRoleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRoleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.AcpcCard hole_cards = 3;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 3;
  const ::Pb::AcpcCard& hole_cards(int index) const;
  ::Pb::AcpcCard* mutable_hole_cards(int index);
  ::Pb::AcpcCard* add_hole_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_hole_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      hole_cards() const;

  // string role_name = 2;
  void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& role_name() const;
  void set_role_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_name(::std::string&& value);
  #endif
  void set_role_name(const char* value);
  void set_role_name(const char* value, size_t size);
  ::std::string* mutable_role_name();
  ::std::string* release_role_name();
  void set_allocated_role_name(::std::string* role_name);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.DRoleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > hole_cards_;
  ::google::protobuf::internal::ArenaStringPtr role_name_;
  ::google::protobuf::uint32 role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsDRoleInfoImpl();
};
// -------------------------------------------------------------------

class DRequestCardsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.DRequestCardsReq) */ {
 public:
  DRequestCardsReq();
  virtual ~DRequestCardsReq();

  DRequestCardsReq(const DRequestCardsReq& from);

  inline DRequestCardsReq& operator=(const DRequestCardsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRequestCardsReq(DRequestCardsReq&& from) noexcept
    : DRequestCardsReq() {
    *this = ::std::move(from);
  }

  inline DRequestCardsReq& operator=(DRequestCardsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRequestCardsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRequestCardsReq* internal_default_instance() {
    return reinterpret_cast<const DRequestCardsReq*>(
               &_DRequestCardsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DRequestCardsReq* other);
  friend void swap(DRequestCardsReq& a, DRequestCardsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRequestCardsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DRequestCardsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRequestCardsReq& from);
  void MergeFrom(const DRequestCardsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRequestCardsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.DRoleInfo role_info = 5;
  int role_info_size() const;
  void clear_role_info();
  static const int kRoleInfoFieldNumber = 5;
  const ::Pb::DRoleInfo& role_info(int index) const;
  ::Pb::DRoleInfo* mutable_role_info(int index);
  ::Pb::DRoleInfo* add_role_info();
  ::google::protobuf::RepeatedPtrField< ::Pb::DRoleInfo >*
      mutable_role_info();
  const ::google::protobuf::RepeatedPtrField< ::Pb::DRoleInfo >&
      role_info() const;

  // repeated .Pb.AcpcCard board_cards = 6;
  int board_cards_size() const;
  void clear_board_cards();
  static const int kBoardCardsFieldNumber = 6;
  const ::Pb::AcpcCard& board_cards(int index) const;
  ::Pb::AcpcCard* mutable_board_cards(int index);
  ::Pb::AcpcCard* add_board_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_board_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      board_cards() const;

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 hand_id = 2;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 2;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // uint32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // uint32 dealer_seat = 4;
  void clear_dealer_seat();
  static const int kDealerSeatFieldNumber = 4;
  ::google::protobuf::uint32 dealer_seat() const;
  void set_dealer_seat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.DRequestCardsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::DRoleInfo > role_info_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > board_cards_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 dealer_seat_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsDRequestCardsReqImpl();
};
// -------------------------------------------------------------------

class DRequestCardsResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.DRequestCardsResp) */ {
 public:
  DRequestCardsResp();
  virtual ~DRequestCardsResp();

  DRequestCardsResp(const DRequestCardsResp& from);

  inline DRequestCardsResp& operator=(const DRequestCardsResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRequestCardsResp(DRequestCardsResp&& from) noexcept
    : DRequestCardsResp() {
    *this = ::std::move(from);
  }

  inline DRequestCardsResp& operator=(DRequestCardsResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRequestCardsResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRequestCardsResp* internal_default_instance() {
    return reinterpret_cast<const DRequestCardsResp*>(
               &_DRequestCardsResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DRequestCardsResp* other);
  friend void swap(DRequestCardsResp& a, DRequestCardsResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRequestCardsResp* New() const PROTOBUF_FINAL { return New(NULL); }

  DRequestCardsResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRequestCardsResp& from);
  void MergeFrom(const DRequestCardsResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRequestCardsResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.AcpcCard board_cards = 4;
  int board_cards_size() const;
  void clear_board_cards();
  static const int kBoardCardsFieldNumber = 4;
  const ::Pb::AcpcCard& board_cards(int index) const;
  ::Pb::AcpcCard* mutable_board_cards(int index);
  ::Pb::AcpcCard* add_board_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_board_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      board_cards() const;

  // repeated .Pb.HoleCards hole_cards = 5;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 5;
  const ::Pb::HoleCards& hole_cards(int index) const;
  ::Pb::HoleCards* mutable_hole_cards(int index);
  ::Pb::HoleCards* add_hole_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >*
      mutable_hole_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >&
      hole_cards() const;

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 hand_id = 2;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 2;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // uint32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.DRequestCardsResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > board_cards_;
  ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards > hole_cards_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::uint32 round_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsDRequestCardsRespImpl();
};
// -------------------------------------------------------------------

class DNotifyMatchState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.DNotifyMatchState) */ {
 public:
  DNotifyMatchState();
  virtual ~DNotifyMatchState();

  DNotifyMatchState(const DNotifyMatchState& from);

  inline DNotifyMatchState& operator=(const DNotifyMatchState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DNotifyMatchState(DNotifyMatchState&& from) noexcept
    : DNotifyMatchState() {
    *this = ::std::move(from);
  }

  inline DNotifyMatchState& operator=(DNotifyMatchState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DNotifyMatchState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DNotifyMatchState* internal_default_instance() {
    return reinterpret_cast<const DNotifyMatchState*>(
               &_DNotifyMatchState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DNotifyMatchState* other);
  friend void swap(DNotifyMatchState& a, DNotifyMatchState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DNotifyMatchState* New() const PROTOBUF_FINAL { return New(NULL); }

  DNotifyMatchState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DNotifyMatchState& from);
  void MergeFrom(const DNotifyMatchState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DNotifyMatchState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.AcpcCard board_cards = 8;
  int board_cards_size() const;
  void clear_board_cards();
  static const int kBoardCardsFieldNumber = 8;
  const ::Pb::AcpcCard& board_cards(int index) const;
  ::Pb::AcpcCard* mutable_board_cards(int index);
  ::Pb::AcpcCard* add_board_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_board_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      board_cards() const;

  // repeated .Pb.DRoleState role_state = 9;
  int role_state_size() const;
  void clear_role_state();
  static const int kRoleStateFieldNumber = 9;
  const ::Pb::DRoleState& role_state(int index) const;
  ::Pb::DRoleState* mutable_role_state(int index);
  ::Pb::DRoleState* add_role_state();
  ::google::protobuf::RepeatedPtrField< ::Pb::DRoleState >*
      mutable_role_state();
  const ::google::protobuf::RepeatedPtrField< ::Pb::DRoleState >&
      role_state() const;

  // repeated .Pb.RoleAction role_action = 10;
  int role_action_size() const;
  void clear_role_action();
  static const int kRoleActionFieldNumber = 10;
  const ::Pb::RoleAction& role_action(int index) const;
  ::Pb::RoleAction* mutable_role_action(int index);
  ::Pb::RoleAction* add_role_action();
  ::google::protobuf::RepeatedPtrField< ::Pb::RoleAction >*
      mutable_role_action();
  const ::google::protobuf::RepeatedPtrField< ::Pb::RoleAction >&
      role_action() const;

  // repeated int32 round_spent = 11;
  int round_spent_size() const;
  void clear_round_spent();
  static const int kRoundSpentFieldNumber = 11;
  ::google::protobuf::int32 round_spent(int index) const;
  void set_round_spent(int index, ::google::protobuf::int32 value);
  void add_round_spent(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      round_spent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_round_spent();

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // uint32 dealer_seat = 3;
  void clear_dealer_seat();
  static const int kDealerSeatFieldNumber = 3;
  ::google::protobuf::uint32 dealer_seat() const;
  void set_dealer_seat(::google::protobuf::uint32 value);

  // uint32 hand_id = 4;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 4;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // uint32 round = 5;
  void clear_round();
  static const int kRoundFieldNumber = 5;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // uint32 finished = 6;
  void clear_finished();
  static const int kFinishedFieldNumber = 6;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // uint32 max_spent = 7;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 7;
  ::google::protobuf::uint32 max_spent() const;
  void set_max_spent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.DNotifyMatchState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > board_cards_;
  ::google::protobuf::RepeatedPtrField< ::Pb::DRoleState > role_state_;
  ::google::protobuf::RepeatedPtrField< ::Pb::RoleAction > role_action_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > round_spent_;
  mutable int _round_spent_cached_byte_size_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 mode_;
  ::google::protobuf::uint32 dealer_seat_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 finished_;
  ::google::protobuf::uint32 max_spent_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsDNotifyMatchStateImpl();
};
// -------------------------------------------------------------------

class BCRequestCardsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.BCRequestCardsReq) */ {
 public:
  BCRequestCardsReq();
  virtual ~BCRequestCardsReq();

  BCRequestCardsReq(const BCRequestCardsReq& from);

  inline BCRequestCardsReq& operator=(const BCRequestCardsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BCRequestCardsReq(BCRequestCardsReq&& from) noexcept
    : BCRequestCardsReq() {
    *this = ::std::move(from);
  }

  inline BCRequestCardsReq& operator=(BCRequestCardsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BCRequestCardsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BCRequestCardsReq* internal_default_instance() {
    return reinterpret_cast<const BCRequestCardsReq*>(
               &_BCRequestCardsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BCRequestCardsReq* other);
  friend void swap(BCRequestCardsReq& a, BCRequestCardsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BCRequestCardsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BCRequestCardsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BCRequestCardsReq& from);
  void MergeFrom(const BCRequestCardsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BCRequestCardsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 hand_id = 2;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 2;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.BCRequestCardsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 hand_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsBCRequestCardsReqImpl();
};
// -------------------------------------------------------------------

class BCRequestCardsResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.BCRequestCardsResp) */ {
 public:
  BCRequestCardsResp();
  virtual ~BCRequestCardsResp();

  BCRequestCardsResp(const BCRequestCardsResp& from);

  inline BCRequestCardsResp& operator=(const BCRequestCardsResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BCRequestCardsResp(BCRequestCardsResp&& from) noexcept
    : BCRequestCardsResp() {
    *this = ::std::move(from);
  }

  inline BCRequestCardsResp& operator=(BCRequestCardsResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BCRequestCardsResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BCRequestCardsResp* internal_default_instance() {
    return reinterpret_cast<const BCRequestCardsResp*>(
               &_BCRequestCardsResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BCRequestCardsResp* other);
  friend void swap(BCRequestCardsResp& a, BCRequestCardsResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BCRequestCardsResp* New() const PROTOBUF_FINAL { return New(NULL); }

  BCRequestCardsResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BCRequestCardsResp& from);
  void MergeFrom(const BCRequestCardsResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BCRequestCardsResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.AcpcCard cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  const ::Pb::AcpcCard& cards(int index) const;
  ::Pb::AcpcCard* mutable_cards(int index);
  ::Pb::AcpcCard* add_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      cards() const;

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 hand_id = 2;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 2;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.BCRequestCardsResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > cards_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 hand_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_dealer_2eproto::TableStruct;
  friend void ::protobuf_dealer_2eproto::InitDefaultsBCRequestCardsRespImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DRoleState

// uint32 role_id = 1;
inline void DRoleState::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 DRoleState::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.role_id)
  return role_id_;
}
inline void DRoleState::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleState.role_id)
}

// string role_name = 2;
inline void DRoleState::clear_role_name() {
  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DRoleState::role_name() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.role_name)
  return role_name_.GetNoArena();
}
inline void DRoleState::set_role_name(const ::std::string& value) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.DRoleState.role_name)
}
#if LANG_CXX11
inline void DRoleState::set_role_name(::std::string&& value) {
  
  role_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.DRoleState.role_name)
}
#endif
inline void DRoleState::set_role_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.DRoleState.role_name)
}
inline void DRoleState::set_role_name(const char* value, size_t size) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.DRoleState.role_name)
}
inline ::std::string* DRoleState::mutable_role_name() {
  
  // @@protoc_insertion_point(field_mutable:Pb.DRoleState.role_name)
  return role_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DRoleState::release_role_name() {
  // @@protoc_insertion_point(field_release:Pb.DRoleState.role_name)
  
  return role_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DRoleState::set_allocated_role_name(::std::string* role_name) {
  if (role_name != NULL) {
    
  } else {
    
  }
  role_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_name);
  // @@protoc_insertion_point(field_set_allocated:Pb.DRoleState.role_name)
}

// uint32 spent = 3;
inline void DRoleState::clear_spent() {
  spent_ = 0u;
}
inline ::google::protobuf::uint32 DRoleState::spent() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.spent)
  return spent_;
}
inline void DRoleState::set_spent(::google::protobuf::uint32 value) {
  
  spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleState.spent)
}

// uint32 fold = 4;
inline void DRoleState::clear_fold() {
  fold_ = 0u;
}
inline ::google::protobuf::uint32 DRoleState::fold() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.fold)
  return fold_;
}
inline void DRoleState::set_fold(::google::protobuf::uint32 value) {
  
  fold_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleState.fold)
}

// repeated .Pb.AcpcCard hole_cards = 5;
inline int DRoleState::hole_cards_size() const {
  return hole_cards_.size();
}
inline const ::Pb::AcpcCard& DRoleState::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.hole_cards)
  return hole_cards_.Get(index);
}
inline ::Pb::AcpcCard* DRoleState::mutable_hole_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRoleState.hole_cards)
  return hole_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* DRoleState::add_hole_cards() {
  // @@protoc_insertion_point(field_add:Pb.DRoleState.hole_cards)
  return hole_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
DRoleState::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRoleState.hole_cards)
  return &hole_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
DRoleState::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DRoleState.hole_cards)
  return hole_cards_;
}

// int32 Score = 6;
inline void DRoleState::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 DRoleState::score() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.Score)
  return score_;
}
inline void DRoleState::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleState.Score)
}

// int32 turn = 7;
inline void DRoleState::clear_turn() {
  turn_ = 0;
}
inline ::google::protobuf::int32 DRoleState::turn() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleState.turn)
  return turn_;
}
inline void DRoleState::set_turn(::google::protobuf::int32 value) {
  
  turn_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleState.turn)
}

// -------------------------------------------------------------------

// DRoleInfo

// uint32 role_id = 1;
inline void DRoleInfo::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 DRoleInfo::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleInfo.role_id)
  return role_id_;
}
inline void DRoleInfo::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRoleInfo.role_id)
}

// string role_name = 2;
inline void DRoleInfo::clear_role_name() {
  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DRoleInfo::role_name() const {
  // @@protoc_insertion_point(field_get:Pb.DRoleInfo.role_name)
  return role_name_.GetNoArena();
}
inline void DRoleInfo::set_role_name(const ::std::string& value) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.DRoleInfo.role_name)
}
#if LANG_CXX11
inline void DRoleInfo::set_role_name(::std::string&& value) {
  
  role_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.DRoleInfo.role_name)
}
#endif
inline void DRoleInfo::set_role_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.DRoleInfo.role_name)
}
inline void DRoleInfo::set_role_name(const char* value, size_t size) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.DRoleInfo.role_name)
}
inline ::std::string* DRoleInfo::mutable_role_name() {
  
  // @@protoc_insertion_point(field_mutable:Pb.DRoleInfo.role_name)
  return role_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DRoleInfo::release_role_name() {
  // @@protoc_insertion_point(field_release:Pb.DRoleInfo.role_name)
  
  return role_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DRoleInfo::set_allocated_role_name(::std::string* role_name) {
  if (role_name != NULL) {
    
  } else {
    
  }
  role_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_name);
  // @@protoc_insertion_point(field_set_allocated:Pb.DRoleInfo.role_name)
}

// repeated .Pb.AcpcCard hole_cards = 3;
inline int DRoleInfo::hole_cards_size() const {
  return hole_cards_.size();
}
inline const ::Pb::AcpcCard& DRoleInfo::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRoleInfo.hole_cards)
  return hole_cards_.Get(index);
}
inline ::Pb::AcpcCard* DRoleInfo::mutable_hole_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRoleInfo.hole_cards)
  return hole_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* DRoleInfo::add_hole_cards() {
  // @@protoc_insertion_point(field_add:Pb.DRoleInfo.hole_cards)
  return hole_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
DRoleInfo::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRoleInfo.hole_cards)
  return &hole_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
DRoleInfo::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DRoleInfo.hole_cards)
  return hole_cards_;
}

// -------------------------------------------------------------------

// DRequestCardsReq

// uint64 room_id = 1;
inline void DRequestCardsReq::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DRequestCardsReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.room_id)
  return room_id_;
}
inline void DRequestCardsReq::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsReq.room_id)
}

// uint32 hand_id = 2;
inline void DRequestCardsReq::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 DRequestCardsReq::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.hand_id)
  return hand_id_;
}
inline void DRequestCardsReq::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsReq.hand_id)
}

// uint32 round = 3;
inline void DRequestCardsReq::clear_round() {
  round_ = 0u;
}
inline ::google::protobuf::uint32 DRequestCardsReq::round() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.round)
  return round_;
}
inline void DRequestCardsReq::set_round(::google::protobuf::uint32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsReq.round)
}

// uint32 dealer_seat = 4;
inline void DRequestCardsReq::clear_dealer_seat() {
  dealer_seat_ = 0u;
}
inline ::google::protobuf::uint32 DRequestCardsReq::dealer_seat() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.dealer_seat)
  return dealer_seat_;
}
inline void DRequestCardsReq::set_dealer_seat(::google::protobuf::uint32 value) {
  
  dealer_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsReq.dealer_seat)
}

// repeated .Pb.DRoleInfo role_info = 5;
inline int DRequestCardsReq::role_info_size() const {
  return role_info_.size();
}
inline void DRequestCardsReq::clear_role_info() {
  role_info_.Clear();
}
inline const ::Pb::DRoleInfo& DRequestCardsReq::role_info(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.role_info)
  return role_info_.Get(index);
}
inline ::Pb::DRoleInfo* DRequestCardsReq::mutable_role_info(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRequestCardsReq.role_info)
  return role_info_.Mutable(index);
}
inline ::Pb::DRoleInfo* DRequestCardsReq::add_role_info() {
  // @@protoc_insertion_point(field_add:Pb.DRequestCardsReq.role_info)
  return role_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::DRoleInfo >*
DRequestCardsReq::mutable_role_info() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRequestCardsReq.role_info)
  return &role_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::DRoleInfo >&
DRequestCardsReq::role_info() const {
  // @@protoc_insertion_point(field_list:Pb.DRequestCardsReq.role_info)
  return role_info_;
}

// repeated .Pb.AcpcCard board_cards = 6;
inline int DRequestCardsReq::board_cards_size() const {
  return board_cards_.size();
}
inline const ::Pb::AcpcCard& DRequestCardsReq::board_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsReq.board_cards)
  return board_cards_.Get(index);
}
inline ::Pb::AcpcCard* DRequestCardsReq::mutable_board_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRequestCardsReq.board_cards)
  return board_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* DRequestCardsReq::add_board_cards() {
  // @@protoc_insertion_point(field_add:Pb.DRequestCardsReq.board_cards)
  return board_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
DRequestCardsReq::mutable_board_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRequestCardsReq.board_cards)
  return &board_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
DRequestCardsReq::board_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DRequestCardsReq.board_cards)
  return board_cards_;
}

// -------------------------------------------------------------------

// DRequestCardsResp

// uint64 room_id = 1;
inline void DRequestCardsResp::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DRequestCardsResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsResp.room_id)
  return room_id_;
}
inline void DRequestCardsResp::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsResp.room_id)
}

// uint32 hand_id = 2;
inline void DRequestCardsResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 DRequestCardsResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsResp.hand_id)
  return hand_id_;
}
inline void DRequestCardsResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsResp.hand_id)
}

// uint32 round = 3;
inline void DRequestCardsResp::clear_round() {
  round_ = 0u;
}
inline ::google::protobuf::uint32 DRequestCardsResp::round() const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsResp.round)
  return round_;
}
inline void DRequestCardsResp::set_round(::google::protobuf::uint32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.DRequestCardsResp.round)
}

// repeated .Pb.AcpcCard board_cards = 4;
inline int DRequestCardsResp::board_cards_size() const {
  return board_cards_.size();
}
inline const ::Pb::AcpcCard& DRequestCardsResp::board_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsResp.board_cards)
  return board_cards_.Get(index);
}
inline ::Pb::AcpcCard* DRequestCardsResp::mutable_board_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRequestCardsResp.board_cards)
  return board_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* DRequestCardsResp::add_board_cards() {
  // @@protoc_insertion_point(field_add:Pb.DRequestCardsResp.board_cards)
  return board_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
DRequestCardsResp::mutable_board_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRequestCardsResp.board_cards)
  return &board_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
DRequestCardsResp::board_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DRequestCardsResp.board_cards)
  return board_cards_;
}

// repeated .Pb.HoleCards hole_cards = 5;
inline int DRequestCardsResp::hole_cards_size() const {
  return hole_cards_.size();
}
inline const ::Pb::HoleCards& DRequestCardsResp::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DRequestCardsResp.hole_cards)
  return hole_cards_.Get(index);
}
inline ::Pb::HoleCards* DRequestCardsResp::mutable_hole_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DRequestCardsResp.hole_cards)
  return hole_cards_.Mutable(index);
}
inline ::Pb::HoleCards* DRequestCardsResp::add_hole_cards() {
  // @@protoc_insertion_point(field_add:Pb.DRequestCardsResp.hole_cards)
  return hole_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >*
DRequestCardsResp::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DRequestCardsResp.hole_cards)
  return &hole_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >&
DRequestCardsResp::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DRequestCardsResp.hole_cards)
  return hole_cards_;
}

// -------------------------------------------------------------------

// DNotifyMatchState

// uint64 room_id = 1;
inline void DNotifyMatchState::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DNotifyMatchState::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.room_id)
  return room_id_;
}
inline void DNotifyMatchState::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.room_id)
}

// uint32 mode = 2;
inline void DNotifyMatchState::clear_mode() {
  mode_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::mode() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.mode)
  return mode_;
}
inline void DNotifyMatchState::set_mode(::google::protobuf::uint32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.mode)
}

// uint32 dealer_seat = 3;
inline void DNotifyMatchState::clear_dealer_seat() {
  dealer_seat_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::dealer_seat() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.dealer_seat)
  return dealer_seat_;
}
inline void DNotifyMatchState::set_dealer_seat(::google::protobuf::uint32 value) {
  
  dealer_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.dealer_seat)
}

// uint32 hand_id = 4;
inline void DNotifyMatchState::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.hand_id)
  return hand_id_;
}
inline void DNotifyMatchState::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.hand_id)
}

// uint32 round = 5;
inline void DNotifyMatchState::clear_round() {
  round_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::round() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.round)
  return round_;
}
inline void DNotifyMatchState::set_round(::google::protobuf::uint32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.round)
}

// uint32 finished = 6;
inline void DNotifyMatchState::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::finished() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.finished)
  return finished_;
}
inline void DNotifyMatchState::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.finished)
}

// uint32 max_spent = 7;
inline void DNotifyMatchState::clear_max_spent() {
  max_spent_ = 0u;
}
inline ::google::protobuf::uint32 DNotifyMatchState::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.max_spent)
  return max_spent_;
}
inline void DNotifyMatchState::set_max_spent(::google::protobuf::uint32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.max_spent)
}

// repeated .Pb.AcpcCard board_cards = 8;
inline int DNotifyMatchState::board_cards_size() const {
  return board_cards_.size();
}
inline const ::Pb::AcpcCard& DNotifyMatchState::board_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.board_cards)
  return board_cards_.Get(index);
}
inline ::Pb::AcpcCard* DNotifyMatchState::mutable_board_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DNotifyMatchState.board_cards)
  return board_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* DNotifyMatchState::add_board_cards() {
  // @@protoc_insertion_point(field_add:Pb.DNotifyMatchState.board_cards)
  return board_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
DNotifyMatchState::mutable_board_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DNotifyMatchState.board_cards)
  return &board_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
DNotifyMatchState::board_cards() const {
  // @@protoc_insertion_point(field_list:Pb.DNotifyMatchState.board_cards)
  return board_cards_;
}

// repeated .Pb.DRoleState role_state = 9;
inline int DNotifyMatchState::role_state_size() const {
  return role_state_.size();
}
inline void DNotifyMatchState::clear_role_state() {
  role_state_.Clear();
}
inline const ::Pb::DRoleState& DNotifyMatchState::role_state(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.role_state)
  return role_state_.Get(index);
}
inline ::Pb::DRoleState* DNotifyMatchState::mutable_role_state(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DNotifyMatchState.role_state)
  return role_state_.Mutable(index);
}
inline ::Pb::DRoleState* DNotifyMatchState::add_role_state() {
  // @@protoc_insertion_point(field_add:Pb.DNotifyMatchState.role_state)
  return role_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::DRoleState >*
DNotifyMatchState::mutable_role_state() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DNotifyMatchState.role_state)
  return &role_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::DRoleState >&
DNotifyMatchState::role_state() const {
  // @@protoc_insertion_point(field_list:Pb.DNotifyMatchState.role_state)
  return role_state_;
}

// repeated .Pb.RoleAction role_action = 10;
inline int DNotifyMatchState::role_action_size() const {
  return role_action_.size();
}
inline const ::Pb::RoleAction& DNotifyMatchState::role_action(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.role_action)
  return role_action_.Get(index);
}
inline ::Pb::RoleAction* DNotifyMatchState::mutable_role_action(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.DNotifyMatchState.role_action)
  return role_action_.Mutable(index);
}
inline ::Pb::RoleAction* DNotifyMatchState::add_role_action() {
  // @@protoc_insertion_point(field_add:Pb.DNotifyMatchState.role_action)
  return role_action_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::RoleAction >*
DNotifyMatchState::mutable_role_action() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DNotifyMatchState.role_action)
  return &role_action_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::RoleAction >&
DNotifyMatchState::role_action() const {
  // @@protoc_insertion_point(field_list:Pb.DNotifyMatchState.role_action)
  return role_action_;
}

// repeated int32 round_spent = 11;
inline int DNotifyMatchState::round_spent_size() const {
  return round_spent_.size();
}
inline void DNotifyMatchState::clear_round_spent() {
  round_spent_.Clear();
}
inline ::google::protobuf::int32 DNotifyMatchState::round_spent(int index) const {
  // @@protoc_insertion_point(field_get:Pb.DNotifyMatchState.round_spent)
  return round_spent_.Get(index);
}
inline void DNotifyMatchState::set_round_spent(int index, ::google::protobuf::int32 value) {
  round_spent_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.DNotifyMatchState.round_spent)
}
inline void DNotifyMatchState::add_round_spent(::google::protobuf::int32 value) {
  round_spent_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.DNotifyMatchState.round_spent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DNotifyMatchState::round_spent() const {
  // @@protoc_insertion_point(field_list:Pb.DNotifyMatchState.round_spent)
  return round_spent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DNotifyMatchState::mutable_round_spent() {
  // @@protoc_insertion_point(field_mutable_list:Pb.DNotifyMatchState.round_spent)
  return &round_spent_;
}

// -------------------------------------------------------------------

// BCRequestCardsReq

// uint64 room_id = 1;
inline void BCRequestCardsReq::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BCRequestCardsReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.BCRequestCardsReq.room_id)
  return room_id_;
}
inline void BCRequestCardsReq::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.BCRequestCardsReq.room_id)
}

// uint32 hand_id = 2;
inline void BCRequestCardsReq::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 BCRequestCardsReq::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.BCRequestCardsReq.hand_id)
  return hand_id_;
}
inline void BCRequestCardsReq::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.BCRequestCardsReq.hand_id)
}

// -------------------------------------------------------------------

// BCRequestCardsResp

// uint64 room_id = 1;
inline void BCRequestCardsResp::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BCRequestCardsResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.BCRequestCardsResp.room_id)
  return room_id_;
}
inline void BCRequestCardsResp::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.BCRequestCardsResp.room_id)
}

// uint32 hand_id = 2;
inline void BCRequestCardsResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 BCRequestCardsResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.BCRequestCardsResp.hand_id)
  return hand_id_;
}
inline void BCRequestCardsResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.BCRequestCardsResp.hand_id)
}

// repeated .Pb.AcpcCard cards = 3;
inline int BCRequestCardsResp::cards_size() const {
  return cards_.size();
}
inline const ::Pb::AcpcCard& BCRequestCardsResp::cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.BCRequestCardsResp.cards)
  return cards_.Get(index);
}
inline ::Pb::AcpcCard* BCRequestCardsResp::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.BCRequestCardsResp.cards)
  return cards_.Mutable(index);
}
inline ::Pb::AcpcCard* BCRequestCardsResp::add_cards() {
  // @@protoc_insertion_point(field_add:Pb.BCRequestCardsResp.cards)
  return cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
BCRequestCardsResp::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.BCRequestCardsResp.cards)
  return &cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
BCRequestCardsResp::cards() const {
  // @@protoc_insertion_point(field_list:Pb.BCRequestCardsResp.cards)
  return cards_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dealer_2eproto__INCLUDED
