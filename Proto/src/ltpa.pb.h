// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ltpa.proto

#ifndef PROTOBUF_ltpa_2eproto__INCLUDED
#define PROTOBUF_ltpa_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "system.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_ltpa_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[31];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLTPAPlayerImpl();
void InitDefaultsLTPAPlayer();
void InitDefaultsLTPAPlayerStateImpl();
void InitDefaultsLTPAPlayerState();
void InitDefaultsLTPAPlayerActionImpl();
void InitDefaultsLTPAPlayerAction();
void InitDefaultsLTPAPlayerCardsImpl();
void InitDefaultsLTPAPlayerCards();
void InitDefaultsLTpaEnterRoomReqImpl();
void InitDefaultsLTpaEnterRoomReq();
void InitDefaultsLTpaEnterRoomRespImpl();
void InitDefaultsLTpaEnterRoomResp();
void InitDefaultsLTpaAIEnterRoomReqImpl();
void InitDefaultsLTpaAIEnterRoomReq();
void InitDefaultsLTpaAIEnterRoomRespImpl();
void InitDefaultsLTpaAIEnterRoomResp();
void InitDefaultsLTpaLeaveRoomReqImpl();
void InitDefaultsLTpaLeaveRoomReq();
void InitDefaultsLTpaLeaveRoomRespImpl();
void InitDefaultsLTpaLeaveRoomResp();
void InitDefaultsLTpaNotifyDestroyRoomImpl();
void InitDefaultsLTpaNotifyDestroyRoom();
void InitDefaultsLTpaSetPlayerStateReqImpl();
void InitDefaultsLTpaSetPlayerStateReq();
void InitDefaultsLTpaSetPlayerStateRespImpl();
void InitDefaultsLTpaSetPlayerStateResp();
void InitDefaultsLTpaSetDealerReqImpl();
void InitDefaultsLTpaSetDealerReq();
void InitDefaultsLTpaSetDealerRespImpl();
void InitDefaultsLTpaSetDealerResp();
void InitDefaultsLTpaQueryCardsReqImpl();
void InitDefaultsLTpaQueryCardsReq();
void InitDefaultsLTpaQueryCardsRespImpl();
void InitDefaultsLTpaQueryCardsResp();
void InitDefaultsLTpaQueryAllowActionReqImpl();
void InitDefaultsLTpaQueryAllowActionReq();
void InitDefaultsLTpaQueryAllowActionRespImpl();
void InitDefaultsLTpaQueryAllowActionResp();
void InitDefaultsLTpaQueryMatchStateReqImpl();
void InitDefaultsLTpaQueryMatchStateReq();
void InitDefaultsLTpaQueryMatchStateRespImpl();
void InitDefaultsLTpaQueryMatchStateResp();
void InitDefaultsLTpaReportActionTokenReqImpl();
void InitDefaultsLTpaReportActionTokenReq();
void InitDefaultsLTpaReportActionTokenRespImpl();
void InitDefaultsLTpaReportActionTokenResp();
void InitDefaultsLTpaReportPlayerActionReqImpl();
void InitDefaultsLTpaReportPlayerActionReq();
void InitDefaultsLTpaReportPlayerActionRespImpl();
void InitDefaultsLTpaReportPlayerActionResp();
void InitDefaultsLTpaQueryAIActionReqImpl();
void InitDefaultsLTpaQueryAIActionReq();
void InitDefaultsLTpaQueryAIActionRespImpl();
void InitDefaultsLTpaQueryAIActionResp();
void InitDefaultsTpaRedisPlayerImpl();
void InitDefaultsTpaRedisPlayer();
void InitDefaultsTpaRedisPlayerListImpl();
void InitDefaultsTpaRedisPlayerList();
void InitDefaultsTpaAcpcMatchStateImpl();
void InitDefaultsTpaAcpcMatchState();
void InitDefaultsRoomAttrForTpaImpl();
void InitDefaultsRoomAttrForTpa();
inline void InitDefaults() {
  InitDefaultsLTPAPlayer();
  InitDefaultsLTPAPlayerState();
  InitDefaultsLTPAPlayerAction();
  InitDefaultsLTPAPlayerCards();
  InitDefaultsLTpaEnterRoomReq();
  InitDefaultsLTpaEnterRoomResp();
  InitDefaultsLTpaAIEnterRoomReq();
  InitDefaultsLTpaAIEnterRoomResp();
  InitDefaultsLTpaLeaveRoomReq();
  InitDefaultsLTpaLeaveRoomResp();
  InitDefaultsLTpaNotifyDestroyRoom();
  InitDefaultsLTpaSetPlayerStateReq();
  InitDefaultsLTpaSetPlayerStateResp();
  InitDefaultsLTpaSetDealerReq();
  InitDefaultsLTpaSetDealerResp();
  InitDefaultsLTpaQueryCardsReq();
  InitDefaultsLTpaQueryCardsResp();
  InitDefaultsLTpaQueryAllowActionReq();
  InitDefaultsLTpaQueryAllowActionResp();
  InitDefaultsLTpaQueryMatchStateReq();
  InitDefaultsLTpaQueryMatchStateResp();
  InitDefaultsLTpaReportActionTokenReq();
  InitDefaultsLTpaReportActionTokenResp();
  InitDefaultsLTpaReportPlayerActionReq();
  InitDefaultsLTpaReportPlayerActionResp();
  InitDefaultsLTpaQueryAIActionReq();
  InitDefaultsLTpaQueryAIActionResp();
  InitDefaultsTpaRedisPlayer();
  InitDefaultsTpaRedisPlayerList();
  InitDefaultsTpaAcpcMatchState();
  InitDefaultsRoomAttrForTpa();
}
}  // namespace protobuf_ltpa_2eproto
namespace Pb {
class LTPAPlayer;
class LTPAPlayerDefaultTypeInternal;
extern LTPAPlayerDefaultTypeInternal _LTPAPlayer_default_instance_;
class LTPAPlayerAction;
class LTPAPlayerActionDefaultTypeInternal;
extern LTPAPlayerActionDefaultTypeInternal _LTPAPlayerAction_default_instance_;
class LTPAPlayerCards;
class LTPAPlayerCardsDefaultTypeInternal;
extern LTPAPlayerCardsDefaultTypeInternal _LTPAPlayerCards_default_instance_;
class LTPAPlayerState;
class LTPAPlayerStateDefaultTypeInternal;
extern LTPAPlayerStateDefaultTypeInternal _LTPAPlayerState_default_instance_;
class LTpaAIEnterRoomReq;
class LTpaAIEnterRoomReqDefaultTypeInternal;
extern LTpaAIEnterRoomReqDefaultTypeInternal _LTpaAIEnterRoomReq_default_instance_;
class LTpaAIEnterRoomResp;
class LTpaAIEnterRoomRespDefaultTypeInternal;
extern LTpaAIEnterRoomRespDefaultTypeInternal _LTpaAIEnterRoomResp_default_instance_;
class LTpaEnterRoomReq;
class LTpaEnterRoomReqDefaultTypeInternal;
extern LTpaEnterRoomReqDefaultTypeInternal _LTpaEnterRoomReq_default_instance_;
class LTpaEnterRoomResp;
class LTpaEnterRoomRespDefaultTypeInternal;
extern LTpaEnterRoomRespDefaultTypeInternal _LTpaEnterRoomResp_default_instance_;
class LTpaLeaveRoomReq;
class LTpaLeaveRoomReqDefaultTypeInternal;
extern LTpaLeaveRoomReqDefaultTypeInternal _LTpaLeaveRoomReq_default_instance_;
class LTpaLeaveRoomResp;
class LTpaLeaveRoomRespDefaultTypeInternal;
extern LTpaLeaveRoomRespDefaultTypeInternal _LTpaLeaveRoomResp_default_instance_;
class LTpaNotifyDestroyRoom;
class LTpaNotifyDestroyRoomDefaultTypeInternal;
extern LTpaNotifyDestroyRoomDefaultTypeInternal _LTpaNotifyDestroyRoom_default_instance_;
class LTpaQueryAIActionReq;
class LTpaQueryAIActionReqDefaultTypeInternal;
extern LTpaQueryAIActionReqDefaultTypeInternal _LTpaQueryAIActionReq_default_instance_;
class LTpaQueryAIActionResp;
class LTpaQueryAIActionRespDefaultTypeInternal;
extern LTpaQueryAIActionRespDefaultTypeInternal _LTpaQueryAIActionResp_default_instance_;
class LTpaQueryAllowActionReq;
class LTpaQueryAllowActionReqDefaultTypeInternal;
extern LTpaQueryAllowActionReqDefaultTypeInternal _LTpaQueryAllowActionReq_default_instance_;
class LTpaQueryAllowActionResp;
class LTpaQueryAllowActionRespDefaultTypeInternal;
extern LTpaQueryAllowActionRespDefaultTypeInternal _LTpaQueryAllowActionResp_default_instance_;
class LTpaQueryCardsReq;
class LTpaQueryCardsReqDefaultTypeInternal;
extern LTpaQueryCardsReqDefaultTypeInternal _LTpaQueryCardsReq_default_instance_;
class LTpaQueryCardsResp;
class LTpaQueryCardsRespDefaultTypeInternal;
extern LTpaQueryCardsRespDefaultTypeInternal _LTpaQueryCardsResp_default_instance_;
class LTpaQueryMatchStateReq;
class LTpaQueryMatchStateReqDefaultTypeInternal;
extern LTpaQueryMatchStateReqDefaultTypeInternal _LTpaQueryMatchStateReq_default_instance_;
class LTpaQueryMatchStateResp;
class LTpaQueryMatchStateRespDefaultTypeInternal;
extern LTpaQueryMatchStateRespDefaultTypeInternal _LTpaQueryMatchStateResp_default_instance_;
class LTpaReportActionTokenReq;
class LTpaReportActionTokenReqDefaultTypeInternal;
extern LTpaReportActionTokenReqDefaultTypeInternal _LTpaReportActionTokenReq_default_instance_;
class LTpaReportActionTokenResp;
class LTpaReportActionTokenRespDefaultTypeInternal;
extern LTpaReportActionTokenRespDefaultTypeInternal _LTpaReportActionTokenResp_default_instance_;
class LTpaReportPlayerActionReq;
class LTpaReportPlayerActionReqDefaultTypeInternal;
extern LTpaReportPlayerActionReqDefaultTypeInternal _LTpaReportPlayerActionReq_default_instance_;
class LTpaReportPlayerActionResp;
class LTpaReportPlayerActionRespDefaultTypeInternal;
extern LTpaReportPlayerActionRespDefaultTypeInternal _LTpaReportPlayerActionResp_default_instance_;
class LTpaSetDealerReq;
class LTpaSetDealerReqDefaultTypeInternal;
extern LTpaSetDealerReqDefaultTypeInternal _LTpaSetDealerReq_default_instance_;
class LTpaSetDealerResp;
class LTpaSetDealerRespDefaultTypeInternal;
extern LTpaSetDealerRespDefaultTypeInternal _LTpaSetDealerResp_default_instance_;
class LTpaSetPlayerStateReq;
class LTpaSetPlayerStateReqDefaultTypeInternal;
extern LTpaSetPlayerStateReqDefaultTypeInternal _LTpaSetPlayerStateReq_default_instance_;
class LTpaSetPlayerStateResp;
class LTpaSetPlayerStateRespDefaultTypeInternal;
extern LTpaSetPlayerStateRespDefaultTypeInternal _LTpaSetPlayerStateResp_default_instance_;
class RoomAttrForTpa;
class RoomAttrForTpaDefaultTypeInternal;
extern RoomAttrForTpaDefaultTypeInternal _RoomAttrForTpa_default_instance_;
class TpaAcpcMatchState;
class TpaAcpcMatchStateDefaultTypeInternal;
extern TpaAcpcMatchStateDefaultTypeInternal _TpaAcpcMatchState_default_instance_;
class TpaRedisPlayer;
class TpaRedisPlayerDefaultTypeInternal;
extern TpaRedisPlayerDefaultTypeInternal _TpaRedisPlayer_default_instance_;
class TpaRedisPlayerList;
class TpaRedisPlayerListDefaultTypeInternal;
extern TpaRedisPlayerListDefaultTypeInternal _TpaRedisPlayerList_default_instance_;
}  // namespace Pb
namespace Pb {

// ===================================================================

class LTPAPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTPAPlayer) */ {
 public:
  LTPAPlayer();
  virtual ~LTPAPlayer();

  LTPAPlayer(const LTPAPlayer& from);

  inline LTPAPlayer& operator=(const LTPAPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTPAPlayer(LTPAPlayer&& from) noexcept
    : LTPAPlayer() {
    *this = ::std::move(from);
  }

  inline LTPAPlayer& operator=(LTPAPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTPAPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTPAPlayer* internal_default_instance() {
    return reinterpret_cast<const LTPAPlayer*>(
               &_LTPAPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LTPAPlayer* other);
  friend void swap(LTPAPlayer& a, LTPAPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTPAPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  LTPAPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTPAPlayer& from);
  void MergeFrom(const LTPAPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTPAPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 seat = 3;
  void clear_seat();
  static const int kSeatFieldNumber = 3;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // int32 is_ready = 4;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 4;
  ::google::protobuf::int32 is_ready() const;
  void set_is_ready(::google::protobuf::int32 value);

  // int32 money = 5;
  void clear_money();
  static const int kMoneyFieldNumber = 5;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTPAPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 is_ready_;
  ::google::protobuf::int32 money_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTPAPlayerImpl();
};
// -------------------------------------------------------------------

class LTPAPlayerState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTPAPlayerState) */ {
 public:
  LTPAPlayerState();
  virtual ~LTPAPlayerState();

  LTPAPlayerState(const LTPAPlayerState& from);

  inline LTPAPlayerState& operator=(const LTPAPlayerState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTPAPlayerState(LTPAPlayerState&& from) noexcept
    : LTPAPlayerState() {
    *this = ::std::move(from);
  }

  inline LTPAPlayerState& operator=(LTPAPlayerState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTPAPlayerState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTPAPlayerState* internal_default_instance() {
    return reinterpret_cast<const LTPAPlayerState*>(
               &_LTPAPlayerState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LTPAPlayerState* other);
  friend void swap(LTPAPlayerState& a, LTPAPlayerState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTPAPlayerState* New() const PROTOBUF_FINAL { return New(NULL); }

  LTPAPlayerState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTPAPlayerState& from);
  void MergeFrom(const LTPAPlayerState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTPAPlayerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 hole_cards = 6;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 6;
  ::google::protobuf::int32 hole_cards(int index) const;
  void set_hole_cards(int index, ::google::protobuf::int32 value);
  void add_hole_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hole_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hole_cards();

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 seat = 3;
  void clear_seat();
  static const int kSeatFieldNumber = 3;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // uint32 spent = 4;
  void clear_spent();
  static const int kSpentFieldNumber = 4;
  ::google::protobuf::uint32 spent() const;
  void set_spent(::google::protobuf::uint32 value);

  // uint32 fold = 5;
  void clear_fold();
  static const int kFoldFieldNumber = 5;
  ::google::protobuf::uint32 fold() const;
  void set_fold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTPAPlayerState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hole_cards_;
  mutable int _hole_cards_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::uint32 spent_;
  ::google::protobuf::uint32 fold_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTPAPlayerStateImpl();
};
// -------------------------------------------------------------------

class LTPAPlayerAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTPAPlayerAction) */ {
 public:
  LTPAPlayerAction();
  virtual ~LTPAPlayerAction();

  LTPAPlayerAction(const LTPAPlayerAction& from);

  inline LTPAPlayerAction& operator=(const LTPAPlayerAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTPAPlayerAction(LTPAPlayerAction&& from) noexcept
    : LTPAPlayerAction() {
    *this = ::std::move(from);
  }

  inline LTPAPlayerAction& operator=(LTPAPlayerAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTPAPlayerAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTPAPlayerAction* internal_default_instance() {
    return reinterpret_cast<const LTPAPlayerAction*>(
               &_LTPAPlayerAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LTPAPlayerAction* other);
  friend void swap(LTPAPlayerAction& a, LTPAPlayerAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTPAPlayerAction* New() const PROTOBUF_FINAL { return New(NULL); }

  LTPAPlayerAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTPAPlayerAction& from);
  void MergeFrom(const LTPAPlayerAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTPAPlayerAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 seat = 3;
  void clear_seat();
  static const int kSeatFieldNumber = 3;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // int32 round = 4;
  void clear_round();
  static const int kRoundFieldNumber = 4;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTPAPlayerAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTPAPlayerActionImpl();
};
// -------------------------------------------------------------------

class LTPAPlayerCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTPAPlayerCards) */ {
 public:
  LTPAPlayerCards();
  virtual ~LTPAPlayerCards();

  LTPAPlayerCards(const LTPAPlayerCards& from);

  inline LTPAPlayerCards& operator=(const LTPAPlayerCards& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTPAPlayerCards(LTPAPlayerCards&& from) noexcept
    : LTPAPlayerCards() {
    *this = ::std::move(from);
  }

  inline LTPAPlayerCards& operator=(LTPAPlayerCards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTPAPlayerCards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTPAPlayerCards* internal_default_instance() {
    return reinterpret_cast<const LTPAPlayerCards*>(
               &_LTPAPlayerCards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LTPAPlayerCards* other);
  friend void swap(LTPAPlayerCards& a, LTPAPlayerCards& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTPAPlayerCards* New() const PROTOBUF_FINAL { return New(NULL); }

  LTPAPlayerCards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTPAPlayerCards& from);
  void MergeFrom(const LTPAPlayerCards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTPAPlayerCards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 hole_cards = 2;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 2;
  ::google::protobuf::int32 hole_cards(int index) const;
  void set_hole_cards(int index, ::google::protobuf::int32 value);
  void add_hole_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hole_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hole_cards();

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTPAPlayerCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hole_cards_;
  mutable int _hole_cards_cached_byte_size_;
  ::google::protobuf::uint32 role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTPAPlayerCardsImpl();
};
// -------------------------------------------------------------------

class LTpaEnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaEnterRoomReq) */ {
 public:
  LTpaEnterRoomReq();
  virtual ~LTpaEnterRoomReq();

  LTpaEnterRoomReq(const LTpaEnterRoomReq& from);

  inline LTpaEnterRoomReq& operator=(const LTpaEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaEnterRoomReq(LTpaEnterRoomReq&& from) noexcept
    : LTpaEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline LTpaEnterRoomReq& operator=(LTpaEnterRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaEnterRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const LTpaEnterRoomReq*>(
               &_LTpaEnterRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LTpaEnterRoomReq* other);
  friend void swap(LTpaEnterRoomReq& a, LTpaEnterRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaEnterRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaEnterRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaEnterRoomReq& from);
  void MergeFrom(const LTpaEnterRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaEnterRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 4;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // uint32 tpa_server_id = 5;
  void clear_tpa_server_id();
  static const int kTpaServerIdFieldNumber = 5;
  ::google::protobuf::uint32 tpa_server_id() const;
  void set_tpa_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaEnterRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::uint32 tpa_server_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaEnterRoomReqImpl();
};
// -------------------------------------------------------------------

class LTpaEnterRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaEnterRoomResp) */ {
 public:
  LTpaEnterRoomResp();
  virtual ~LTpaEnterRoomResp();

  LTpaEnterRoomResp(const LTpaEnterRoomResp& from);

  inline LTpaEnterRoomResp& operator=(const LTpaEnterRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaEnterRoomResp(LTpaEnterRoomResp&& from) noexcept
    : LTpaEnterRoomResp() {
    *this = ::std::move(from);
  }

  inline LTpaEnterRoomResp& operator=(LTpaEnterRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaEnterRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaEnterRoomResp* internal_default_instance() {
    return reinterpret_cast<const LTpaEnterRoomResp*>(
               &_LTpaEnterRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LTpaEnterRoomResp* other);
  friend void swap(LTpaEnterRoomResp& a, LTpaEnterRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaEnterRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaEnterRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaEnterRoomResp& from);
  void MergeFrom(const LTpaEnterRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaEnterRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 4;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaEnterRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaEnterRoomRespImpl();
};
// -------------------------------------------------------------------

class LTpaAIEnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaAIEnterRoomReq) */ {
 public:
  LTpaAIEnterRoomReq();
  virtual ~LTpaAIEnterRoomReq();

  LTpaAIEnterRoomReq(const LTpaAIEnterRoomReq& from);

  inline LTpaAIEnterRoomReq& operator=(const LTpaAIEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaAIEnterRoomReq(LTpaAIEnterRoomReq&& from) noexcept
    : LTpaAIEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline LTpaAIEnterRoomReq& operator=(LTpaAIEnterRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaAIEnterRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaAIEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const LTpaAIEnterRoomReq*>(
               &_LTpaAIEnterRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LTpaAIEnterRoomReq* other);
  friend void swap(LTpaAIEnterRoomReq& a, LTpaAIEnterRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaAIEnterRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaAIEnterRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaAIEnterRoomReq& from);
  void MergeFrom(const LTpaAIEnterRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaAIEnterRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 4;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // string constant_token = 5;
  void clear_constant_token();
  static const int kConstantTokenFieldNumber = 5;
  const ::std::string& constant_token() const;
  void set_constant_token(const ::std::string& value);
  #if LANG_CXX11
  void set_constant_token(::std::string&& value);
  #endif
  void set_constant_token(const char* value);
  void set_constant_token(const char* value, size_t size);
  ::std::string* mutable_constant_token();
  ::std::string* release_constant_token();
  void set_allocated_constant_token(::std::string* constant_token);

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaAIEnterRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::internal::ArenaStringPtr constant_token_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaAIEnterRoomReqImpl();
};
// -------------------------------------------------------------------

class LTpaAIEnterRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaAIEnterRoomResp) */ {
 public:
  LTpaAIEnterRoomResp();
  virtual ~LTpaAIEnterRoomResp();

  LTpaAIEnterRoomResp(const LTpaAIEnterRoomResp& from);

  inline LTpaAIEnterRoomResp& operator=(const LTpaAIEnterRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaAIEnterRoomResp(LTpaAIEnterRoomResp&& from) noexcept
    : LTpaAIEnterRoomResp() {
    *this = ::std::move(from);
  }

  inline LTpaAIEnterRoomResp& operator=(LTpaAIEnterRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaAIEnterRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaAIEnterRoomResp* internal_default_instance() {
    return reinterpret_cast<const LTpaAIEnterRoomResp*>(
               &_LTpaAIEnterRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(LTpaAIEnterRoomResp* other);
  friend void swap(LTpaAIEnterRoomResp& a, LTpaAIEnterRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaAIEnterRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaAIEnterRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaAIEnterRoomResp& from);
  void MergeFrom(const LTpaAIEnterRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaAIEnterRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 4;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // string constant_token = 5;
  void clear_constant_token();
  static const int kConstantTokenFieldNumber = 5;
  const ::std::string& constant_token() const;
  void set_constant_token(const ::std::string& value);
  #if LANG_CXX11
  void set_constant_token(::std::string&& value);
  #endif
  void set_constant_token(const char* value);
  void set_constant_token(const char* value, size_t size);
  ::std::string* mutable_constant_token();
  ::std::string* release_constant_token();
  void set_allocated_constant_token(::std::string* constant_token);

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaAIEnterRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::internal::ArenaStringPtr constant_token_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaAIEnterRoomRespImpl();
};
// -------------------------------------------------------------------

class LTpaLeaveRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaLeaveRoomReq) */ {
 public:
  LTpaLeaveRoomReq();
  virtual ~LTpaLeaveRoomReq();

  LTpaLeaveRoomReq(const LTpaLeaveRoomReq& from);

  inline LTpaLeaveRoomReq& operator=(const LTpaLeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaLeaveRoomReq(LTpaLeaveRoomReq&& from) noexcept
    : LTpaLeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline LTpaLeaveRoomReq& operator=(LTpaLeaveRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaLeaveRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaLeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const LTpaLeaveRoomReq*>(
               &_LTpaLeaveRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(LTpaLeaveRoomReq* other);
  friend void swap(LTpaLeaveRoomReq& a, LTpaLeaveRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaLeaveRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaLeaveRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaLeaveRoomReq& from);
  void MergeFrom(const LTpaLeaveRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaLeaveRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaLeaveRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaLeaveRoomReqImpl();
};
// -------------------------------------------------------------------

class LTpaLeaveRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaLeaveRoomResp) */ {
 public:
  LTpaLeaveRoomResp();
  virtual ~LTpaLeaveRoomResp();

  LTpaLeaveRoomResp(const LTpaLeaveRoomResp& from);

  inline LTpaLeaveRoomResp& operator=(const LTpaLeaveRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaLeaveRoomResp(LTpaLeaveRoomResp&& from) noexcept
    : LTpaLeaveRoomResp() {
    *this = ::std::move(from);
  }

  inline LTpaLeaveRoomResp& operator=(LTpaLeaveRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaLeaveRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaLeaveRoomResp* internal_default_instance() {
    return reinterpret_cast<const LTpaLeaveRoomResp*>(
               &_LTpaLeaveRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LTpaLeaveRoomResp* other);
  friend void swap(LTpaLeaveRoomResp& a, LTpaLeaveRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaLeaveRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaLeaveRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaLeaveRoomResp& from);
  void MergeFrom(const LTpaLeaveRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaLeaveRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaLeaveRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaLeaveRoomRespImpl();
};
// -------------------------------------------------------------------

class LTpaNotifyDestroyRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaNotifyDestroyRoom) */ {
 public:
  LTpaNotifyDestroyRoom();
  virtual ~LTpaNotifyDestroyRoom();

  LTpaNotifyDestroyRoom(const LTpaNotifyDestroyRoom& from);

  inline LTpaNotifyDestroyRoom& operator=(const LTpaNotifyDestroyRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaNotifyDestroyRoom(LTpaNotifyDestroyRoom&& from) noexcept
    : LTpaNotifyDestroyRoom() {
    *this = ::std::move(from);
  }

  inline LTpaNotifyDestroyRoom& operator=(LTpaNotifyDestroyRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaNotifyDestroyRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaNotifyDestroyRoom* internal_default_instance() {
    return reinterpret_cast<const LTpaNotifyDestroyRoom*>(
               &_LTpaNotifyDestroyRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LTpaNotifyDestroyRoom* other);
  friend void swap(LTpaNotifyDestroyRoom& a, LTpaNotifyDestroyRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaNotifyDestroyRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaNotifyDestroyRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaNotifyDestroyRoom& from);
  void MergeFrom(const LTpaNotifyDestroyRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaNotifyDestroyRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaNotifyDestroyRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 reason_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaNotifyDestroyRoomImpl();
};
// -------------------------------------------------------------------

class LTpaSetPlayerStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaSetPlayerStateReq) */ {
 public:
  LTpaSetPlayerStateReq();
  virtual ~LTpaSetPlayerStateReq();

  LTpaSetPlayerStateReq(const LTpaSetPlayerStateReq& from);

  inline LTpaSetPlayerStateReq& operator=(const LTpaSetPlayerStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaSetPlayerStateReq(LTpaSetPlayerStateReq&& from) noexcept
    : LTpaSetPlayerStateReq() {
    *this = ::std::move(from);
  }

  inline LTpaSetPlayerStateReq& operator=(LTpaSetPlayerStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaSetPlayerStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaSetPlayerStateReq* internal_default_instance() {
    return reinterpret_cast<const LTpaSetPlayerStateReq*>(
               &_LTpaSetPlayerStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LTpaSetPlayerStateReq* other);
  friend void swap(LTpaSetPlayerStateReq& a, LTpaSetPlayerStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaSetPlayerStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaSetPlayerStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaSetPlayerStateReq& from);
  void MergeFrom(const LTpaSetPlayerStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaSetPlayerStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaSetPlayerStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaSetPlayerStateReqImpl();
};
// -------------------------------------------------------------------

class LTpaSetPlayerStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaSetPlayerStateResp) */ {
 public:
  LTpaSetPlayerStateResp();
  virtual ~LTpaSetPlayerStateResp();

  LTpaSetPlayerStateResp(const LTpaSetPlayerStateResp& from);

  inline LTpaSetPlayerStateResp& operator=(const LTpaSetPlayerStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaSetPlayerStateResp(LTpaSetPlayerStateResp&& from) noexcept
    : LTpaSetPlayerStateResp() {
    *this = ::std::move(from);
  }

  inline LTpaSetPlayerStateResp& operator=(LTpaSetPlayerStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaSetPlayerStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaSetPlayerStateResp* internal_default_instance() {
    return reinterpret_cast<const LTpaSetPlayerStateResp*>(
               &_LTpaSetPlayerStateResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(LTpaSetPlayerStateResp* other);
  friend void swap(LTpaSetPlayerStateResp& a, LTpaSetPlayerStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaSetPlayerStateResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaSetPlayerStateResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaSetPlayerStateResp& from);
  void MergeFrom(const LTpaSetPlayerStateResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaSetPlayerStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::LTPAPlayer& player_list(int index) const;
  ::Pb::LTPAPlayer* mutable_player_list(int index);
  ::Pb::LTPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
      player_list() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaSetPlayerStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer > player_list_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaSetPlayerStateRespImpl();
};
// -------------------------------------------------------------------

class LTpaSetDealerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaSetDealerReq) */ {
 public:
  LTpaSetDealerReq();
  virtual ~LTpaSetDealerReq();

  LTpaSetDealerReq(const LTpaSetDealerReq& from);

  inline LTpaSetDealerReq& operator=(const LTpaSetDealerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaSetDealerReq(LTpaSetDealerReq&& from) noexcept
    : LTpaSetDealerReq() {
    *this = ::std::move(from);
  }

  inline LTpaSetDealerReq& operator=(LTpaSetDealerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaSetDealerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaSetDealerReq* internal_default_instance() {
    return reinterpret_cast<const LTpaSetDealerReq*>(
               &_LTpaSetDealerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(LTpaSetDealerReq* other);
  friend void swap(LTpaSetDealerReq& a, LTpaSetDealerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaSetDealerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaSetDealerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaSetDealerReq& from);
  void MergeFrom(const LTpaSetDealerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaSetDealerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 dealer_role_id = 2;
  void clear_dealer_role_id();
  static const int kDealerRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 dealer_role_id() const;
  void set_dealer_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 dealer_player_id = 4;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // int32 dealer_seat = 5;
  void clear_dealer_seat();
  static const int kDealerSeatFieldNumber = 5;
  ::google::protobuf::int32 dealer_seat() const;
  void set_dealer_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaSetDealerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 dealer_role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::int32 dealer_seat_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaSetDealerReqImpl();
};
// -------------------------------------------------------------------

class LTpaSetDealerResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaSetDealerResp) */ {
 public:
  LTpaSetDealerResp();
  virtual ~LTpaSetDealerResp();

  LTpaSetDealerResp(const LTpaSetDealerResp& from);

  inline LTpaSetDealerResp& operator=(const LTpaSetDealerResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaSetDealerResp(LTpaSetDealerResp&& from) noexcept
    : LTpaSetDealerResp() {
    *this = ::std::move(from);
  }

  inline LTpaSetDealerResp& operator=(LTpaSetDealerResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaSetDealerResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaSetDealerResp* internal_default_instance() {
    return reinterpret_cast<const LTpaSetDealerResp*>(
               &_LTpaSetDealerResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(LTpaSetDealerResp* other);
  friend void swap(LTpaSetDealerResp& a, LTpaSetDealerResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaSetDealerResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaSetDealerResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaSetDealerResp& from);
  void MergeFrom(const LTpaSetDealerResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaSetDealerResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.LTPAPlayerState player_state = 7;
  int player_state_size() const;
  void clear_player_state();
  static const int kPlayerStateFieldNumber = 7;
  const ::Pb::LTPAPlayerState& player_state(int index) const;
  ::Pb::LTPAPlayerState* mutable_player_state(int index);
  ::Pb::LTPAPlayerState* add_player_state();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >*
      mutable_player_state();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >&
      player_state() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 dealer_role_id = 2;
  void clear_dealer_role_id();
  static const int kDealerRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 dealer_role_id() const;
  void set_dealer_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 dealer_player_id = 4;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // uint32 hand_id = 5;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 5;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // uint32 max_spent = 6;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 6;
  ::google::protobuf::uint32 max_spent() const;
  void set_max_spent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaSetDealerResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState > player_state_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 dealer_role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::uint32 max_spent_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaSetDealerRespImpl();
};
// -------------------------------------------------------------------

class LTpaQueryCardsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryCardsReq) */ {
 public:
  LTpaQueryCardsReq();
  virtual ~LTpaQueryCardsReq();

  LTpaQueryCardsReq(const LTpaQueryCardsReq& from);

  inline LTpaQueryCardsReq& operator=(const LTpaQueryCardsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryCardsReq(LTpaQueryCardsReq&& from) noexcept
    : LTpaQueryCardsReq() {
    *this = ::std::move(from);
  }

  inline LTpaQueryCardsReq& operator=(LTpaQueryCardsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryCardsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryCardsReq* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryCardsReq*>(
               &_LTpaQueryCardsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(LTpaQueryCardsReq* other);
  friend void swap(LTpaQueryCardsReq& a, LTpaQueryCardsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryCardsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryCardsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryCardsReq& from);
  void MergeFrom(const LTpaQueryCardsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryCardsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // int32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryCardsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::int32 round_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryCardsReqImpl();
};
// -------------------------------------------------------------------

class LTpaQueryCardsResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryCardsResp) */ {
 public:
  LTpaQueryCardsResp();
  virtual ~LTpaQueryCardsResp();

  LTpaQueryCardsResp(const LTpaQueryCardsResp& from);

  inline LTpaQueryCardsResp& operator=(const LTpaQueryCardsResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryCardsResp(LTpaQueryCardsResp&& from) noexcept
    : LTpaQueryCardsResp() {
    *this = ::std::move(from);
  }

  inline LTpaQueryCardsResp& operator=(LTpaQueryCardsResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryCardsResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryCardsResp* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryCardsResp*>(
               &_LTpaQueryCardsResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(LTpaQueryCardsResp* other);
  friend void swap(LTpaQueryCardsResp& a, LTpaQueryCardsResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryCardsResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryCardsResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryCardsResp& from);
  void MergeFrom(const LTpaQueryCardsResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryCardsResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 flop_cards = 5;
  int flop_cards_size() const;
  void clear_flop_cards();
  static const int kFlopCardsFieldNumber = 5;
  ::google::protobuf::int32 flop_cards(int index) const;
  void set_flop_cards(int index, ::google::protobuf::int32 value);
  void add_flop_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flop_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flop_cards();

  // repeated int32 turn_cards = 6;
  int turn_cards_size() const;
  void clear_turn_cards();
  static const int kTurnCardsFieldNumber = 6;
  ::google::protobuf::int32 turn_cards(int index) const;
  void set_turn_cards(int index, ::google::protobuf::int32 value);
  void add_turn_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      turn_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_turn_cards();

  // repeated int32 river_cards = 7;
  int river_cards_size() const;
  void clear_river_cards();
  static const int kRiverCardsFieldNumber = 7;
  ::google::protobuf::int32 river_cards(int index) const;
  void set_river_cards(int index, ::google::protobuf::int32 value);
  void add_river_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      river_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_river_cards();

  // repeated .Pb.LTPAPlayerCards player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  const ::Pb::LTPAPlayerCards& player_cards(int index) const;
  ::Pb::LTPAPlayerCards* mutable_player_cards(int index);
  ::Pb::LTPAPlayerCards* add_player_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerCards >*
      mutable_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerCards >&
      player_cards() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // int32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint32 finished = 4;
  void clear_finished();
  static const int kFinishedFieldNumber = 4;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // uint32 dealer_role_id = 9;
  void clear_dealer_role_id();
  static const int kDealerRoleIdFieldNumber = 9;
  ::google::protobuf::uint32 dealer_role_id() const;
  void set_dealer_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryCardsResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flop_cards_;
  mutable int _flop_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > turn_cards_;
  mutable int _turn_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > river_cards_;
  mutable int _river_cards_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerCards > player_cards_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint32 finished_;
  ::google::protobuf::uint32 dealer_role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryCardsRespImpl();
};
// -------------------------------------------------------------------

class LTpaQueryAllowActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryAllowActionReq) */ {
 public:
  LTpaQueryAllowActionReq();
  virtual ~LTpaQueryAllowActionReq();

  LTpaQueryAllowActionReq(const LTpaQueryAllowActionReq& from);

  inline LTpaQueryAllowActionReq& operator=(const LTpaQueryAllowActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryAllowActionReq(LTpaQueryAllowActionReq&& from) noexcept
    : LTpaQueryAllowActionReq() {
    *this = ::std::move(from);
  }

  inline LTpaQueryAllowActionReq& operator=(LTpaQueryAllowActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryAllowActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryAllowActionReq* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryAllowActionReq*>(
               &_LTpaQueryAllowActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(LTpaQueryAllowActionReq* other);
  friend void swap(LTpaQueryAllowActionReq& a, LTpaQueryAllowActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryAllowActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryAllowActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryAllowActionReq& from);
  void MergeFrom(const LTpaQueryAllowActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryAllowActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryAllowActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryAllowActionReqImpl();
};
// -------------------------------------------------------------------

class LTpaQueryAllowActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryAllowActionResp) */ {
 public:
  LTpaQueryAllowActionResp();
  virtual ~LTpaQueryAllowActionResp();

  LTpaQueryAllowActionResp(const LTpaQueryAllowActionResp& from);

  inline LTpaQueryAllowActionResp& operator=(const LTpaQueryAllowActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryAllowActionResp(LTpaQueryAllowActionResp&& from) noexcept
    : LTpaQueryAllowActionResp() {
    *this = ::std::move(from);
  }

  inline LTpaQueryAllowActionResp& operator=(LTpaQueryAllowActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryAllowActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryAllowActionResp* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryAllowActionResp*>(
               &_LTpaQueryAllowActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(LTpaQueryAllowActionResp* other);
  friend void swap(LTpaQueryAllowActionResp& a, LTpaQueryAllowActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryAllowActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryAllowActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryAllowActionResp& from);
  void MergeFrom(const LTpaQueryAllowActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryAllowActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 5;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 5;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryAllowActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryAllowActionRespImpl();
};
// -------------------------------------------------------------------

class LTpaQueryMatchStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryMatchStateReq) */ {
 public:
  LTpaQueryMatchStateReq();
  virtual ~LTpaQueryMatchStateReq();

  LTpaQueryMatchStateReq(const LTpaQueryMatchStateReq& from);

  inline LTpaQueryMatchStateReq& operator=(const LTpaQueryMatchStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryMatchStateReq(LTpaQueryMatchStateReq&& from) noexcept
    : LTpaQueryMatchStateReq() {
    *this = ::std::move(from);
  }

  inline LTpaQueryMatchStateReq& operator=(LTpaQueryMatchStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryMatchStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryMatchStateReq* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryMatchStateReq*>(
               &_LTpaQueryMatchStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(LTpaQueryMatchStateReq* other);
  friend void swap(LTpaQueryMatchStateReq& a, LTpaQueryMatchStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryMatchStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryMatchStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryMatchStateReq& from);
  void MergeFrom(const LTpaQueryMatchStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryMatchStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // int32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryMatchStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::int32 round_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryMatchStateReqImpl();
};
// -------------------------------------------------------------------

class LTpaQueryMatchStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryMatchStateResp) */ {
 public:
  LTpaQueryMatchStateResp();
  virtual ~LTpaQueryMatchStateResp();

  LTpaQueryMatchStateResp(const LTpaQueryMatchStateResp& from);

  inline LTpaQueryMatchStateResp& operator=(const LTpaQueryMatchStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryMatchStateResp(LTpaQueryMatchStateResp&& from) noexcept
    : LTpaQueryMatchStateResp() {
    *this = ::std::move(from);
  }

  inline LTpaQueryMatchStateResp& operator=(LTpaQueryMatchStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryMatchStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryMatchStateResp* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryMatchStateResp*>(
               &_LTpaQueryMatchStateResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(LTpaQueryMatchStateResp* other);
  friend void swap(LTpaQueryMatchStateResp& a, LTpaQueryMatchStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryMatchStateResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryMatchStateResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryMatchStateResp& from);
  void MergeFrom(const LTpaQueryMatchStateResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryMatchStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 flop_cards = 8;
  int flop_cards_size() const;
  void clear_flop_cards();
  static const int kFlopCardsFieldNumber = 8;
  ::google::protobuf::int32 flop_cards(int index) const;
  void set_flop_cards(int index, ::google::protobuf::int32 value);
  void add_flop_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flop_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flop_cards();

  // repeated int32 turn_cards = 9;
  int turn_cards_size() const;
  void clear_turn_cards();
  static const int kTurnCardsFieldNumber = 9;
  ::google::protobuf::int32 turn_cards(int index) const;
  void set_turn_cards(int index, ::google::protobuf::int32 value);
  void add_turn_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      turn_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_turn_cards();

  // repeated int32 river_cards = 10;
  int river_cards_size() const;
  void clear_river_cards();
  static const int kRiverCardsFieldNumber = 10;
  ::google::protobuf::int32 river_cards(int index) const;
  void set_river_cards(int index, ::google::protobuf::int32 value);
  void add_river_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      river_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_river_cards();

  // repeated uint32 allow_raise = 11;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 11;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // repeated .Pb.LTPAPlayerState player_state = 12;
  int player_state_size() const;
  void clear_player_state();
  static const int kPlayerStateFieldNumber = 12;
  const ::Pb::LTPAPlayerState& player_state(int index) const;
  ::Pb::LTPAPlayerState* mutable_player_state(int index);
  ::Pb::LTPAPlayerState* add_player_state();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >*
      mutable_player_state();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >&
      player_state() const;

  // repeated .Pb.LTPAPlayerAction player_action = 13;
  int player_action_size() const;
  void clear_player_action();
  static const int kPlayerActionFieldNumber = 13;
  const ::Pb::LTPAPlayerAction& player_action(int index) const;
  ::Pb::LTPAPlayerAction* mutable_player_action(int index);
  ::Pb::LTPAPlayerAction* add_player_action();
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerAction >*
      mutable_player_action();
  const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerAction >&
      player_action() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 dealer_role_id = 2;
  void clear_dealer_role_id();
  static const int kDealerRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 dealer_role_id() const;
  void set_dealer_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 hand_id = 4;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 4;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // int32 round = 5;
  void clear_round();
  static const int kRoundFieldNumber = 5;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint32 finished = 6;
  void clear_finished();
  static const int kFinishedFieldNumber = 6;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // uint32 max_spent = 7;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 7;
  ::google::protobuf::uint32 max_spent() const;
  void set_max_spent(::google::protobuf::uint32 value);

  // uint32 turn_role_id = 14;
  void clear_turn_role_id();
  static const int kTurnRoleIdFieldNumber = 14;
  ::google::protobuf::uint32 turn_role_id() const;
  void set_turn_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryMatchStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flop_cards_;
  mutable int _flop_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > turn_cards_;
  mutable int _turn_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > river_cards_;
  mutable int _river_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState > player_state_;
  ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerAction > player_action_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 dealer_role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint32 finished_;
  ::google::protobuf::uint32 max_spent_;
  ::google::protobuf::uint32 turn_role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryMatchStateRespImpl();
};
// -------------------------------------------------------------------

class LTpaReportActionTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaReportActionTokenReq) */ {
 public:
  LTpaReportActionTokenReq();
  virtual ~LTpaReportActionTokenReq();

  LTpaReportActionTokenReq(const LTpaReportActionTokenReq& from);

  inline LTpaReportActionTokenReq& operator=(const LTpaReportActionTokenReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaReportActionTokenReq(LTpaReportActionTokenReq&& from) noexcept
    : LTpaReportActionTokenReq() {
    *this = ::std::move(from);
  }

  inline LTpaReportActionTokenReq& operator=(LTpaReportActionTokenReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaReportActionTokenReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaReportActionTokenReq* internal_default_instance() {
    return reinterpret_cast<const LTpaReportActionTokenReq*>(
               &_LTpaReportActionTokenReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(LTpaReportActionTokenReq* other);
  friend void swap(LTpaReportActionTokenReq& a, LTpaReportActionTokenReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaReportActionTokenReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaReportActionTokenReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaReportActionTokenReq& from);
  void MergeFrom(const LTpaReportActionTokenReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaReportActionTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaReportActionTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaReportActionTokenReqImpl();
};
// -------------------------------------------------------------------

class LTpaReportActionTokenResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaReportActionTokenResp) */ {
 public:
  LTpaReportActionTokenResp();
  virtual ~LTpaReportActionTokenResp();

  LTpaReportActionTokenResp(const LTpaReportActionTokenResp& from);

  inline LTpaReportActionTokenResp& operator=(const LTpaReportActionTokenResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaReportActionTokenResp(LTpaReportActionTokenResp&& from) noexcept
    : LTpaReportActionTokenResp() {
    *this = ::std::move(from);
  }

  inline LTpaReportActionTokenResp& operator=(LTpaReportActionTokenResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaReportActionTokenResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaReportActionTokenResp* internal_default_instance() {
    return reinterpret_cast<const LTpaReportActionTokenResp*>(
               &_LTpaReportActionTokenResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(LTpaReportActionTokenResp* other);
  friend void swap(LTpaReportActionTokenResp& a, LTpaReportActionTokenResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaReportActionTokenResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaReportActionTokenResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaReportActionTokenResp& from);
  void MergeFrom(const LTpaReportActionTokenResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaReportActionTokenResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaReportActionTokenResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaReportActionTokenRespImpl();
};
// -------------------------------------------------------------------

class LTpaReportPlayerActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaReportPlayerActionReq) */ {
 public:
  LTpaReportPlayerActionReq();
  virtual ~LTpaReportPlayerActionReq();

  LTpaReportPlayerActionReq(const LTpaReportPlayerActionReq& from);

  inline LTpaReportPlayerActionReq& operator=(const LTpaReportPlayerActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaReportPlayerActionReq(LTpaReportPlayerActionReq&& from) noexcept
    : LTpaReportPlayerActionReq() {
    *this = ::std::move(from);
  }

  inline LTpaReportPlayerActionReq& operator=(LTpaReportPlayerActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaReportPlayerActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaReportPlayerActionReq* internal_default_instance() {
    return reinterpret_cast<const LTpaReportPlayerActionReq*>(
               &_LTpaReportPlayerActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(LTpaReportPlayerActionReq* other);
  friend void swap(LTpaReportPlayerActionReq& a, LTpaReportPlayerActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaReportPlayerActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaReportPlayerActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaReportPlayerActionReq& from);
  void MergeFrom(const LTpaReportPlayerActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaReportPlayerActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 action_type = 5;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 5;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaReportPlayerActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaReportPlayerActionReqImpl();
};
// -------------------------------------------------------------------

class LTpaReportPlayerActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaReportPlayerActionResp) */ {
 public:
  LTpaReportPlayerActionResp();
  virtual ~LTpaReportPlayerActionResp();

  LTpaReportPlayerActionResp(const LTpaReportPlayerActionResp& from);

  inline LTpaReportPlayerActionResp& operator=(const LTpaReportPlayerActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaReportPlayerActionResp(LTpaReportPlayerActionResp&& from) noexcept
    : LTpaReportPlayerActionResp() {
    *this = ::std::move(from);
  }

  inline LTpaReportPlayerActionResp& operator=(LTpaReportPlayerActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaReportPlayerActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaReportPlayerActionResp* internal_default_instance() {
    return reinterpret_cast<const LTpaReportPlayerActionResp*>(
               &_LTpaReportPlayerActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(LTpaReportPlayerActionResp* other);
  friend void swap(LTpaReportPlayerActionResp& a, LTpaReportPlayerActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaReportPlayerActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaReportPlayerActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaReportPlayerActionResp& from);
  void MergeFrom(const LTpaReportPlayerActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaReportPlayerActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 7;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 7;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 action_type = 5;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 5;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaReportPlayerActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaReportPlayerActionRespImpl();
};
// -------------------------------------------------------------------

class LTpaQueryAIActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryAIActionReq) */ {
 public:
  LTpaQueryAIActionReq();
  virtual ~LTpaQueryAIActionReq();

  LTpaQueryAIActionReq(const LTpaQueryAIActionReq& from);

  inline LTpaQueryAIActionReq& operator=(const LTpaQueryAIActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryAIActionReq(LTpaQueryAIActionReq&& from) noexcept
    : LTpaQueryAIActionReq() {
    *this = ::std::move(from);
  }

  inline LTpaQueryAIActionReq& operator=(LTpaQueryAIActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryAIActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryAIActionReq* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryAIActionReq*>(
               &_LTpaQueryAIActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(LTpaQueryAIActionReq* other);
  friend void swap(LTpaQueryAIActionReq& a, LTpaQueryAIActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryAIActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryAIActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryAIActionReq& from);
  void MergeFrom(const LTpaQueryAIActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryAIActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryAIActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryAIActionReqImpl();
};
// -------------------------------------------------------------------

class LTpaQueryAIActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.LTpaQueryAIActionResp) */ {
 public:
  LTpaQueryAIActionResp();
  virtual ~LTpaQueryAIActionResp();

  LTpaQueryAIActionResp(const LTpaQueryAIActionResp& from);

  inline LTpaQueryAIActionResp& operator=(const LTpaQueryAIActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LTpaQueryAIActionResp(LTpaQueryAIActionResp&& from) noexcept
    : LTpaQueryAIActionResp() {
    *this = ::std::move(from);
  }

  inline LTpaQueryAIActionResp& operator=(LTpaQueryAIActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LTpaQueryAIActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LTpaQueryAIActionResp* internal_default_instance() {
    return reinterpret_cast<const LTpaQueryAIActionResp*>(
               &_LTpaQueryAIActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(LTpaQueryAIActionResp* other);
  friend void swap(LTpaQueryAIActionResp& a, LTpaQueryAIActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LTpaQueryAIActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LTpaQueryAIActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LTpaQueryAIActionResp& from);
  void MergeFrom(const LTpaQueryAIActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LTpaQueryAIActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 7;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 7;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 tpa_room_id = 3;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint64 player_id = 4;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 action_type = 5;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 5;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.LTpaQueryAIActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsLTpaQueryAIActionRespImpl();
};
// -------------------------------------------------------------------

class TpaRedisPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaRedisPlayer) */ {
 public:
  TpaRedisPlayer();
  virtual ~TpaRedisPlayer();

  TpaRedisPlayer(const TpaRedisPlayer& from);

  inline TpaRedisPlayer& operator=(const TpaRedisPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaRedisPlayer(TpaRedisPlayer&& from) noexcept
    : TpaRedisPlayer() {
    *this = ::std::move(from);
  }

  inline TpaRedisPlayer& operator=(TpaRedisPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaRedisPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaRedisPlayer* internal_default_instance() {
    return reinterpret_cast<const TpaRedisPlayer*>(
               &_TpaRedisPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TpaRedisPlayer* other);
  friend void swap(TpaRedisPlayer& a, TpaRedisPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaRedisPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaRedisPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaRedisPlayer& from);
  void MergeFrom(const TpaRedisPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaRedisPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 seat = 3;
  void clear_seat();
  static const int kSeatFieldNumber = 3;
  ::google::protobuf::uint32 seat() const;
  void set_seat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaRedisPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 seat_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsTpaRedisPlayerImpl();
};
// -------------------------------------------------------------------

class TpaRedisPlayerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaRedisPlayerList) */ {
 public:
  TpaRedisPlayerList();
  virtual ~TpaRedisPlayerList();

  TpaRedisPlayerList(const TpaRedisPlayerList& from);

  inline TpaRedisPlayerList& operator=(const TpaRedisPlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaRedisPlayerList(TpaRedisPlayerList&& from) noexcept
    : TpaRedisPlayerList() {
    *this = ::std::move(from);
  }

  inline TpaRedisPlayerList& operator=(TpaRedisPlayerList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaRedisPlayerList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaRedisPlayerList* internal_default_instance() {
    return reinterpret_cast<const TpaRedisPlayerList*>(
               &_TpaRedisPlayerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TpaRedisPlayerList* other);
  friend void swap(TpaRedisPlayerList& a, TpaRedisPlayerList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaRedisPlayerList* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaRedisPlayerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaRedisPlayerList& from);
  void MergeFrom(const TpaRedisPlayerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaRedisPlayerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TpaRedisPlayer player_list = 1;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 1;
  const ::Pb::TpaRedisPlayer& player_list(int index) const;
  ::Pb::TpaRedisPlayer* mutable_player_list(int index);
  ::Pb::TpaRedisPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TpaRedisPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TpaRedisPlayer >&
      player_list() const;

  // @@protoc_insertion_point(class_scope:Pb.TpaRedisPlayerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TpaRedisPlayer > player_list_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsTpaRedisPlayerListImpl();
};
// -------------------------------------------------------------------

class TpaAcpcMatchState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaAcpcMatchState) */ {
 public:
  TpaAcpcMatchState();
  virtual ~TpaAcpcMatchState();

  TpaAcpcMatchState(const TpaAcpcMatchState& from);

  inline TpaAcpcMatchState& operator=(const TpaAcpcMatchState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaAcpcMatchState(TpaAcpcMatchState&& from) noexcept
    : TpaAcpcMatchState() {
    *this = ::std::move(from);
  }

  inline TpaAcpcMatchState& operator=(TpaAcpcMatchState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaAcpcMatchState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaAcpcMatchState* internal_default_instance() {
    return reinterpret_cast<const TpaAcpcMatchState*>(
               &_TpaAcpcMatchState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TpaAcpcMatchState* other);
  friend void swap(TpaAcpcMatchState& a, TpaAcpcMatchState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaAcpcMatchState* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaAcpcMatchState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaAcpcMatchState& from);
  void MergeFrom(const TpaAcpcMatchState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaAcpcMatchState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 spent = 11;
  int spent_size() const;
  void clear_spent();
  static const int kSpentFieldNumber = 11;
  ::google::protobuf::int32 spent(int index) const;
  void set_spent(int index, ::google::protobuf::int32 value);
  void add_spent(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      spent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_spent();

  // repeated .Pb.AcpcRound round_actions = 12;
  int round_actions_size() const;
  void clear_round_actions();
  static const int kRoundActionsFieldNumber = 12;
  const ::Pb::AcpcRound& round_actions(int index) const;
  ::Pb::AcpcRound* mutable_round_actions(int index);
  ::Pb::AcpcRound* add_round_actions();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcRound >*
      mutable_round_actions();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcRound >&
      round_actions() const;

  // repeated int32 fold_players = 13;
  int fold_players_size() const;
  void clear_fold_players();
  static const int kFoldPlayersFieldNumber = 13;
  ::google::protobuf::int32 fold_players(int index) const;
  void set_fold_players(int index, ::google::protobuf::int32 value);
  void add_fold_players(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fold_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fold_players();

  // repeated .Pb.AcpcCard board_cards = 14;
  int board_cards_size() const;
  void clear_board_cards();
  static const int kBoardCardsFieldNumber = 14;
  const ::Pb::AcpcCard& board_cards(int index) const;
  ::Pb::AcpcCard* mutable_board_cards(int index);
  ::Pb::AcpcCard* add_board_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_board_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      board_cards() const;

  // repeated .Pb.AcpcCard hole_cards = 15;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 15;
  const ::Pb::AcpcCard& hole_cards(int index) const;
  ::Pb::AcpcCard* mutable_hole_cards(int index);
  ::Pb::AcpcCard* add_hole_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
      mutable_hole_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
      hole_cards() const;

  // repeated .Pb.HoleCards player_hole_cards = 16;
  int player_hole_cards_size() const;
  void clear_player_hole_cards();
  static const int kPlayerHoleCardsFieldNumber = 16;
  const ::Pb::HoleCards& player_hole_cards(int index) const;
  ::Pb::HoleCards* mutable_player_hole_cards(int index);
  ::Pb::HoleCards* add_player_hole_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >*
      mutable_player_hole_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >&
      player_hole_cards() const;

  // uint64 local_room_id = 1;
  void clear_local_room_id();
  static const int kLocalRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 local_room_id() const;
  void set_local_room_id(::google::protobuf::uint64 value);

  // uint32 tpa_room_id = 2;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 role_id = 3;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 role_seat = 4;
  void clear_role_seat();
  static const int kRoleSeatFieldNumber = 4;
  ::google::protobuf::int32 role_seat() const;
  void set_role_seat(::google::protobuf::int32 value);

  // int32 little_blind_seat = 5;
  void clear_little_blind_seat();
  static const int kLittleBlindSeatFieldNumber = 5;
  ::google::protobuf::int32 little_blind_seat() const;
  void set_little_blind_seat(::google::protobuf::int32 value);

  // int32 hand_id = 6;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 6;
  ::google::protobuf::int32 hand_id() const;
  void set_hand_id(::google::protobuf::int32 value);

  // int32 max_spent = 7;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 7;
  ::google::protobuf::int32 max_spent() const;
  void set_max_spent(::google::protobuf::int32 value);

  // int32 min_nolimit_raise_to = 8;
  void clear_min_nolimit_raise_to();
  static const int kMinNolimitRaiseToFieldNumber = 8;
  ::google::protobuf::int32 min_nolimit_raise_to() const;
  void set_min_nolimit_raise_to(::google::protobuf::int32 value);

  // int32 round = 9;
  void clear_round();
  static const int kRoundFieldNumber = 9;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // int32 finished = 10;
  void clear_finished();
  static const int kFinishedFieldNumber = 10;
  ::google::protobuf::int32 finished() const;
  void set_finished(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaAcpcMatchState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > spent_;
  mutable int _spent_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcRound > round_actions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fold_players_;
  mutable int _fold_players_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > board_cards_;
  ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard > hole_cards_;
  ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards > player_hole_cards_;
  ::google::protobuf::uint64 local_room_id_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 role_seat_;
  ::google::protobuf::int32 little_blind_seat_;
  ::google::protobuf::int32 hand_id_;
  ::google::protobuf::int32 max_spent_;
  ::google::protobuf::int32 min_nolimit_raise_to_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::int32 finished_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsTpaAcpcMatchStateImpl();
};
// -------------------------------------------------------------------

class RoomAttrForTpa : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.RoomAttrForTpa) */ {
 public:
  RoomAttrForTpa();
  virtual ~RoomAttrForTpa();

  RoomAttrForTpa(const RoomAttrForTpa& from);

  inline RoomAttrForTpa& operator=(const RoomAttrForTpa& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomAttrForTpa(RoomAttrForTpa&& from) noexcept
    : RoomAttrForTpa() {
    *this = ::std::move(from);
  }

  inline RoomAttrForTpa& operator=(RoomAttrForTpa&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomAttrForTpa& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoomAttrForTpa* internal_default_instance() {
    return reinterpret_cast<const RoomAttrForTpa*>(
               &_RoomAttrForTpa_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(RoomAttrForTpa* other);
  friend void swap(RoomAttrForTpa& a, RoomAttrForTpa& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomAttrForTpa* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomAttrForTpa* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomAttrForTpa& from);
  void MergeFrom(const RoomAttrForTpa& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomAttrForTpa* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 tpa_room_id = 1;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // uint32 tpa_server_id = 2;
  void clear_tpa_server_id();
  static const int kTpaServerIdFieldNumber = 2;
  ::google::protobuf::uint32 tpa_server_id() const;
  void set_tpa_server_id(::google::protobuf::uint32 value);

  // int32 wait_robot_aciton = 3;
  void clear_wait_robot_aciton();
  static const int kWaitRobotAcitonFieldNumber = 3;
  ::google::protobuf::int32 wait_robot_aciton() const;
  void set_wait_robot_aciton(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.RoomAttrForTpa)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 tpa_room_id_;
  ::google::protobuf::uint32 tpa_server_id_;
  ::google::protobuf::int32 wait_robot_aciton_;
  mutable int _cached_size_;
  friend struct ::protobuf_ltpa_2eproto::TableStruct;
  friend void ::protobuf_ltpa_2eproto::InitDefaultsRoomAttrForTpaImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LTPAPlayer

// uint32 role_id = 1;
inline void LTPAPlayer::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayer::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayer.role_id)
  return role_id_;
}
inline void LTPAPlayer::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayer.role_id)
}

// uint64 player_id = 2;
inline void LTPAPlayer::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTPAPlayer::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayer.player_id)
  return player_id_;
}
inline void LTPAPlayer::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayer.player_id)
}

// int32 seat = 3;
inline void LTPAPlayer::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayer::seat() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayer.seat)
  return seat_;
}
inline void LTPAPlayer::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayer.seat)
}

// int32 is_ready = 4;
inline void LTPAPlayer::clear_is_ready() {
  is_ready_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayer::is_ready() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayer.is_ready)
  return is_ready_;
}
inline void LTPAPlayer::set_is_ready(::google::protobuf::int32 value) {
  
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayer.is_ready)
}

// int32 money = 5;
inline void LTPAPlayer::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayer::money() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayer.money)
  return money_;
}
inline void LTPAPlayer::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayer.money)
}

// -------------------------------------------------------------------

// LTPAPlayerState

// uint32 role_id = 1;
inline void LTPAPlayerState::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerState::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.role_id)
  return role_id_;
}
inline void LTPAPlayerState::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.role_id)
}

// uint64 player_id = 2;
inline void LTPAPlayerState::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTPAPlayerState::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.player_id)
  return player_id_;
}
inline void LTPAPlayerState::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.player_id)
}

// int32 seat = 3;
inline void LTPAPlayerState::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayerState::seat() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.seat)
  return seat_;
}
inline void LTPAPlayerState::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.seat)
}

// uint32 spent = 4;
inline void LTPAPlayerState::clear_spent() {
  spent_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerState::spent() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.spent)
  return spent_;
}
inline void LTPAPlayerState::set_spent(::google::protobuf::uint32 value) {
  
  spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.spent)
}

// uint32 fold = 5;
inline void LTPAPlayerState::clear_fold() {
  fold_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerState::fold() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.fold)
  return fold_;
}
inline void LTPAPlayerState::set_fold(::google::protobuf::uint32 value) {
  
  fold_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.fold)
}

// repeated int32 hole_cards = 6;
inline int LTPAPlayerState::hole_cards_size() const {
  return hole_cards_.size();
}
inline void LTPAPlayerState::clear_hole_cards() {
  hole_cards_.Clear();
}
inline ::google::protobuf::int32 LTPAPlayerState::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerState.hole_cards)
  return hole_cards_.Get(index);
}
inline void LTPAPlayerState::set_hole_cards(int index, ::google::protobuf::int32 value) {
  hole_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerState.hole_cards)
}
inline void LTPAPlayerState::add_hole_cards(::google::protobuf::int32 value) {
  hole_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTPAPlayerState.hole_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTPAPlayerState::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTPAPlayerState.hole_cards)
  return hole_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTPAPlayerState::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTPAPlayerState.hole_cards)
  return &hole_cards_;
}

// -------------------------------------------------------------------

// LTPAPlayerAction

// uint32 role_id = 1;
inline void LTPAPlayerAction::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerAction::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.role_id)
  return role_id_;
}
inline void LTPAPlayerAction::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.role_id)
}

// uint64 player_id = 2;
inline void LTPAPlayerAction::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTPAPlayerAction::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.player_id)
  return player_id_;
}
inline void LTPAPlayerAction::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.player_id)
}

// int32 seat = 3;
inline void LTPAPlayerAction::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayerAction::seat() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.seat)
  return seat_;
}
inline void LTPAPlayerAction::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.seat)
}

// int32 round = 4;
inline void LTPAPlayerAction::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayerAction::round() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.round)
  return round_;
}
inline void LTPAPlayerAction::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.round)
}

// uint32 type = 5;
inline void LTPAPlayerAction::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerAction::type() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.type)
  return type_;
}
inline void LTPAPlayerAction::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.type)
}

// int32 size = 6;
inline void LTPAPlayerAction::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 LTPAPlayerAction::size() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerAction.size)
  return size_;
}
inline void LTPAPlayerAction::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerAction.size)
}

// -------------------------------------------------------------------

// LTPAPlayerCards

// uint32 role_id = 1;
inline void LTPAPlayerCards::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTPAPlayerCards::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerCards.role_id)
  return role_id_;
}
inline void LTPAPlayerCards::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerCards.role_id)
}

// repeated int32 hole_cards = 2;
inline int LTPAPlayerCards::hole_cards_size() const {
  return hole_cards_.size();
}
inline void LTPAPlayerCards::clear_hole_cards() {
  hole_cards_.Clear();
}
inline ::google::protobuf::int32 LTPAPlayerCards::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTPAPlayerCards.hole_cards)
  return hole_cards_.Get(index);
}
inline void LTPAPlayerCards::set_hole_cards(int index, ::google::protobuf::int32 value) {
  hole_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTPAPlayerCards.hole_cards)
}
inline void LTPAPlayerCards::add_hole_cards(::google::protobuf::int32 value) {
  hole_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTPAPlayerCards.hole_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTPAPlayerCards::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTPAPlayerCards.hole_cards)
  return hole_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTPAPlayerCards::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTPAPlayerCards.hole_cards)
  return &hole_cards_;
}

// -------------------------------------------------------------------

// LTpaEnterRoomReq

// uint64 local_room_id = 1;
inline void LTpaEnterRoomReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaEnterRoomReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomReq.local_room_id)
  return local_room_id_;
}
inline void LTpaEnterRoomReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaEnterRoomReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaEnterRoomReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaEnterRoomReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomReq.tpa_room_id)
}

// uint32 game_type = 3;
inline void LTpaEnterRoomReq::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaEnterRoomReq::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomReq.game_type)
  return game_type_;
}
inline void LTpaEnterRoomReq::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomReq.game_type)
}

// repeated .Pb.LTPAPlayer player_list = 4;
inline int LTpaEnterRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void LTpaEnterRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaEnterRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaEnterRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaEnterRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaEnterRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaEnterRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaEnterRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaEnterRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaEnterRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaEnterRoomReq.player_list)
  return player_list_;
}

// uint32 tpa_server_id = 5;
inline void LTpaEnterRoomReq::clear_tpa_server_id() {
  tpa_server_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaEnterRoomReq::tpa_server_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomReq.tpa_server_id)
  return tpa_server_id_;
}
inline void LTpaEnterRoomReq::set_tpa_server_id(::google::protobuf::uint32 value) {
  
  tpa_server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomReq.tpa_server_id)
}

// -------------------------------------------------------------------

// LTpaEnterRoomResp

// uint64 local_room_id = 1;
inline void LTpaEnterRoomResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaEnterRoomResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomResp.local_room_id)
  return local_room_id_;
}
inline void LTpaEnterRoomResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomResp.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaEnterRoomResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaEnterRoomResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaEnterRoomResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomResp.tpa_room_id)
}

// uint32 game_type = 3;
inline void LTpaEnterRoomResp::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaEnterRoomResp::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomResp.game_type)
  return game_type_;
}
inline void LTpaEnterRoomResp::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaEnterRoomResp.game_type)
}

// repeated .Pb.LTPAPlayer player_list = 4;
inline int LTpaEnterRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void LTpaEnterRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaEnterRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaEnterRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaEnterRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaEnterRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaEnterRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaEnterRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaEnterRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaEnterRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaEnterRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaEnterRoomResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// LTpaAIEnterRoomReq

// uint64 local_room_id = 1;
inline void LTpaAIEnterRoomReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaAIEnterRoomReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomReq.local_room_id)
  return local_room_id_;
}
inline void LTpaAIEnterRoomReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaAIEnterRoomReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaAIEnterRoomReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaAIEnterRoomReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomReq.tpa_room_id)
}

// uint32 game_type = 3;
inline void LTpaAIEnterRoomReq::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaAIEnterRoomReq::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomReq.game_type)
  return game_type_;
}
inline void LTpaAIEnterRoomReq::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomReq.game_type)
}

// repeated .Pb.LTPAPlayer player_list = 4;
inline int LTpaAIEnterRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void LTpaAIEnterRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaAIEnterRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaAIEnterRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaAIEnterRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaAIEnterRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaAIEnterRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaAIEnterRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaAIEnterRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaAIEnterRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaAIEnterRoomReq.player_list)
  return player_list_;
}

// string constant_token = 5;
inline void LTpaAIEnterRoomReq::clear_constant_token() {
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LTpaAIEnterRoomReq::constant_token() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomReq.constant_token)
  return constant_token_.GetNoArena();
}
inline void LTpaAIEnterRoomReq::set_constant_token(const ::std::string& value) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomReq.constant_token)
}
#if LANG_CXX11
inline void LTpaAIEnterRoomReq::set_constant_token(::std::string&& value) {
  
  constant_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.LTpaAIEnterRoomReq.constant_token)
}
#endif
inline void LTpaAIEnterRoomReq::set_constant_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.LTpaAIEnterRoomReq.constant_token)
}
inline void LTpaAIEnterRoomReq::set_constant_token(const char* value, size_t size) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.LTpaAIEnterRoomReq.constant_token)
}
inline ::std::string* LTpaAIEnterRoomReq::mutable_constant_token() {
  
  // @@protoc_insertion_point(field_mutable:Pb.LTpaAIEnterRoomReq.constant_token)
  return constant_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LTpaAIEnterRoomReq::release_constant_token() {
  // @@protoc_insertion_point(field_release:Pb.LTpaAIEnterRoomReq.constant_token)
  
  return constant_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTpaAIEnterRoomReq::set_allocated_constant_token(::std::string* constant_token) {
  if (constant_token != NULL) {
    
  } else {
    
  }
  constant_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constant_token);
  // @@protoc_insertion_point(field_set_allocated:Pb.LTpaAIEnterRoomReq.constant_token)
}

// -------------------------------------------------------------------

// LTpaAIEnterRoomResp

// uint64 local_room_id = 1;
inline void LTpaAIEnterRoomResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaAIEnterRoomResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomResp.local_room_id)
  return local_room_id_;
}
inline void LTpaAIEnterRoomResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomResp.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaAIEnterRoomResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaAIEnterRoomResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaAIEnterRoomResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomResp.tpa_room_id)
}

// uint32 game_type = 3;
inline void LTpaAIEnterRoomResp::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaAIEnterRoomResp::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomResp.game_type)
  return game_type_;
}
inline void LTpaAIEnterRoomResp::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomResp.game_type)
}

// repeated .Pb.LTPAPlayer player_list = 4;
inline int LTpaAIEnterRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void LTpaAIEnterRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaAIEnterRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaAIEnterRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaAIEnterRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaAIEnterRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaAIEnterRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaAIEnterRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaAIEnterRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaAIEnterRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaAIEnterRoomResp.player_list)
  return player_list_;
}

// string constant_token = 5;
inline void LTpaAIEnterRoomResp::clear_constant_token() {
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LTpaAIEnterRoomResp::constant_token() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaAIEnterRoomResp.constant_token)
  return constant_token_.GetNoArena();
}
inline void LTpaAIEnterRoomResp::set_constant_token(const ::std::string& value) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.LTpaAIEnterRoomResp.constant_token)
}
#if LANG_CXX11
inline void LTpaAIEnterRoomResp::set_constant_token(::std::string&& value) {
  
  constant_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.LTpaAIEnterRoomResp.constant_token)
}
#endif
inline void LTpaAIEnterRoomResp::set_constant_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.LTpaAIEnterRoomResp.constant_token)
}
inline void LTpaAIEnterRoomResp::set_constant_token(const char* value, size_t size) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.LTpaAIEnterRoomResp.constant_token)
}
inline ::std::string* LTpaAIEnterRoomResp::mutable_constant_token() {
  
  // @@protoc_insertion_point(field_mutable:Pb.LTpaAIEnterRoomResp.constant_token)
  return constant_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LTpaAIEnterRoomResp::release_constant_token() {
  // @@protoc_insertion_point(field_release:Pb.LTpaAIEnterRoomResp.constant_token)
  
  return constant_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTpaAIEnterRoomResp::set_allocated_constant_token(::std::string* constant_token) {
  if (constant_token != NULL) {
    
  } else {
    
  }
  constant_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constant_token);
  // @@protoc_insertion_point(field_set_allocated:Pb.LTpaAIEnterRoomResp.constant_token)
}

// -------------------------------------------------------------------

// LTpaLeaveRoomReq

// uint64 local_room_id = 1;
inline void LTpaLeaveRoomReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaLeaveRoomReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomReq.local_room_id)
  return local_room_id_;
}
inline void LTpaLeaveRoomReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaLeaveRoomReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaLeaveRoomReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaLeaveRoomReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaLeaveRoomReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaLeaveRoomReq.tpa_room_id)
}

// repeated .Pb.LTPAPlayer player_list = 3;
inline int LTpaLeaveRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void LTpaLeaveRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaLeaveRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaLeaveRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaLeaveRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaLeaveRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaLeaveRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaLeaveRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaLeaveRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaLeaveRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaLeaveRoomReq.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// LTpaLeaveRoomResp

// uint64 local_room_id = 1;
inline void LTpaLeaveRoomResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaLeaveRoomResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomResp.local_room_id)
  return local_room_id_;
}
inline void LTpaLeaveRoomResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaLeaveRoomResp.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaLeaveRoomResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaLeaveRoomResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaLeaveRoomResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaLeaveRoomResp.tpa_room_id)
}

// repeated .Pb.LTPAPlayer player_list = 3;
inline int LTpaLeaveRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void LTpaLeaveRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaLeaveRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaLeaveRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaLeaveRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaLeaveRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaLeaveRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaLeaveRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaLeaveRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaLeaveRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaLeaveRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaLeaveRoomResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// LTpaNotifyDestroyRoom

// uint64 local_room_id = 1;
inline void LTpaNotifyDestroyRoom::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaNotifyDestroyRoom::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaNotifyDestroyRoom.local_room_id)
  return local_room_id_;
}
inline void LTpaNotifyDestroyRoom::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaNotifyDestroyRoom.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaNotifyDestroyRoom::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaNotifyDestroyRoom::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaNotifyDestroyRoom.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaNotifyDestroyRoom::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaNotifyDestroyRoom.tpa_room_id)
}

// uint32 reason = 3;
inline void LTpaNotifyDestroyRoom::clear_reason() {
  reason_ = 0u;
}
inline ::google::protobuf::uint32 LTpaNotifyDestroyRoom::reason() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaNotifyDestroyRoom.reason)
  return reason_;
}
inline void LTpaNotifyDestroyRoom::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaNotifyDestroyRoom.reason)
}

// -------------------------------------------------------------------

// LTpaSetPlayerStateReq

// uint64 local_room_id = 1;
inline void LTpaSetPlayerStateReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetPlayerStateReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateReq.local_room_id)
  return local_room_id_;
}
inline void LTpaSetPlayerStateReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetPlayerStateReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaSetPlayerStateReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetPlayerStateReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaSetPlayerStateReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetPlayerStateReq.tpa_room_id)
}

// repeated .Pb.LTPAPlayer player_list = 3;
inline int LTpaSetPlayerStateReq::player_list_size() const {
  return player_list_.size();
}
inline void LTpaSetPlayerStateReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaSetPlayerStateReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaSetPlayerStateReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaSetPlayerStateReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaSetPlayerStateReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaSetPlayerStateReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaSetPlayerStateReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaSetPlayerStateReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaSetPlayerStateReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaSetPlayerStateReq.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// LTpaSetPlayerStateResp

// uint64 local_room_id = 1;
inline void LTpaSetPlayerStateResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetPlayerStateResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateResp.local_room_id)
  return local_room_id_;
}
inline void LTpaSetPlayerStateResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetPlayerStateResp.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaSetPlayerStateResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetPlayerStateResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaSetPlayerStateResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetPlayerStateResp.tpa_room_id)
}

// repeated .Pb.LTPAPlayer player_list = 3;
inline int LTpaSetPlayerStateResp::player_list_size() const {
  return player_list_.size();
}
inline void LTpaSetPlayerStateResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::LTPAPlayer& LTpaSetPlayerStateResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetPlayerStateResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::LTPAPlayer* LTpaSetPlayerStateResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaSetPlayerStateResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::LTPAPlayer* LTpaSetPlayerStateResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.LTpaSetPlayerStateResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >*
LTpaSetPlayerStateResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaSetPlayerStateResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayer >&
LTpaSetPlayerStateResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaSetPlayerStateResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// LTpaSetDealerReq

// uint64 local_room_id = 1;
inline void LTpaSetDealerReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetDealerReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerReq.local_room_id)
  return local_room_id_;
}
inline void LTpaSetDealerReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerReq.local_room_id)
}

// uint32 dealer_role_id = 2;
inline void LTpaSetDealerReq::clear_dealer_role_id() {
  dealer_role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerReq::dealer_role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerReq.dealer_role_id)
  return dealer_role_id_;
}
inline void LTpaSetDealerReq::set_dealer_role_id(::google::protobuf::uint32 value) {
  
  dealer_role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerReq.dealer_role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaSetDealerReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaSetDealerReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerReq.tpa_room_id)
}

// uint64 dealer_player_id = 4;
inline void LTpaSetDealerReq::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetDealerReq::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerReq.dealer_player_id)
  return dealer_player_id_;
}
inline void LTpaSetDealerReq::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerReq.dealer_player_id)
}

// int32 dealer_seat = 5;
inline void LTpaSetDealerReq::clear_dealer_seat() {
  dealer_seat_ = 0;
}
inline ::google::protobuf::int32 LTpaSetDealerReq::dealer_seat() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerReq.dealer_seat)
  return dealer_seat_;
}
inline void LTpaSetDealerReq::set_dealer_seat(::google::protobuf::int32 value) {
  
  dealer_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerReq.dealer_seat)
}

// -------------------------------------------------------------------

// LTpaSetDealerResp

// uint64 local_room_id = 1;
inline void LTpaSetDealerResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetDealerResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.local_room_id)
  return local_room_id_;
}
inline void LTpaSetDealerResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.local_room_id)
}

// uint32 dealer_role_id = 2;
inline void LTpaSetDealerResp::clear_dealer_role_id() {
  dealer_role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerResp::dealer_role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.dealer_role_id)
  return dealer_role_id_;
}
inline void LTpaSetDealerResp::set_dealer_role_id(::google::protobuf::uint32 value) {
  
  dealer_role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.dealer_role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaSetDealerResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaSetDealerResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.tpa_room_id)
}

// uint64 dealer_player_id = 4;
inline void LTpaSetDealerResp::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaSetDealerResp::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.dealer_player_id)
  return dealer_player_id_;
}
inline void LTpaSetDealerResp::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.dealer_player_id)
}

// uint32 hand_id = 5;
inline void LTpaSetDealerResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.hand_id)
  return hand_id_;
}
inline void LTpaSetDealerResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.hand_id)
}

// uint32 max_spent = 6;
inline void LTpaSetDealerResp::clear_max_spent() {
  max_spent_ = 0u;
}
inline ::google::protobuf::uint32 LTpaSetDealerResp::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.max_spent)
  return max_spent_;
}
inline void LTpaSetDealerResp::set_max_spent(::google::protobuf::uint32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaSetDealerResp.max_spent)
}

// repeated .Pb.LTPAPlayerState player_state = 7;
inline int LTpaSetDealerResp::player_state_size() const {
  return player_state_.size();
}
inline void LTpaSetDealerResp::clear_player_state() {
  player_state_.Clear();
}
inline const ::Pb::LTPAPlayerState& LTpaSetDealerResp::player_state(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaSetDealerResp.player_state)
  return player_state_.Get(index);
}
inline ::Pb::LTPAPlayerState* LTpaSetDealerResp::mutable_player_state(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaSetDealerResp.player_state)
  return player_state_.Mutable(index);
}
inline ::Pb::LTPAPlayerState* LTpaSetDealerResp::add_player_state() {
  // @@protoc_insertion_point(field_add:Pb.LTpaSetDealerResp.player_state)
  return player_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >*
LTpaSetDealerResp::mutable_player_state() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaSetDealerResp.player_state)
  return &player_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >&
LTpaSetDealerResp::player_state() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaSetDealerResp.player_state)
  return player_state_;
}

// -------------------------------------------------------------------

// LTpaQueryCardsReq

// uint64 local_room_id = 1;
inline void LTpaQueryCardsReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryCardsReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsReq.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryCardsReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaQueryCardsReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryCardsReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryCardsReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsReq.tpa_room_id)
}

// int32 round = 3;
inline void LTpaQueryCardsReq::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 LTpaQueryCardsReq::round() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsReq.round)
  return round_;
}
inline void LTpaQueryCardsReq::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsReq.round)
}

// -------------------------------------------------------------------

// LTpaQueryCardsResp

// uint64 local_room_id = 1;
inline void LTpaQueryCardsResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryCardsResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryCardsResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaQueryCardsResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryCardsResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryCardsResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.tpa_room_id)
}

// int32 round = 3;
inline void LTpaQueryCardsResp::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 LTpaQueryCardsResp::round() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.round)
  return round_;
}
inline void LTpaQueryCardsResp::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.round)
}

// uint32 finished = 4;
inline void LTpaQueryCardsResp::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryCardsResp::finished() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.finished)
  return finished_;
}
inline void LTpaQueryCardsResp::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.finished)
}

// repeated int32 flop_cards = 5;
inline int LTpaQueryCardsResp::flop_cards_size() const {
  return flop_cards_.size();
}
inline void LTpaQueryCardsResp::clear_flop_cards() {
  flop_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryCardsResp::flop_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.flop_cards)
  return flop_cards_.Get(index);
}
inline void LTpaQueryCardsResp::set_flop_cards(int index, ::google::protobuf::int32 value) {
  flop_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.flop_cards)
}
inline void LTpaQueryCardsResp::add_flop_cards(::google::protobuf::int32 value) {
  flop_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryCardsResp.flop_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryCardsResp::flop_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryCardsResp.flop_cards)
  return flop_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryCardsResp::mutable_flop_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryCardsResp.flop_cards)
  return &flop_cards_;
}

// repeated int32 turn_cards = 6;
inline int LTpaQueryCardsResp::turn_cards_size() const {
  return turn_cards_.size();
}
inline void LTpaQueryCardsResp::clear_turn_cards() {
  turn_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryCardsResp::turn_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.turn_cards)
  return turn_cards_.Get(index);
}
inline void LTpaQueryCardsResp::set_turn_cards(int index, ::google::protobuf::int32 value) {
  turn_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.turn_cards)
}
inline void LTpaQueryCardsResp::add_turn_cards(::google::protobuf::int32 value) {
  turn_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryCardsResp.turn_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryCardsResp::turn_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryCardsResp.turn_cards)
  return turn_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryCardsResp::mutable_turn_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryCardsResp.turn_cards)
  return &turn_cards_;
}

// repeated int32 river_cards = 7;
inline int LTpaQueryCardsResp::river_cards_size() const {
  return river_cards_.size();
}
inline void LTpaQueryCardsResp::clear_river_cards() {
  river_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryCardsResp::river_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.river_cards)
  return river_cards_.Get(index);
}
inline void LTpaQueryCardsResp::set_river_cards(int index, ::google::protobuf::int32 value) {
  river_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.river_cards)
}
inline void LTpaQueryCardsResp::add_river_cards(::google::protobuf::int32 value) {
  river_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryCardsResp.river_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryCardsResp::river_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryCardsResp.river_cards)
  return river_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryCardsResp::mutable_river_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryCardsResp.river_cards)
  return &river_cards_;
}

// repeated .Pb.LTPAPlayerCards player_cards = 8;
inline int LTpaQueryCardsResp::player_cards_size() const {
  return player_cards_.size();
}
inline void LTpaQueryCardsResp::clear_player_cards() {
  player_cards_.Clear();
}
inline const ::Pb::LTPAPlayerCards& LTpaQueryCardsResp::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.player_cards)
  return player_cards_.Get(index);
}
inline ::Pb::LTPAPlayerCards* LTpaQueryCardsResp::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaQueryCardsResp.player_cards)
  return player_cards_.Mutable(index);
}
inline ::Pb::LTPAPlayerCards* LTpaQueryCardsResp::add_player_cards() {
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryCardsResp.player_cards)
  return player_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerCards >*
LTpaQueryCardsResp::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryCardsResp.player_cards)
  return &player_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerCards >&
LTpaQueryCardsResp::player_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryCardsResp.player_cards)
  return player_cards_;
}

// uint32 dealer_role_id = 9;
inline void LTpaQueryCardsResp::clear_dealer_role_id() {
  dealer_role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryCardsResp::dealer_role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryCardsResp.dealer_role_id)
  return dealer_role_id_;
}
inline void LTpaQueryCardsResp::set_dealer_role_id(::google::protobuf::uint32 value) {
  
  dealer_role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryCardsResp.dealer_role_id)
}

// -------------------------------------------------------------------

// LTpaQueryAllowActionReq

// uint64 local_room_id = 1;
inline void LTpaQueryAllowActionReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAllowActionReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionReq.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryAllowActionReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionReq.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaQueryAllowActionReq::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAllowActionReq::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionReq.role_id)
  return role_id_;
}
inline void LTpaQueryAllowActionReq::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionReq.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaQueryAllowActionReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAllowActionReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryAllowActionReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionReq.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaQueryAllowActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAllowActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionReq.player_id)
  return player_id_;
}
inline void LTpaQueryAllowActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionReq.player_id)
}

// -------------------------------------------------------------------

// LTpaQueryAllowActionResp

// uint64 local_room_id = 1;
inline void LTpaQueryAllowActionResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAllowActionResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionResp.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryAllowActionResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionResp.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaQueryAllowActionResp::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAllowActionResp::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionResp.role_id)
  return role_id_;
}
inline void LTpaQueryAllowActionResp::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionResp.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaQueryAllowActionResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAllowActionResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryAllowActionResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionResp.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaQueryAllowActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAllowActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionResp.player_id)
  return player_id_;
}
inline void LTpaQueryAllowActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionResp.player_id)
}

// repeated uint32 allow_raise = 5;
inline int LTpaQueryAllowActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void LTpaQueryAllowActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 LTpaQueryAllowActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAllowActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void LTpaQueryAllowActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAllowActionResp.allow_raise)
}
inline void LTpaQueryAllowActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryAllowActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LTpaQueryAllowActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryAllowActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LTpaQueryAllowActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryAllowActionResp.allow_raise)
  return &allow_raise_;
}

// -------------------------------------------------------------------

// LTpaQueryMatchStateReq

// uint64 local_room_id = 1;
inline void LTpaQueryMatchStateReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryMatchStateReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateReq.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryMatchStateReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateReq.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void LTpaQueryMatchStateReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryMatchStateReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateReq.tpa_room_id)
}

// int32 round = 3;
inline void LTpaQueryMatchStateReq::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 LTpaQueryMatchStateReq::round() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateReq.round)
  return round_;
}
inline void LTpaQueryMatchStateReq::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateReq.round)
}

// -------------------------------------------------------------------

// LTpaQueryMatchStateResp

// uint64 local_room_id = 1;
inline void LTpaQueryMatchStateResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryMatchStateResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryMatchStateResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.local_room_id)
}

// uint32 dealer_role_id = 2;
inline void LTpaQueryMatchStateResp::clear_dealer_role_id() {
  dealer_role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::dealer_role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.dealer_role_id)
  return dealer_role_id_;
}
inline void LTpaQueryMatchStateResp::set_dealer_role_id(::google::protobuf::uint32 value) {
  
  dealer_role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.dealer_role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaQueryMatchStateResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryMatchStateResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.tpa_room_id)
}

// uint32 hand_id = 4;
inline void LTpaQueryMatchStateResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.hand_id)
  return hand_id_;
}
inline void LTpaQueryMatchStateResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.hand_id)
}

// int32 round = 5;
inline void LTpaQueryMatchStateResp::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 LTpaQueryMatchStateResp::round() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.round)
  return round_;
}
inline void LTpaQueryMatchStateResp::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.round)
}

// uint32 finished = 6;
inline void LTpaQueryMatchStateResp::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::finished() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.finished)
  return finished_;
}
inline void LTpaQueryMatchStateResp::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.finished)
}

// uint32 max_spent = 7;
inline void LTpaQueryMatchStateResp::clear_max_spent() {
  max_spent_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.max_spent)
  return max_spent_;
}
inline void LTpaQueryMatchStateResp::set_max_spent(::google::protobuf::uint32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.max_spent)
}

// repeated int32 flop_cards = 8;
inline int LTpaQueryMatchStateResp::flop_cards_size() const {
  return flop_cards_.size();
}
inline void LTpaQueryMatchStateResp::clear_flop_cards() {
  flop_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryMatchStateResp::flop_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.flop_cards)
  return flop_cards_.Get(index);
}
inline void LTpaQueryMatchStateResp::set_flop_cards(int index, ::google::protobuf::int32 value) {
  flop_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.flop_cards)
}
inline void LTpaQueryMatchStateResp::add_flop_cards(::google::protobuf::int32 value) {
  flop_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.flop_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryMatchStateResp::flop_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.flop_cards)
  return flop_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryMatchStateResp::mutable_flop_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.flop_cards)
  return &flop_cards_;
}

// repeated int32 turn_cards = 9;
inline int LTpaQueryMatchStateResp::turn_cards_size() const {
  return turn_cards_.size();
}
inline void LTpaQueryMatchStateResp::clear_turn_cards() {
  turn_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryMatchStateResp::turn_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.turn_cards)
  return turn_cards_.Get(index);
}
inline void LTpaQueryMatchStateResp::set_turn_cards(int index, ::google::protobuf::int32 value) {
  turn_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.turn_cards)
}
inline void LTpaQueryMatchStateResp::add_turn_cards(::google::protobuf::int32 value) {
  turn_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.turn_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryMatchStateResp::turn_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.turn_cards)
  return turn_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryMatchStateResp::mutable_turn_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.turn_cards)
  return &turn_cards_;
}

// repeated int32 river_cards = 10;
inline int LTpaQueryMatchStateResp::river_cards_size() const {
  return river_cards_.size();
}
inline void LTpaQueryMatchStateResp::clear_river_cards() {
  river_cards_.Clear();
}
inline ::google::protobuf::int32 LTpaQueryMatchStateResp::river_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.river_cards)
  return river_cards_.Get(index);
}
inline void LTpaQueryMatchStateResp::set_river_cards(int index, ::google::protobuf::int32 value) {
  river_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.river_cards)
}
inline void LTpaQueryMatchStateResp::add_river_cards(::google::protobuf::int32 value) {
  river_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.river_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LTpaQueryMatchStateResp::river_cards() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.river_cards)
  return river_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LTpaQueryMatchStateResp::mutable_river_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.river_cards)
  return &river_cards_;
}

// repeated uint32 allow_raise = 11;
inline int LTpaQueryMatchStateResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void LTpaQueryMatchStateResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void LTpaQueryMatchStateResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.allow_raise)
}
inline void LTpaQueryMatchStateResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LTpaQueryMatchStateResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LTpaQueryMatchStateResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.allow_raise)
  return &allow_raise_;
}

// repeated .Pb.LTPAPlayerState player_state = 12;
inline int LTpaQueryMatchStateResp::player_state_size() const {
  return player_state_.size();
}
inline void LTpaQueryMatchStateResp::clear_player_state() {
  player_state_.Clear();
}
inline const ::Pb::LTPAPlayerState& LTpaQueryMatchStateResp::player_state(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.player_state)
  return player_state_.Get(index);
}
inline ::Pb::LTPAPlayerState* LTpaQueryMatchStateResp::mutable_player_state(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaQueryMatchStateResp.player_state)
  return player_state_.Mutable(index);
}
inline ::Pb::LTPAPlayerState* LTpaQueryMatchStateResp::add_player_state() {
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.player_state)
  return player_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >*
LTpaQueryMatchStateResp::mutable_player_state() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.player_state)
  return &player_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerState >&
LTpaQueryMatchStateResp::player_state() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.player_state)
  return player_state_;
}

// repeated .Pb.LTPAPlayerAction player_action = 13;
inline int LTpaQueryMatchStateResp::player_action_size() const {
  return player_action_.size();
}
inline void LTpaQueryMatchStateResp::clear_player_action() {
  player_action_.Clear();
}
inline const ::Pb::LTPAPlayerAction& LTpaQueryMatchStateResp::player_action(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.player_action)
  return player_action_.Get(index);
}
inline ::Pb::LTPAPlayerAction* LTpaQueryMatchStateResp::mutable_player_action(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.LTpaQueryMatchStateResp.player_action)
  return player_action_.Mutable(index);
}
inline ::Pb::LTPAPlayerAction* LTpaQueryMatchStateResp::add_player_action() {
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryMatchStateResp.player_action)
  return player_action_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerAction >*
LTpaQueryMatchStateResp::mutable_player_action() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryMatchStateResp.player_action)
  return &player_action_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::LTPAPlayerAction >&
LTpaQueryMatchStateResp::player_action() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryMatchStateResp.player_action)
  return player_action_;
}

// uint32 turn_role_id = 14;
inline void LTpaQueryMatchStateResp::clear_turn_role_id() {
  turn_role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryMatchStateResp::turn_role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryMatchStateResp.turn_role_id)
  return turn_role_id_;
}
inline void LTpaQueryMatchStateResp::set_turn_role_id(::google::protobuf::uint32 value) {
  
  turn_role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryMatchStateResp.turn_role_id)
}

// -------------------------------------------------------------------

// LTpaReportActionTokenReq

// uint64 local_room_id = 1;
inline void LTpaReportActionTokenReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportActionTokenReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenReq.local_room_id)
  return local_room_id_;
}
inline void LTpaReportActionTokenReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenReq.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaReportActionTokenReq::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportActionTokenReq::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenReq.role_id)
  return role_id_;
}
inline void LTpaReportActionTokenReq::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenReq.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaReportActionTokenReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportActionTokenReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaReportActionTokenReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenReq.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaReportActionTokenReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportActionTokenReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenReq.player_id)
  return player_id_;
}
inline void LTpaReportActionTokenReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenReq.player_id)
}

// -------------------------------------------------------------------

// LTpaReportActionTokenResp

// uint64 local_room_id = 1;
inline void LTpaReportActionTokenResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportActionTokenResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenResp.local_room_id)
  return local_room_id_;
}
inline void LTpaReportActionTokenResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenResp.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaReportActionTokenResp::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportActionTokenResp::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenResp.role_id)
  return role_id_;
}
inline void LTpaReportActionTokenResp::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenResp.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaReportActionTokenResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportActionTokenResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaReportActionTokenResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenResp.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaReportActionTokenResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportActionTokenResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportActionTokenResp.player_id)
  return player_id_;
}
inline void LTpaReportActionTokenResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportActionTokenResp.player_id)
}

// -------------------------------------------------------------------

// LTpaReportPlayerActionReq

// uint64 local_room_id = 1;
inline void LTpaReportPlayerActionReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportPlayerActionReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.local_room_id)
  return local_room_id_;
}
inline void LTpaReportPlayerActionReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaReportPlayerActionReq::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionReq::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.role_id)
  return role_id_;
}
inline void LTpaReportPlayerActionReq::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaReportPlayerActionReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaReportPlayerActionReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaReportPlayerActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportPlayerActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.player_id)
  return player_id_;
}
inline void LTpaReportPlayerActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.player_id)
}

// uint32 action_type = 5;
inline void LTpaReportPlayerActionReq::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionReq::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.action_type)
  return action_type_;
}
inline void LTpaReportPlayerActionReq::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.action_type)
}

// uint32 size = 6;
inline void LTpaReportPlayerActionReq::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionReq::size() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionReq.size)
  return size_;
}
inline void LTpaReportPlayerActionReq::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionReq.size)
}

// -------------------------------------------------------------------

// LTpaReportPlayerActionResp

// uint64 local_room_id = 1;
inline void LTpaReportPlayerActionResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportPlayerActionResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.local_room_id)
  return local_room_id_;
}
inline void LTpaReportPlayerActionResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaReportPlayerActionResp::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionResp::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.role_id)
  return role_id_;
}
inline void LTpaReportPlayerActionResp::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaReportPlayerActionResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaReportPlayerActionResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaReportPlayerActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaReportPlayerActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.player_id)
  return player_id_;
}
inline void LTpaReportPlayerActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.player_id)
}

// uint32 action_type = 5;
inline void LTpaReportPlayerActionResp::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionResp::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.action_type)
  return action_type_;
}
inline void LTpaReportPlayerActionResp::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.action_type)
}

// uint32 size = 6;
inline void LTpaReportPlayerActionResp::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionResp::size() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.size)
  return size_;
}
inline void LTpaReportPlayerActionResp::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.size)
}

// repeated uint32 allow_raise = 7;
inline int LTpaReportPlayerActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void LTpaReportPlayerActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 LTpaReportPlayerActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaReportPlayerActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void LTpaReportPlayerActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaReportPlayerActionResp.allow_raise)
}
inline void LTpaReportPlayerActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaReportPlayerActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LTpaReportPlayerActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaReportPlayerActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LTpaReportPlayerActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaReportPlayerActionResp.allow_raise)
  return &allow_raise_;
}

// -------------------------------------------------------------------

// LTpaQueryAIActionReq

// uint64 local_room_id = 1;
inline void LTpaQueryAIActionReq::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAIActionReq::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionReq.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryAIActionReq::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionReq.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaQueryAIActionReq::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionReq::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionReq.role_id)
  return role_id_;
}
inline void LTpaQueryAIActionReq::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionReq.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaQueryAIActionReq::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionReq::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionReq.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryAIActionReq::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionReq.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaQueryAIActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAIActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionReq.player_id)
  return player_id_;
}
inline void LTpaQueryAIActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionReq.player_id)
}

// -------------------------------------------------------------------

// LTpaQueryAIActionResp

// uint64 local_room_id = 1;
inline void LTpaQueryAIActionResp::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAIActionResp::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.local_room_id)
  return local_room_id_;
}
inline void LTpaQueryAIActionResp::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.local_room_id)
}

// uint32 role_id = 2;
inline void LTpaQueryAIActionResp::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionResp::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.role_id)
  return role_id_;
}
inline void LTpaQueryAIActionResp::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.role_id)
}

// uint32 tpa_room_id = 3;
inline void LTpaQueryAIActionResp::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionResp::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.tpa_room_id)
  return tpa_room_id_;
}
inline void LTpaQueryAIActionResp::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.tpa_room_id)
}

// uint64 player_id = 4;
inline void LTpaQueryAIActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LTpaQueryAIActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.player_id)
  return player_id_;
}
inline void LTpaQueryAIActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.player_id)
}

// uint32 action_type = 5;
inline void LTpaQueryAIActionResp::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionResp::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.action_type)
  return action_type_;
}
inline void LTpaQueryAIActionResp::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.action_type)
}

// uint32 size = 6;
inline void LTpaQueryAIActionResp::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 LTpaQueryAIActionResp::size() const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.size)
  return size_;
}
inline void LTpaQueryAIActionResp::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.size)
}

// repeated uint32 allow_raise = 7;
inline int LTpaQueryAIActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void LTpaQueryAIActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 LTpaQueryAIActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.LTpaQueryAIActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void LTpaQueryAIActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.LTpaQueryAIActionResp.allow_raise)
}
inline void LTpaQueryAIActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.LTpaQueryAIActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LTpaQueryAIActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.LTpaQueryAIActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LTpaQueryAIActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.LTpaQueryAIActionResp.allow_raise)
  return &allow_raise_;
}

// -------------------------------------------------------------------

// TpaRedisPlayer

// uint64 player_id = 1;
inline void TpaRedisPlayer::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaRedisPlayer::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRedisPlayer.player_id)
  return player_id_;
}
inline void TpaRedisPlayer::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRedisPlayer.player_id)
}

// uint32 role_id = 2;
inline void TpaRedisPlayer::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaRedisPlayer::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRedisPlayer.role_id)
  return role_id_;
}
inline void TpaRedisPlayer::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRedisPlayer.role_id)
}

// uint32 seat = 3;
inline void TpaRedisPlayer::clear_seat() {
  seat_ = 0u;
}
inline ::google::protobuf::uint32 TpaRedisPlayer::seat() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRedisPlayer.seat)
  return seat_;
}
inline void TpaRedisPlayer::set_seat(::google::protobuf::uint32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRedisPlayer.seat)
}

// -------------------------------------------------------------------

// TpaRedisPlayerList

// repeated .Pb.TpaRedisPlayer player_list = 1;
inline int TpaRedisPlayerList::player_list_size() const {
  return player_list_.size();
}
inline void TpaRedisPlayerList::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TpaRedisPlayer& TpaRedisPlayerList::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaRedisPlayerList.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TpaRedisPlayer* TpaRedisPlayerList::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaRedisPlayerList.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TpaRedisPlayer* TpaRedisPlayerList::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaRedisPlayerList.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TpaRedisPlayer >*
TpaRedisPlayerList::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaRedisPlayerList.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TpaRedisPlayer >&
TpaRedisPlayerList::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaRedisPlayerList.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaAcpcMatchState

// uint64 local_room_id = 1;
inline void TpaAcpcMatchState::clear_local_room_id() {
  local_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaAcpcMatchState::local_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.local_room_id)
  return local_room_id_;
}
inline void TpaAcpcMatchState::set_local_room_id(::google::protobuf::uint64 value) {
  
  local_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.local_room_id)
}

// uint32 tpa_room_id = 2;
inline void TpaAcpcMatchState::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaAcpcMatchState::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.tpa_room_id)
  return tpa_room_id_;
}
inline void TpaAcpcMatchState::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.tpa_room_id)
}

// uint32 role_id = 3;
inline void TpaAcpcMatchState::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaAcpcMatchState::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.role_id)
  return role_id_;
}
inline void TpaAcpcMatchState::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.role_id)
}

// int32 role_seat = 4;
inline void TpaAcpcMatchState::clear_role_seat() {
  role_seat_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::role_seat() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.role_seat)
  return role_seat_;
}
inline void TpaAcpcMatchState::set_role_seat(::google::protobuf::int32 value) {
  
  role_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.role_seat)
}

// int32 little_blind_seat = 5;
inline void TpaAcpcMatchState::clear_little_blind_seat() {
  little_blind_seat_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::little_blind_seat() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.little_blind_seat)
  return little_blind_seat_;
}
inline void TpaAcpcMatchState::set_little_blind_seat(::google::protobuf::int32 value) {
  
  little_blind_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.little_blind_seat)
}

// int32 hand_id = 6;
inline void TpaAcpcMatchState::clear_hand_id() {
  hand_id_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.hand_id)
  return hand_id_;
}
inline void TpaAcpcMatchState::set_hand_id(::google::protobuf::int32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.hand_id)
}

// int32 max_spent = 7;
inline void TpaAcpcMatchState::clear_max_spent() {
  max_spent_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.max_spent)
  return max_spent_;
}
inline void TpaAcpcMatchState::set_max_spent(::google::protobuf::int32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.max_spent)
}

// int32 min_nolimit_raise_to = 8;
inline void TpaAcpcMatchState::clear_min_nolimit_raise_to() {
  min_nolimit_raise_to_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::min_nolimit_raise_to() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.min_nolimit_raise_to)
  return min_nolimit_raise_to_;
}
inline void TpaAcpcMatchState::set_min_nolimit_raise_to(::google::protobuf::int32 value) {
  
  min_nolimit_raise_to_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.min_nolimit_raise_to)
}

// int32 round = 9;
inline void TpaAcpcMatchState::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::round() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.round)
  return round_;
}
inline void TpaAcpcMatchState::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.round)
}

// int32 finished = 10;
inline void TpaAcpcMatchState::clear_finished() {
  finished_ = 0;
}
inline ::google::protobuf::int32 TpaAcpcMatchState::finished() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.finished)
  return finished_;
}
inline void TpaAcpcMatchState::set_finished(::google::protobuf::int32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.finished)
}

// repeated int32 spent = 11;
inline int TpaAcpcMatchState::spent_size() const {
  return spent_.size();
}
inline void TpaAcpcMatchState::clear_spent() {
  spent_.Clear();
}
inline ::google::protobuf::int32 TpaAcpcMatchState::spent(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.spent)
  return spent_.Get(index);
}
inline void TpaAcpcMatchState::set_spent(int index, ::google::protobuf::int32 value) {
  spent_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.spent)
}
inline void TpaAcpcMatchState::add_spent(::google::protobuf::int32 value) {
  spent_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.spent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaAcpcMatchState::spent() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.spent)
  return spent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaAcpcMatchState::mutable_spent() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.spent)
  return &spent_;
}

// repeated .Pb.AcpcRound round_actions = 12;
inline int TpaAcpcMatchState::round_actions_size() const {
  return round_actions_.size();
}
inline const ::Pb::AcpcRound& TpaAcpcMatchState::round_actions(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.round_actions)
  return round_actions_.Get(index);
}
inline ::Pb::AcpcRound* TpaAcpcMatchState::mutable_round_actions(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAcpcMatchState.round_actions)
  return round_actions_.Mutable(index);
}
inline ::Pb::AcpcRound* TpaAcpcMatchState::add_round_actions() {
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.round_actions)
  return round_actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcRound >*
TpaAcpcMatchState::mutable_round_actions() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.round_actions)
  return &round_actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcRound >&
TpaAcpcMatchState::round_actions() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.round_actions)
  return round_actions_;
}

// repeated int32 fold_players = 13;
inline int TpaAcpcMatchState::fold_players_size() const {
  return fold_players_.size();
}
inline void TpaAcpcMatchState::clear_fold_players() {
  fold_players_.Clear();
}
inline ::google::protobuf::int32 TpaAcpcMatchState::fold_players(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.fold_players)
  return fold_players_.Get(index);
}
inline void TpaAcpcMatchState::set_fold_players(int index, ::google::protobuf::int32 value) {
  fold_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaAcpcMatchState.fold_players)
}
inline void TpaAcpcMatchState::add_fold_players(::google::protobuf::int32 value) {
  fold_players_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.fold_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaAcpcMatchState::fold_players() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.fold_players)
  return fold_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaAcpcMatchState::mutable_fold_players() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.fold_players)
  return &fold_players_;
}

// repeated .Pb.AcpcCard board_cards = 14;
inline int TpaAcpcMatchState::board_cards_size() const {
  return board_cards_.size();
}
inline const ::Pb::AcpcCard& TpaAcpcMatchState::board_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.board_cards)
  return board_cards_.Get(index);
}
inline ::Pb::AcpcCard* TpaAcpcMatchState::mutable_board_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAcpcMatchState.board_cards)
  return board_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* TpaAcpcMatchState::add_board_cards() {
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.board_cards)
  return board_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
TpaAcpcMatchState::mutable_board_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.board_cards)
  return &board_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
TpaAcpcMatchState::board_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.board_cards)
  return board_cards_;
}

// repeated .Pb.AcpcCard hole_cards = 15;
inline int TpaAcpcMatchState::hole_cards_size() const {
  return hole_cards_.size();
}
inline const ::Pb::AcpcCard& TpaAcpcMatchState::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.hole_cards)
  return hole_cards_.Get(index);
}
inline ::Pb::AcpcCard* TpaAcpcMatchState::mutable_hole_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAcpcMatchState.hole_cards)
  return hole_cards_.Mutable(index);
}
inline ::Pb::AcpcCard* TpaAcpcMatchState::add_hole_cards() {
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.hole_cards)
  return hole_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >*
TpaAcpcMatchState::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.hole_cards)
  return &hole_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::AcpcCard >&
TpaAcpcMatchState::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.hole_cards)
  return hole_cards_;
}

// repeated .Pb.HoleCards player_hole_cards = 16;
inline int TpaAcpcMatchState::player_hole_cards_size() const {
  return player_hole_cards_.size();
}
inline const ::Pb::HoleCards& TpaAcpcMatchState::player_hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAcpcMatchState.player_hole_cards)
  return player_hole_cards_.Get(index);
}
inline ::Pb::HoleCards* TpaAcpcMatchState::mutable_player_hole_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAcpcMatchState.player_hole_cards)
  return player_hole_cards_.Mutable(index);
}
inline ::Pb::HoleCards* TpaAcpcMatchState::add_player_hole_cards() {
  // @@protoc_insertion_point(field_add:Pb.TpaAcpcMatchState.player_hole_cards)
  return player_hole_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >*
TpaAcpcMatchState::mutable_player_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAcpcMatchState.player_hole_cards)
  return &player_hole_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::HoleCards >&
TpaAcpcMatchState::player_hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAcpcMatchState.player_hole_cards)
  return player_hole_cards_;
}

// -------------------------------------------------------------------

// RoomAttrForTpa

// uint32 tpa_room_id = 1;
inline void RoomAttrForTpa::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 RoomAttrForTpa::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.RoomAttrForTpa.tpa_room_id)
  return tpa_room_id_;
}
inline void RoomAttrForTpa::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.RoomAttrForTpa.tpa_room_id)
}

// uint32 tpa_server_id = 2;
inline void RoomAttrForTpa::clear_tpa_server_id() {
  tpa_server_id_ = 0u;
}
inline ::google::protobuf::uint32 RoomAttrForTpa::tpa_server_id() const {
  // @@protoc_insertion_point(field_get:Pb.RoomAttrForTpa.tpa_server_id)
  return tpa_server_id_;
}
inline void RoomAttrForTpa::set_tpa_server_id(::google::protobuf::uint32 value) {
  
  tpa_server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.RoomAttrForTpa.tpa_server_id)
}

// int32 wait_robot_aciton = 3;
inline void RoomAttrForTpa::clear_wait_robot_aciton() {
  wait_robot_aciton_ = 0;
}
inline ::google::protobuf::int32 RoomAttrForTpa::wait_robot_aciton() const {
  // @@protoc_insertion_point(field_get:Pb.RoomAttrForTpa.wait_robot_aciton)
  return wait_robot_aciton_;
}
inline void RoomAttrForTpa::set_wait_robot_aciton(::google::protobuf::int32 value) {
  
  wait_robot_aciton_ = value;
  // @@protoc_insertion_point(field_set:Pb.RoomAttrForTpa.wait_robot_aciton)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ltpa_2eproto__INCLUDED
