// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: um.proto

#ifndef PROTOBUF_um_2eproto__INCLUDED
#define PROTOBUF_um_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "system.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_um_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUmLoginReqImpl();
void InitDefaultsUmLoginReq();
void InitDefaultsUmLoginRespImpl();
void InitDefaultsUmLoginResp();
void InitDefaultsUmLogoutImpl();
void InitDefaultsUmLogout();
void InitDefaultsUmRechargeImpl();
void InitDefaultsUmRecharge();
void InitDefaultsUmOnlinePlayersImpl();
void InitDefaultsUmOnlinePlayers();
void InitDefaultsUmQueryUserImpl();
void InitDefaultsUmQueryUser();
void InitDefaultsUmUserConfigImpl();
void InitDefaultsUmUserConfig();
void InitDefaultsUserConnExitImpl();
void InitDefaultsUserConnExit();
void InitDefaultsResetCurrencyImpl();
void InitDefaultsResetCurrency();
void InitDefaultsResetUserForTestImpl();
void InitDefaultsResetUserForTest();
void InitDefaultsUmUserMatchInfoImpl();
void InitDefaultsUmUserMatchInfo();
inline void InitDefaults() {
  InitDefaultsUmLoginReq();
  InitDefaultsUmLoginResp();
  InitDefaultsUmLogout();
  InitDefaultsUmRecharge();
  InitDefaultsUmOnlinePlayers();
  InitDefaultsUmQueryUser();
  InitDefaultsUmUserConfig();
  InitDefaultsUserConnExit();
  InitDefaultsResetCurrency();
  InitDefaultsResetUserForTest();
  InitDefaultsUmUserMatchInfo();
}
}  // namespace protobuf_um_2eproto
namespace Pb {
class ResetCurrency;
class ResetCurrencyDefaultTypeInternal;
extern ResetCurrencyDefaultTypeInternal _ResetCurrency_default_instance_;
class ResetUserForTest;
class ResetUserForTestDefaultTypeInternal;
extern ResetUserForTestDefaultTypeInternal _ResetUserForTest_default_instance_;
class UmLoginReq;
class UmLoginReqDefaultTypeInternal;
extern UmLoginReqDefaultTypeInternal _UmLoginReq_default_instance_;
class UmLoginResp;
class UmLoginRespDefaultTypeInternal;
extern UmLoginRespDefaultTypeInternal _UmLoginResp_default_instance_;
class UmLogout;
class UmLogoutDefaultTypeInternal;
extern UmLogoutDefaultTypeInternal _UmLogout_default_instance_;
class UmOnlinePlayers;
class UmOnlinePlayersDefaultTypeInternal;
extern UmOnlinePlayersDefaultTypeInternal _UmOnlinePlayers_default_instance_;
class UmQueryUser;
class UmQueryUserDefaultTypeInternal;
extern UmQueryUserDefaultTypeInternal _UmQueryUser_default_instance_;
class UmRecharge;
class UmRechargeDefaultTypeInternal;
extern UmRechargeDefaultTypeInternal _UmRecharge_default_instance_;
class UmUserConfig;
class UmUserConfigDefaultTypeInternal;
extern UmUserConfigDefaultTypeInternal _UmUserConfig_default_instance_;
class UmUserMatchInfo;
class UmUserMatchInfoDefaultTypeInternal;
extern UmUserMatchInfoDefaultTypeInternal _UmUserMatchInfo_default_instance_;
class UserConnExit;
class UserConnExitDefaultTypeInternal;
extern UserConnExitDefaultTypeInternal _UserConnExit_default_instance_;
}  // namespace Pb
namespace Pb {

// ===================================================================

class UmLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmLoginReq) */ {
 public:
  UmLoginReq();
  virtual ~UmLoginReq();

  UmLoginReq(const UmLoginReq& from);

  inline UmLoginReq& operator=(const UmLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmLoginReq(UmLoginReq&& from) noexcept
    : UmLoginReq() {
    *this = ::std::move(from);
  }

  inline UmLoginReq& operator=(UmLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmLoginReq* internal_default_instance() {
    return reinterpret_cast<const UmLoginReq*>(
               &_UmLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UmLoginReq* other);
  friend void swap(UmLoginReq& a, UmLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UmLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmLoginReq& from);
  void MergeFrom(const UmLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string password = 4;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .Pb.ServerID server_id = 5;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 5;
  const ::Pb::ServerID& server_id() const;
  ::Pb::ServerID* release_server_id();
  ::Pb::ServerID* mutable_server_id();
  void set_allocated_server_id(::Pb::ServerID* server_id);

  // uint32 login_type = 2;
  void clear_login_type();
  static const int kLoginTypeFieldNumber = 2;
  ::google::protobuf::uint32 login_type() const;
  void set_login_type(::google::protobuf::uint32 value);

  // uint32 client_type = 3;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 3;
  ::google::protobuf::uint32 client_type() const;
  void set_client_type(::google::protobuf::uint32 value);

  // uint64 tpa_player_id = 6;
  void clear_tpa_player_id();
  static const int kTpaPlayerIdFieldNumber = 6;
  ::google::protobuf::uint64 tpa_player_id() const;
  void set_tpa_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.UmLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::Pb::ServerID* server_id_;
  ::google::protobuf::uint32 login_type_;
  ::google::protobuf::uint32 client_type_;
  ::google::protobuf::uint64 tpa_player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmLoginReqImpl();
};
// -------------------------------------------------------------------

class UmLoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmLoginResp) */ {
 public:
  UmLoginResp();
  virtual ~UmLoginResp();

  UmLoginResp(const UmLoginResp& from);

  inline UmLoginResp& operator=(const UmLoginResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmLoginResp(UmLoginResp&& from) noexcept
    : UmLoginResp() {
    *this = ::std::move(from);
  }

  inline UmLoginResp& operator=(UmLoginResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmLoginResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmLoginResp* internal_default_instance() {
    return reinterpret_cast<const UmLoginResp*>(
               &_UmLoginResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UmLoginResp* other);
  friend void swap(UmLoginResp& a, UmLoginResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmLoginResp* New() const PROTOBUF_FINAL { return New(NULL); }

  UmLoginResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmLoginResp& from);
  void MergeFrom(const UmLoginResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmLoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string role_name = 2;
  void clear_role_name();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& role_name() const;
  void set_role_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_name(::std::string&& value);
  #endif
  void set_role_name(const char* value);
  void set_role_name(const char* value, size_t size);
  ::std::string* mutable_role_name();
  ::std::string* release_role_name();
  void set_allocated_role_name(::std::string* role_name);

  // string role_img = 3;
  void clear_role_img();
  static const int kRoleImgFieldNumber = 3;
  const ::std::string& role_img() const;
  void set_role_img(const ::std::string& value);
  #if LANG_CXX11
  void set_role_img(::std::string&& value);
  #endif
  void set_role_img(const char* value);
  void set_role_img(const char* value, size_t size);
  ::std::string* mutable_role_img();
  ::std::string* release_role_img();
  void set_allocated_role_img(::std::string* role_img);

  // string acpc_ip = 12;
  void clear_acpc_ip();
  static const int kAcpcIpFieldNumber = 12;
  const ::std::string& acpc_ip() const;
  void set_acpc_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_acpc_ip(::std::string&& value);
  #endif
  void set_acpc_ip(const char* value);
  void set_acpc_ip(const char* value, size_t size);
  ::std::string* mutable_acpc_ip();
  ::std::string* release_acpc_ip();
  void set_allocated_acpc_ip(::std::string* acpc_ip);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 role_region = 4;
  void clear_role_region();
  static const int kRoleRegionFieldNumber = 4;
  ::google::protobuf::uint32 role_region() const;
  void set_role_region(::google::protobuf::uint32 value);

  // uint32 role_server = 5;
  void clear_role_server();
  static const int kRoleServerFieldNumber = 5;
  ::google::protobuf::uint32 role_server() const;
  void set_role_server(::google::protobuf::uint32 value);

  // uint32 role_sex = 6;
  void clear_role_sex();
  static const int kRoleSexFieldNumber = 6;
  ::google::protobuf::uint32 role_sex() const;
  void set_role_sex(::google::protobuf::uint32 value);

  // int64 role_currency = 8;
  void clear_role_currency();
  static const int kRoleCurrencyFieldNumber = 8;
  ::google::protobuf::int64 role_currency() const;
  void set_role_currency(::google::protobuf::int64 value);

  // uint32 role_level = 7;
  void clear_role_level();
  static const int kRoleLevelFieldNumber = 7;
  ::google::protobuf::uint32 role_level() const;
  void set_role_level(::google::protobuf::uint32 value);

  // uint32 draw = 9;
  void clear_draw();
  static const int kDrawFieldNumber = 9;
  ::google::protobuf::uint32 draw() const;
  void set_draw(::google::protobuf::uint32 value);

  // uint32 win = 10;
  void clear_win();
  static const int kWinFieldNumber = 10;
  ::google::protobuf::uint32 win() const;
  void set_win(::google::protobuf::uint32 value);

  // uint32 lose = 11;
  void clear_lose();
  static const int kLoseFieldNumber = 11;
  ::google::protobuf::uint32 lose() const;
  void set_lose(::google::protobuf::uint32 value);

  // uint64 room_id = 14;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 14;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint64 view_room_id = 15;
  void clear_view_room_id();
  static const int kViewRoomIdFieldNumber = 15;
  ::google::protobuf::uint64 view_room_id() const;
  void set_view_room_id(::google::protobuf::uint64 value);

  // uint32 acpc_port = 13;
  void clear_acpc_port();
  static const int kAcpcPortFieldNumber = 13;
  ::google::protobuf::uint32 acpc_port() const;
  void set_acpc_port(::google::protobuf::uint32 value);

  // uint32 acpc_server_id = 17;
  void clear_acpc_server_id();
  static const int kAcpcServerIdFieldNumber = 17;
  ::google::protobuf::uint32 acpc_server_id() const;
  void set_acpc_server_id(::google::protobuf::uint32 value);

  // uint64 tpa_player_id = 16;
  void clear_tpa_player_id();
  static const int kTpaPlayerIdFieldNumber = 16;
  ::google::protobuf::uint64 tpa_player_id() const;
  void set_tpa_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.UmLoginResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr role_name_;
  ::google::protobuf::internal::ArenaStringPtr role_img_;
  ::google::protobuf::internal::ArenaStringPtr acpc_ip_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 role_region_;
  ::google::protobuf::uint32 role_server_;
  ::google::protobuf::uint32 role_sex_;
  ::google::protobuf::int64 role_currency_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint32 draw_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::uint32 lose_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint64 view_room_id_;
  ::google::protobuf::uint32 acpc_port_;
  ::google::protobuf::uint32 acpc_server_id_;
  ::google::protobuf::uint64 tpa_player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmLoginRespImpl();
};
// -------------------------------------------------------------------

class UmLogout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmLogout) */ {
 public:
  UmLogout();
  virtual ~UmLogout();

  UmLogout(const UmLogout& from);

  inline UmLogout& operator=(const UmLogout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmLogout(UmLogout&& from) noexcept
    : UmLogout() {
    *this = ::std::move(from);
  }

  inline UmLogout& operator=(UmLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmLogout* internal_default_instance() {
    return reinterpret_cast<const UmLogout*>(
               &_UmLogout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UmLogout* other);
  friend void swap(UmLogout& a, UmLogout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmLogout* New() const PROTOBUF_FINAL { return New(NULL); }

  UmLogout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmLogout& from);
  void MergeFrom(const UmLogout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmLogout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmLogoutImpl();
};
// -------------------------------------------------------------------

class UmRecharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmRecharge) */ {
 public:
  UmRecharge();
  virtual ~UmRecharge();

  UmRecharge(const UmRecharge& from);

  inline UmRecharge& operator=(const UmRecharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmRecharge(UmRecharge&& from) noexcept
    : UmRecharge() {
    *this = ::std::move(from);
  }

  inline UmRecharge& operator=(UmRecharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmRecharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmRecharge* internal_default_instance() {
    return reinterpret_cast<const UmRecharge*>(
               &_UmRecharge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UmRecharge* other);
  friend void swap(UmRecharge& a, UmRecharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmRecharge* New() const PROTOBUF_FINAL { return New(NULL); }

  UmRecharge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmRecharge& from);
  void MergeFrom(const UmRecharge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmRecharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmRecharge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 money_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmRechargeImpl();
};
// -------------------------------------------------------------------

class UmOnlinePlayers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmOnlinePlayers) */ {
 public:
  UmOnlinePlayers();
  virtual ~UmOnlinePlayers();

  UmOnlinePlayers(const UmOnlinePlayers& from);

  inline UmOnlinePlayers& operator=(const UmOnlinePlayers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmOnlinePlayers(UmOnlinePlayers&& from) noexcept
    : UmOnlinePlayers() {
    *this = ::std::move(from);
  }

  inline UmOnlinePlayers& operator=(UmOnlinePlayers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmOnlinePlayers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmOnlinePlayers* internal_default_instance() {
    return reinterpret_cast<const UmOnlinePlayers*>(
               &_UmOnlinePlayers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UmOnlinePlayers* other);
  friend void swap(UmOnlinePlayers& a, UmOnlinePlayers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmOnlinePlayers* New() const PROTOBUF_FINAL { return New(NULL); }

  UmOnlinePlayers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmOnlinePlayers& from);
  void MergeFrom(const UmOnlinePlayers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmOnlinePlayers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 players = 2;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  ::google::protobuf::uint32 players() const;
  void set_players(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmOnlinePlayers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 players_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmOnlinePlayersImpl();
};
// -------------------------------------------------------------------

class UmQueryUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmQueryUser) */ {
 public:
  UmQueryUser();
  virtual ~UmQueryUser();

  UmQueryUser(const UmQueryUser& from);

  inline UmQueryUser& operator=(const UmQueryUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmQueryUser(UmQueryUser&& from) noexcept
    : UmQueryUser() {
    *this = ::std::move(from);
  }

  inline UmQueryUser& operator=(UmQueryUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmQueryUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmQueryUser* internal_default_instance() {
    return reinterpret_cast<const UmQueryUser*>(
               &_UmQueryUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(UmQueryUser* other);
  friend void swap(UmQueryUser& a, UmQueryUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmQueryUser* New() const PROTOBUF_FINAL { return New(NULL); }

  UmQueryUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmQueryUser& from);
  void MergeFrom(const UmQueryUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmQueryUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // uint32 win = 3;
  void clear_win();
  static const int kWinFieldNumber = 3;
  ::google::protobuf::uint32 win() const;
  void set_win(::google::protobuf::uint32 value);

  // uint32 draw = 4;
  void clear_draw();
  static const int kDrawFieldNumber = 4;
  ::google::protobuf::uint32 draw() const;
  void set_draw(::google::protobuf::uint32 value);

  // uint32 lose = 5;
  void clear_lose();
  static const int kLoseFieldNumber = 5;
  ::google::protobuf::uint32 lose() const;
  void set_lose(::google::protobuf::uint32 value);

  // uint32 hand_id = 6;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 6;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmQueryUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::uint32 draw_;
  ::google::protobuf::uint32 lose_;
  ::google::protobuf::uint32 hand_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmQueryUserImpl();
};
// -------------------------------------------------------------------

class UmUserConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmUserConfig) */ {
 public:
  UmUserConfig();
  virtual ~UmUserConfig();

  UmUserConfig(const UmUserConfig& from);

  inline UmUserConfig& operator=(const UmUserConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmUserConfig(UmUserConfig&& from) noexcept
    : UmUserConfig() {
    *this = ::std::move(from);
  }

  inline UmUserConfig& operator=(UmUserConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmUserConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmUserConfig* internal_default_instance() {
    return reinterpret_cast<const UmUserConfig*>(
               &_UmUserConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(UmUserConfig* other);
  friend void swap(UmUserConfig& a, UmUserConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmUserConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  UmUserConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmUserConfig& from);
  void MergeFrom(const UmUserConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmUserConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // uint32 win = 3;
  void clear_win();
  static const int kWinFieldNumber = 3;
  ::google::protobuf::uint32 win() const;
  void set_win(::google::protobuf::uint32 value);

  // uint32 draw = 4;
  void clear_draw();
  static const int kDrawFieldNumber = 4;
  ::google::protobuf::uint32 draw() const;
  void set_draw(::google::protobuf::uint32 value);

  // uint32 lose = 5;
  void clear_lose();
  static const int kLoseFieldNumber = 5;
  ::google::protobuf::uint32 lose() const;
  void set_lose(::google::protobuf::uint32 value);

  // uint32 reset_currency_times = 6;
  void clear_reset_currency_times();
  static const int kResetCurrencyTimesFieldNumber = 6;
  ::google::protobuf::uint32 reset_currency_times() const;
  void set_reset_currency_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmUserConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::uint32 win_;
  ::google::protobuf::uint32 draw_;
  ::google::protobuf::uint32 lose_;
  ::google::protobuf::uint32 reset_currency_times_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmUserConfigImpl();
};
// -------------------------------------------------------------------

class UserConnExit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UserConnExit) */ {
 public:
  UserConnExit();
  virtual ~UserConnExit();

  UserConnExit(const UserConnExit& from);

  inline UserConnExit& operator=(const UserConnExit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserConnExit(UserConnExit&& from) noexcept
    : UserConnExit() {
    *this = ::std::move(from);
  }

  inline UserConnExit& operator=(UserConnExit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserConnExit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserConnExit* internal_default_instance() {
    return reinterpret_cast<const UserConnExit*>(
               &_UserConnExit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UserConnExit* other);
  friend void swap(UserConnExit& a, UserConnExit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserConnExit* New() const PROTOBUF_FINAL { return New(NULL); }

  UserConnExit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserConnExit& from);
  void MergeFrom(const UserConnExit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserConnExit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Pb.ServerID server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  const ::Pb::ServerID& server_id() const;
  ::Pb::ServerID* release_server_id();
  ::Pb::ServerID* mutable_server_id();
  void set_allocated_server_id(::Pb::ServerID* server_id);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 conn_id = 3;
  void clear_conn_id();
  static const int kConnIdFieldNumber = 3;
  ::google::protobuf::uint32 conn_id() const;
  void set_conn_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UserConnExit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Pb::ServerID* server_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 conn_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUserConnExitImpl();
};
// -------------------------------------------------------------------

class ResetCurrency : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.ResetCurrency) */ {
 public:
  ResetCurrency();
  virtual ~ResetCurrency();

  ResetCurrency(const ResetCurrency& from);

  inline ResetCurrency& operator=(const ResetCurrency& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetCurrency(ResetCurrency&& from) noexcept
    : ResetCurrency() {
    *this = ::std::move(from);
  }

  inline ResetCurrency& operator=(ResetCurrency&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetCurrency& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetCurrency* internal_default_instance() {
    return reinterpret_cast<const ResetCurrency*>(
               &_ResetCurrency_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ResetCurrency* other);
  friend void swap(ResetCurrency& a, ResetCurrency& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetCurrency* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetCurrency* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetCurrency& from);
  void MergeFrom(const ResetCurrency& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetCurrency* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // uint32 currency = 2;
  void clear_currency();
  static const int kCurrencyFieldNumber = 2;
  ::google::protobuf::uint32 currency() const;
  void set_currency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.ResetCurrency)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 currency_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsResetCurrencyImpl();
};
// -------------------------------------------------------------------

class ResetUserForTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.ResetUserForTest) */ {
 public:
  ResetUserForTest();
  virtual ~ResetUserForTest();

  ResetUserForTest(const ResetUserForTest& from);

  inline ResetUserForTest& operator=(const ResetUserForTest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetUserForTest(ResetUserForTest&& from) noexcept
    : ResetUserForTest() {
    *this = ::std::move(from);
  }

  inline ResetUserForTest& operator=(ResetUserForTest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetUserForTest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetUserForTest* internal_default_instance() {
    return reinterpret_cast<const ResetUserForTest*>(
               &_ResetUserForTest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ResetUserForTest* other);
  friend void swap(ResetUserForTest& a, ResetUserForTest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetUserForTest* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetUserForTest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetUserForTest& from);
  void MergeFrom(const ResetUserForTest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetUserForTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cmd_password = 3;
  void clear_cmd_password();
  static const int kCmdPasswordFieldNumber = 3;
  const ::std::string& cmd_password() const;
  void set_cmd_password(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd_password(::std::string&& value);
  #endif
  void set_cmd_password(const char* value);
  void set_cmd_password(const char* value, size_t size);
  ::std::string* mutable_cmd_password();
  ::std::string* release_cmd_password();
  void set_allocated_cmd_password(::std::string* cmd_password);

  // int64 role_currency = 2;
  void clear_role_currency();
  static const int kRoleCurrencyFieldNumber = 2;
  ::google::protobuf::int64 role_currency() const;
  void set_role_currency(::google::protobuf::int64 value);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.ResetUserForTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cmd_password_;
  ::google::protobuf::int64 role_currency_;
  ::google::protobuf::uint32 role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsResetUserForTestImpl();
};
// -------------------------------------------------------------------

class UmUserMatchInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.UmUserMatchInfo) */ {
 public:
  UmUserMatchInfo();
  virtual ~UmUserMatchInfo();

  UmUserMatchInfo(const UmUserMatchInfo& from);

  inline UmUserMatchInfo& operator=(const UmUserMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UmUserMatchInfo(UmUserMatchInfo&& from) noexcept
    : UmUserMatchInfo() {
    *this = ::std::move(from);
  }

  inline UmUserMatchInfo& operator=(UmUserMatchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UmUserMatchInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UmUserMatchInfo* internal_default_instance() {
    return reinterpret_cast<const UmUserMatchInfo*>(
               &_UmUserMatchInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UmUserMatchInfo* other);
  friend void swap(UmUserMatchInfo& a, UmUserMatchInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UmUserMatchInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UmUserMatchInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UmUserMatchInfo& from);
  void MergeFrom(const UmUserMatchInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UmUserMatchInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // int32 money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // uint32 hands = 3;
  void clear_hands();
  static const int kHandsFieldNumber = 3;
  ::google::protobuf::uint32 hands() const;
  void set_hands(::google::protobuf::uint32 value);

  // uint32 tickets = 4;
  void clear_tickets();
  static const int kTicketsFieldNumber = 4;
  ::google::protobuf::uint32 tickets() const;
  void set_tickets(::google::protobuf::uint32 value);

  // uint32 match_hands = 5;
  void clear_match_hands();
  static const int kMatchHandsFieldNumber = 5;
  ::google::protobuf::uint32 match_hands() const;
  void set_match_hands(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.UmUserMatchInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::uint32 hands_;
  ::google::protobuf::uint32 tickets_;
  ::google::protobuf::uint32 match_hands_;
  mutable int _cached_size_;
  friend struct ::protobuf_um_2eproto::TableStruct;
  friend void ::protobuf_um_2eproto::InitDefaultsUmUserMatchInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UmLoginReq

// string user_name = 1;
inline void UmLoginReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UmLoginReq::user_name() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.user_name)
  return user_name_.GetNoArena();
}
inline void UmLoginReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.UmLoginReq.user_name)
}
#if LANG_CXX11
inline void UmLoginReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.UmLoginReq.user_name)
}
#endif
inline void UmLoginReq::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.UmLoginReq.user_name)
}
inline void UmLoginReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.UmLoginReq.user_name)
}
inline ::std::string* UmLoginReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UmLoginReq::release_user_name() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UmLoginReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginReq.user_name)
}

// uint32 login_type = 2;
inline void UmLoginReq::clear_login_type() {
  login_type_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginReq::login_type() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.login_type)
  return login_type_;
}
inline void UmLoginReq::set_login_type(::google::protobuf::uint32 value) {
  
  login_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginReq.login_type)
}

// uint32 client_type = 3;
inline void UmLoginReq::clear_client_type() {
  client_type_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginReq::client_type() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.client_type)
  return client_type_;
}
inline void UmLoginReq::set_client_type(::google::protobuf::uint32 value) {
  
  client_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginReq.client_type)
}

// string password = 4;
inline void UmLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UmLoginReq::password() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.password)
  return password_.GetNoArena();
}
inline void UmLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.UmLoginReq.password)
}
#if LANG_CXX11
inline void UmLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.UmLoginReq.password)
}
#endif
inline void UmLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.UmLoginReq.password)
}
inline void UmLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.UmLoginReq.password)
}
inline ::std::string* UmLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UmLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UmLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginReq.password)
}

// .Pb.ServerID server_id = 5;
inline bool UmLoginReq::has_server_id() const {
  return this != internal_default_instance() && server_id_ != NULL;
}
inline const ::Pb::ServerID& UmLoginReq::server_id() const {
  const ::Pb::ServerID* p = server_id_;
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.server_id)
  return p != NULL ? *p : *reinterpret_cast<const ::Pb::ServerID*>(
      &::Pb::_ServerID_default_instance_);
}
inline ::Pb::ServerID* UmLoginReq::release_server_id() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginReq.server_id)
  
  ::Pb::ServerID* temp = server_id_;
  server_id_ = NULL;
  return temp;
}
inline ::Pb::ServerID* UmLoginReq::mutable_server_id() {
  
  if (server_id_ == NULL) {
    server_id_ = new ::Pb::ServerID;
  }
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginReq.server_id)
  return server_id_;
}
inline void UmLoginReq::set_allocated_server_id(::Pb::ServerID* server_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(server_id_);
  }
  if (server_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_id, submessage_arena);
    }
    
  } else {
    
  }
  server_id_ = server_id;
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginReq.server_id)
}

// uint64 tpa_player_id = 6;
inline void UmLoginReq::clear_tpa_player_id() {
  tpa_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UmLoginReq::tpa_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginReq.tpa_player_id)
  return tpa_player_id_;
}
inline void UmLoginReq::set_tpa_player_id(::google::protobuf::uint64 value) {
  
  tpa_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginReq.tpa_player_id)
}

// -------------------------------------------------------------------

// UmLoginResp

// uint32 role_id = 1;
inline void UmLoginResp::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_id)
  return role_id_;
}
inline void UmLoginResp::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_id)
}

// string role_name = 2;
inline void UmLoginResp::clear_role_name() {
  role_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UmLoginResp::role_name() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_name)
  return role_name_.GetNoArena();
}
inline void UmLoginResp::set_role_name(const ::std::string& value) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_name)
}
#if LANG_CXX11
inline void UmLoginResp::set_role_name(::std::string&& value) {
  
  role_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.UmLoginResp.role_name)
}
#endif
inline void UmLoginResp::set_role_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.UmLoginResp.role_name)
}
inline void UmLoginResp::set_role_name(const char* value, size_t size) {
  
  role_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.UmLoginResp.role_name)
}
inline ::std::string* UmLoginResp::mutable_role_name() {
  
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginResp.role_name)
  return role_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UmLoginResp::release_role_name() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginResp.role_name)
  
  return role_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UmLoginResp::set_allocated_role_name(::std::string* role_name) {
  if (role_name != NULL) {
    
  } else {
    
  }
  role_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_name);
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginResp.role_name)
}

// string role_img = 3;
inline void UmLoginResp::clear_role_img() {
  role_img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UmLoginResp::role_img() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_img)
  return role_img_.GetNoArena();
}
inline void UmLoginResp::set_role_img(const ::std::string& value) {
  
  role_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_img)
}
#if LANG_CXX11
inline void UmLoginResp::set_role_img(::std::string&& value) {
  
  role_img_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.UmLoginResp.role_img)
}
#endif
inline void UmLoginResp::set_role_img(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  role_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.UmLoginResp.role_img)
}
inline void UmLoginResp::set_role_img(const char* value, size_t size) {
  
  role_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.UmLoginResp.role_img)
}
inline ::std::string* UmLoginResp::mutable_role_img() {
  
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginResp.role_img)
  return role_img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UmLoginResp::release_role_img() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginResp.role_img)
  
  return role_img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UmLoginResp::set_allocated_role_img(::std::string* role_img) {
  if (role_img != NULL) {
    
  } else {
    
  }
  role_img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_img);
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginResp.role_img)
}

// uint32 role_region = 4;
inline void UmLoginResp::clear_role_region() {
  role_region_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::role_region() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_region)
  return role_region_;
}
inline void UmLoginResp::set_role_region(::google::protobuf::uint32 value) {
  
  role_region_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_region)
}

// uint32 role_server = 5;
inline void UmLoginResp::clear_role_server() {
  role_server_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::role_server() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_server)
  return role_server_;
}
inline void UmLoginResp::set_role_server(::google::protobuf::uint32 value) {
  
  role_server_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_server)
}

// uint32 role_sex = 6;
inline void UmLoginResp::clear_role_sex() {
  role_sex_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::role_sex() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_sex)
  return role_sex_;
}
inline void UmLoginResp::set_role_sex(::google::protobuf::uint32 value) {
  
  role_sex_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_sex)
}

// uint32 role_level = 7;
inline void UmLoginResp::clear_role_level() {
  role_level_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::role_level() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_level)
  return role_level_;
}
inline void UmLoginResp::set_role_level(::google::protobuf::uint32 value) {
  
  role_level_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_level)
}

// int64 role_currency = 8;
inline void UmLoginResp::clear_role_currency() {
  role_currency_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UmLoginResp::role_currency() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.role_currency)
  return role_currency_;
}
inline void UmLoginResp::set_role_currency(::google::protobuf::int64 value) {
  
  role_currency_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.role_currency)
}

// uint32 draw = 9;
inline void UmLoginResp::clear_draw() {
  draw_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::draw() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.draw)
  return draw_;
}
inline void UmLoginResp::set_draw(::google::protobuf::uint32 value) {
  
  draw_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.draw)
}

// uint32 win = 10;
inline void UmLoginResp::clear_win() {
  win_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::win() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.win)
  return win_;
}
inline void UmLoginResp::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.win)
}

// uint32 lose = 11;
inline void UmLoginResp::clear_lose() {
  lose_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::lose() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.lose)
  return lose_;
}
inline void UmLoginResp::set_lose(::google::protobuf::uint32 value) {
  
  lose_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.lose)
}

// string acpc_ip = 12;
inline void UmLoginResp::clear_acpc_ip() {
  acpc_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UmLoginResp::acpc_ip() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.acpc_ip)
  return acpc_ip_.GetNoArena();
}
inline void UmLoginResp::set_acpc_ip(const ::std::string& value) {
  
  acpc_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.acpc_ip)
}
#if LANG_CXX11
inline void UmLoginResp::set_acpc_ip(::std::string&& value) {
  
  acpc_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.UmLoginResp.acpc_ip)
}
#endif
inline void UmLoginResp::set_acpc_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  acpc_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.UmLoginResp.acpc_ip)
}
inline void UmLoginResp::set_acpc_ip(const char* value, size_t size) {
  
  acpc_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.UmLoginResp.acpc_ip)
}
inline ::std::string* UmLoginResp::mutable_acpc_ip() {
  
  // @@protoc_insertion_point(field_mutable:Pb.UmLoginResp.acpc_ip)
  return acpc_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UmLoginResp::release_acpc_ip() {
  // @@protoc_insertion_point(field_release:Pb.UmLoginResp.acpc_ip)
  
  return acpc_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UmLoginResp::set_allocated_acpc_ip(::std::string* acpc_ip) {
  if (acpc_ip != NULL) {
    
  } else {
    
  }
  acpc_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acpc_ip);
  // @@protoc_insertion_point(field_set_allocated:Pb.UmLoginResp.acpc_ip)
}

// uint32 acpc_port = 13;
inline void UmLoginResp::clear_acpc_port() {
  acpc_port_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::acpc_port() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.acpc_port)
  return acpc_port_;
}
inline void UmLoginResp::set_acpc_port(::google::protobuf::uint32 value) {
  
  acpc_port_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.acpc_port)
}

// uint64 room_id = 14;
inline void UmLoginResp::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UmLoginResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.room_id)
  return room_id_;
}
inline void UmLoginResp::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.room_id)
}

// uint64 view_room_id = 15;
inline void UmLoginResp::clear_view_room_id() {
  view_room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UmLoginResp::view_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.view_room_id)
  return view_room_id_;
}
inline void UmLoginResp::set_view_room_id(::google::protobuf::uint64 value) {
  
  view_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.view_room_id)
}

// uint64 tpa_player_id = 16;
inline void UmLoginResp::clear_tpa_player_id() {
  tpa_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UmLoginResp::tpa_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.tpa_player_id)
  return tpa_player_id_;
}
inline void UmLoginResp::set_tpa_player_id(::google::protobuf::uint64 value) {
  
  tpa_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.tpa_player_id)
}

// uint32 acpc_server_id = 17;
inline void UmLoginResp::clear_acpc_server_id() {
  acpc_server_id_ = 0u;
}
inline ::google::protobuf::uint32 UmLoginResp::acpc_server_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLoginResp.acpc_server_id)
  return acpc_server_id_;
}
inline void UmLoginResp::set_acpc_server_id(::google::protobuf::uint32 value) {
  
  acpc_server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLoginResp.acpc_server_id)
}

// -------------------------------------------------------------------

// UmLogout

// uint32 role_id = 1;
inline void UmLogout::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmLogout::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmLogout.role_id)
  return role_id_;
}
inline void UmLogout::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmLogout.role_id)
}

// -------------------------------------------------------------------

// UmRecharge

// uint32 role_id = 1;
inline void UmRecharge::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmRecharge::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmRecharge.role_id)
  return role_id_;
}
inline void UmRecharge::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmRecharge.role_id)
}

// uint32 money = 2;
inline void UmRecharge::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 UmRecharge::money() const {
  // @@protoc_insertion_point(field_get:Pb.UmRecharge.money)
  return money_;
}
inline void UmRecharge::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmRecharge.money)
}

// -------------------------------------------------------------------

// UmOnlinePlayers

// uint32 role_id = 1;
inline void UmOnlinePlayers::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmOnlinePlayers::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmOnlinePlayers.role_id)
  return role_id_;
}
inline void UmOnlinePlayers::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmOnlinePlayers.role_id)
}

// uint32 players = 2;
inline void UmOnlinePlayers::clear_players() {
  players_ = 0u;
}
inline ::google::protobuf::uint32 UmOnlinePlayers::players() const {
  // @@protoc_insertion_point(field_get:Pb.UmOnlinePlayers.players)
  return players_;
}
inline void UmOnlinePlayers::set_players(::google::protobuf::uint32 value) {
  
  players_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmOnlinePlayers.players)
}

// -------------------------------------------------------------------

// UmQueryUser

// uint32 role_id = 1;
inline void UmQueryUser::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmQueryUser::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.role_id)
  return role_id_;
}
inline void UmQueryUser::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.role_id)
}

// int32 money = 2;
inline void UmQueryUser::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 UmQueryUser::money() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.money)
  return money_;
}
inline void UmQueryUser::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.money)
}

// uint32 win = 3;
inline void UmQueryUser::clear_win() {
  win_ = 0u;
}
inline ::google::protobuf::uint32 UmQueryUser::win() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.win)
  return win_;
}
inline void UmQueryUser::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.win)
}

// uint32 draw = 4;
inline void UmQueryUser::clear_draw() {
  draw_ = 0u;
}
inline ::google::protobuf::uint32 UmQueryUser::draw() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.draw)
  return draw_;
}
inline void UmQueryUser::set_draw(::google::protobuf::uint32 value) {
  
  draw_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.draw)
}

// uint32 lose = 5;
inline void UmQueryUser::clear_lose() {
  lose_ = 0u;
}
inline ::google::protobuf::uint32 UmQueryUser::lose() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.lose)
  return lose_;
}
inline void UmQueryUser::set_lose(::google::protobuf::uint32 value) {
  
  lose_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.lose)
}

// uint32 hand_id = 6;
inline void UmQueryUser::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 UmQueryUser::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmQueryUser.hand_id)
  return hand_id_;
}
inline void UmQueryUser::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmQueryUser.hand_id)
}

// -------------------------------------------------------------------

// UmUserConfig

// uint32 role_id = 1;
inline void UmUserConfig::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmUserConfig::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.role_id)
  return role_id_;
}
inline void UmUserConfig::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.role_id)
}

// int32 money = 2;
inline void UmUserConfig::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 UmUserConfig::money() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.money)
  return money_;
}
inline void UmUserConfig::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.money)
}

// uint32 win = 3;
inline void UmUserConfig::clear_win() {
  win_ = 0u;
}
inline ::google::protobuf::uint32 UmUserConfig::win() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.win)
  return win_;
}
inline void UmUserConfig::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.win)
}

// uint32 draw = 4;
inline void UmUserConfig::clear_draw() {
  draw_ = 0u;
}
inline ::google::protobuf::uint32 UmUserConfig::draw() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.draw)
  return draw_;
}
inline void UmUserConfig::set_draw(::google::protobuf::uint32 value) {
  
  draw_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.draw)
}

// uint32 lose = 5;
inline void UmUserConfig::clear_lose() {
  lose_ = 0u;
}
inline ::google::protobuf::uint32 UmUserConfig::lose() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.lose)
  return lose_;
}
inline void UmUserConfig::set_lose(::google::protobuf::uint32 value) {
  
  lose_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.lose)
}

// uint32 reset_currency_times = 6;
inline void UmUserConfig::clear_reset_currency_times() {
  reset_currency_times_ = 0u;
}
inline ::google::protobuf::uint32 UmUserConfig::reset_currency_times() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserConfig.reset_currency_times)
  return reset_currency_times_;
}
inline void UmUserConfig::set_reset_currency_times(::google::protobuf::uint32 value) {
  
  reset_currency_times_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserConfig.reset_currency_times)
}

// -------------------------------------------------------------------

// UserConnExit

// uint32 role_id = 1;
inline void UserConnExit::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UserConnExit::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UserConnExit.role_id)
  return role_id_;
}
inline void UserConnExit::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UserConnExit.role_id)
}

// .Pb.ServerID server_id = 2;
inline bool UserConnExit::has_server_id() const {
  return this != internal_default_instance() && server_id_ != NULL;
}
inline const ::Pb::ServerID& UserConnExit::server_id() const {
  const ::Pb::ServerID* p = server_id_;
  // @@protoc_insertion_point(field_get:Pb.UserConnExit.server_id)
  return p != NULL ? *p : *reinterpret_cast<const ::Pb::ServerID*>(
      &::Pb::_ServerID_default_instance_);
}
inline ::Pb::ServerID* UserConnExit::release_server_id() {
  // @@protoc_insertion_point(field_release:Pb.UserConnExit.server_id)
  
  ::Pb::ServerID* temp = server_id_;
  server_id_ = NULL;
  return temp;
}
inline ::Pb::ServerID* UserConnExit::mutable_server_id() {
  
  if (server_id_ == NULL) {
    server_id_ = new ::Pb::ServerID;
  }
  // @@protoc_insertion_point(field_mutable:Pb.UserConnExit.server_id)
  return server_id_;
}
inline void UserConnExit::set_allocated_server_id(::Pb::ServerID* server_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(server_id_);
  }
  if (server_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_id, submessage_arena);
    }
    
  } else {
    
  }
  server_id_ = server_id;
  // @@protoc_insertion_point(field_set_allocated:Pb.UserConnExit.server_id)
}

// uint32 conn_id = 3;
inline void UserConnExit::clear_conn_id() {
  conn_id_ = 0u;
}
inline ::google::protobuf::uint32 UserConnExit::conn_id() const {
  // @@protoc_insertion_point(field_get:Pb.UserConnExit.conn_id)
  return conn_id_;
}
inline void UserConnExit::set_conn_id(::google::protobuf::uint32 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UserConnExit.conn_id)
}

// -------------------------------------------------------------------

// ResetCurrency

// uint32 role_id = 1;
inline void ResetCurrency::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetCurrency::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.ResetCurrency.role_id)
  return role_id_;
}
inline void ResetCurrency::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.ResetCurrency.role_id)
}

// uint32 currency = 2;
inline void ResetCurrency::clear_currency() {
  currency_ = 0u;
}
inline ::google::protobuf::uint32 ResetCurrency::currency() const {
  // @@protoc_insertion_point(field_get:Pb.ResetCurrency.currency)
  return currency_;
}
inline void ResetCurrency::set_currency(::google::protobuf::uint32 value) {
  
  currency_ = value;
  // @@protoc_insertion_point(field_set:Pb.ResetCurrency.currency)
}

// -------------------------------------------------------------------

// ResetUserForTest

// uint32 role_id = 1;
inline void ResetUserForTest::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetUserForTest::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.ResetUserForTest.role_id)
  return role_id_;
}
inline void ResetUserForTest::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.ResetUserForTest.role_id)
}

// int64 role_currency = 2;
inline void ResetUserForTest::clear_role_currency() {
  role_currency_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResetUserForTest::role_currency() const {
  // @@protoc_insertion_point(field_get:Pb.ResetUserForTest.role_currency)
  return role_currency_;
}
inline void ResetUserForTest::set_role_currency(::google::protobuf::int64 value) {
  
  role_currency_ = value;
  // @@protoc_insertion_point(field_set:Pb.ResetUserForTest.role_currency)
}

// string cmd_password = 3;
inline void ResetUserForTest::clear_cmd_password() {
  cmd_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResetUserForTest::cmd_password() const {
  // @@protoc_insertion_point(field_get:Pb.ResetUserForTest.cmd_password)
  return cmd_password_.GetNoArena();
}
inline void ResetUserForTest::set_cmd_password(const ::std::string& value) {
  
  cmd_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.ResetUserForTest.cmd_password)
}
#if LANG_CXX11
inline void ResetUserForTest::set_cmd_password(::std::string&& value) {
  
  cmd_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.ResetUserForTest.cmd_password)
}
#endif
inline void ResetUserForTest::set_cmd_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cmd_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.ResetUserForTest.cmd_password)
}
inline void ResetUserForTest::set_cmd_password(const char* value, size_t size) {
  
  cmd_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.ResetUserForTest.cmd_password)
}
inline ::std::string* ResetUserForTest::mutable_cmd_password() {
  
  // @@protoc_insertion_point(field_mutable:Pb.ResetUserForTest.cmd_password)
  return cmd_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResetUserForTest::release_cmd_password() {
  // @@protoc_insertion_point(field_release:Pb.ResetUserForTest.cmd_password)
  
  return cmd_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResetUserForTest::set_allocated_cmd_password(::std::string* cmd_password) {
  if (cmd_password != NULL) {
    
  } else {
    
  }
  cmd_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd_password);
  // @@protoc_insertion_point(field_set_allocated:Pb.ResetUserForTest.cmd_password)
}

// -------------------------------------------------------------------

// UmUserMatchInfo

// uint32 role_id = 1;
inline void UmUserMatchInfo::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 UmUserMatchInfo::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserMatchInfo.role_id)
  return role_id_;
}
inline void UmUserMatchInfo::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserMatchInfo.role_id)
}

// int32 money = 2;
inline void UmUserMatchInfo::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 UmUserMatchInfo::money() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserMatchInfo.money)
  return money_;
}
inline void UmUserMatchInfo::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserMatchInfo.money)
}

// uint32 hands = 3;
inline void UmUserMatchInfo::clear_hands() {
  hands_ = 0u;
}
inline ::google::protobuf::uint32 UmUserMatchInfo::hands() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserMatchInfo.hands)
  return hands_;
}
inline void UmUserMatchInfo::set_hands(::google::protobuf::uint32 value) {
  
  hands_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserMatchInfo.hands)
}

// uint32 tickets = 4;
inline void UmUserMatchInfo::clear_tickets() {
  tickets_ = 0u;
}
inline ::google::protobuf::uint32 UmUserMatchInfo::tickets() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserMatchInfo.tickets)
  return tickets_;
}
inline void UmUserMatchInfo::set_tickets(::google::protobuf::uint32 value) {
  
  tickets_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserMatchInfo.tickets)
}

// uint32 match_hands = 5;
inline void UmUserMatchInfo::clear_match_hands() {
  match_hands_ = 0u;
}
inline ::google::protobuf::uint32 UmUserMatchInfo::match_hands() const {
  // @@protoc_insertion_point(field_get:Pb.UmUserMatchInfo.match_hands)
  return match_hands_;
}
inline void UmUserMatchInfo::set_match_hands(::google::protobuf::uint32 value) {
  
  match_hands_ = value;
  // @@protoc_insertion_point(field_set:Pb.UmUserMatchInfo.match_hands)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_um_2eproto__INCLUDED
