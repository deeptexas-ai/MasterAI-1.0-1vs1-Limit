// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brain.proto

#ifndef PROTOBUF_brain_2eproto__INCLUDED
#define PROTOBUF_brain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "system.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_brain_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRobotActionInfoImpl();
void InitDefaultsRobotActionInfo();
void InitDefaultsNetMsg_Brain_RobotAction_C2SImpl();
void InitDefaultsNetMsg_Brain_RobotAction_C2S();
void InitDefaultsNetMsg_Brain_RobotAction_S2CImpl();
void InitDefaultsNetMsg_Brain_RobotAction_S2C();
void InitDefaultsRequestRobotJoinRoomImpl();
void InitDefaultsRequestRobotJoinRoom();
void InitDefaultsRequestRobotThreadImpl();
void InitDefaultsRequestRobotThread();
void InitDefaultsCheckRobotValidImpl();
void InitDefaultsCheckRobotValid();
inline void InitDefaults() {
  InitDefaultsRobotActionInfo();
  InitDefaultsNetMsg_Brain_RobotAction_C2S();
  InitDefaultsNetMsg_Brain_RobotAction_S2C();
  InitDefaultsRequestRobotJoinRoom();
  InitDefaultsRequestRobotThread();
  InitDefaultsCheckRobotValid();
}
}  // namespace protobuf_brain_2eproto
namespace Pb {
class CheckRobotValid;
class CheckRobotValidDefaultTypeInternal;
extern CheckRobotValidDefaultTypeInternal _CheckRobotValid_default_instance_;
class NetMsg_Brain_RobotAction_C2S;
class NetMsg_Brain_RobotAction_C2SDefaultTypeInternal;
extern NetMsg_Brain_RobotAction_C2SDefaultTypeInternal _NetMsg_Brain_RobotAction_C2S_default_instance_;
class NetMsg_Brain_RobotAction_S2C;
class NetMsg_Brain_RobotAction_S2CDefaultTypeInternal;
extern NetMsg_Brain_RobotAction_S2CDefaultTypeInternal _NetMsg_Brain_RobotAction_S2C_default_instance_;
class RequestRobotJoinRoom;
class RequestRobotJoinRoomDefaultTypeInternal;
extern RequestRobotJoinRoomDefaultTypeInternal _RequestRobotJoinRoom_default_instance_;
class RequestRobotThread;
class RequestRobotThreadDefaultTypeInternal;
extern RequestRobotThreadDefaultTypeInternal _RequestRobotThread_default_instance_;
class RobotActionInfo;
class RobotActionInfoDefaultTypeInternal;
extern RobotActionInfoDefaultTypeInternal _RobotActionInfo_default_instance_;
}  // namespace Pb
namespace Pb {

enum NETMSG_BRAIN {
  NETMSG_BRAIN_UNKNOW = 0,
  NETMSG_BRAIN_ROBOT_ACTION = 1,
  NETMSG_BRAIN_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NETMSG_BRAIN_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NETMSG_BRAIN_IsValid(int value);
const NETMSG_BRAIN NETMSG_BRAIN_MIN = NETMSG_BRAIN_UNKNOW;
const NETMSG_BRAIN NETMSG_BRAIN_MAX = NETMSG_BRAIN_ROBOT_ACTION;
const int NETMSG_BRAIN_ARRAYSIZE = NETMSG_BRAIN_MAX + 1;

const ::google::protobuf::EnumDescriptor* NETMSG_BRAIN_descriptor();
inline const ::std::string& NETMSG_BRAIN_Name(NETMSG_BRAIN value) {
  return ::google::protobuf::internal::NameOfEnum(
    NETMSG_BRAIN_descriptor(), value);
}
inline bool NETMSG_BRAIN_Parse(
    const ::std::string& name, NETMSG_BRAIN* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NETMSG_BRAIN>(
    NETMSG_BRAIN_descriptor(), name, value);
}
// ===================================================================

class RobotActionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.RobotActionInfo) */ {
 public:
  RobotActionInfo();
  virtual ~RobotActionInfo();

  RobotActionInfo(const RobotActionInfo& from);

  inline RobotActionInfo& operator=(const RobotActionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotActionInfo(RobotActionInfo&& from) noexcept
    : RobotActionInfo() {
    *this = ::std::move(from);
  }

  inline RobotActionInfo& operator=(RobotActionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotActionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotActionInfo* internal_default_instance() {
    return reinterpret_cast<const RobotActionInfo*>(
               &_RobotActionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RobotActionInfo* other);
  friend void swap(RobotActionInfo& a, RobotActionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotActionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotActionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotActionInfo& from);
  void MergeFrom(const RobotActionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotActionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Pb.AcpcState state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  const ::Pb::AcpcState& state() const;
  ::Pb::AcpcState* release_state();
  ::Pb::AcpcState* mutable_state();
  void set_allocated_state(::Pb::AcpcState* state);

  // uint32 robot_pos = 1;
  void clear_robot_pos();
  static const int kRobotPosFieldNumber = 1;
  ::google::protobuf::uint32 robot_pos() const;
  void set_robot_pos(::google::protobuf::uint32 value);

  // uint32 game_type = 2;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 2;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // uint32 difficulty = 3;
  void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  ::google::protobuf::uint32 difficulty() const;
  void set_difficulty(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.RobotActionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Pb::AcpcState* state_;
  ::google::protobuf::uint32 robot_pos_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::uint32 difficulty_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsRobotActionInfoImpl();
};
// -------------------------------------------------------------------

class NetMsg_Brain_RobotAction_C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.NetMsg_Brain_RobotAction_C2S) */ {
 public:
  NetMsg_Brain_RobotAction_C2S();
  virtual ~NetMsg_Brain_RobotAction_C2S();

  NetMsg_Brain_RobotAction_C2S(const NetMsg_Brain_RobotAction_C2S& from);

  inline NetMsg_Brain_RobotAction_C2S& operator=(const NetMsg_Brain_RobotAction_C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetMsg_Brain_RobotAction_C2S(NetMsg_Brain_RobotAction_C2S&& from) noexcept
    : NetMsg_Brain_RobotAction_C2S() {
    *this = ::std::move(from);
  }

  inline NetMsg_Brain_RobotAction_C2S& operator=(NetMsg_Brain_RobotAction_C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetMsg_Brain_RobotAction_C2S& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetMsg_Brain_RobotAction_C2S* internal_default_instance() {
    return reinterpret_cast<const NetMsg_Brain_RobotAction_C2S*>(
               &_NetMsg_Brain_RobotAction_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NetMsg_Brain_RobotAction_C2S* other);
  friend void swap(NetMsg_Brain_RobotAction_C2S& a, NetMsg_Brain_RobotAction_C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetMsg_Brain_RobotAction_C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  NetMsg_Brain_RobotAction_C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetMsg_Brain_RobotAction_C2S& from);
  void MergeFrom(const NetMsg_Brain_RobotAction_C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetMsg_Brain_RobotAction_C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Pb.RobotActionInfo action_info = 3;
  bool has_action_info() const;
  void clear_action_info();
  static const int kActionInfoFieldNumber = 3;
  const ::Pb::RobotActionInfo& action_info() const;
  ::Pb::RobotActionInfo* release_action_info();
  ::Pb::RobotActionInfo* mutable_action_info();
  void set_allocated_action_info(::Pb::RobotActionInfo* action_info);

  // uint32 robot_id = 1;
  void clear_robot_id();
  static const int kRobotIdFieldNumber = 1;
  ::google::protobuf::uint32 robot_id() const;
  void set_robot_id(::google::protobuf::uint32 value);

  // uint32 action_seq = 2;
  void clear_action_seq();
  static const int kActionSeqFieldNumber = 2;
  ::google::protobuf::uint32 action_seq() const;
  void set_action_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.NetMsg_Brain_RobotAction_C2S)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Pb::RobotActionInfo* action_info_;
  ::google::protobuf::uint32 robot_id_;
  ::google::protobuf::uint32 action_seq_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsNetMsg_Brain_RobotAction_C2SImpl();
};
// -------------------------------------------------------------------

class NetMsg_Brain_RobotAction_S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.NetMsg_Brain_RobotAction_S2C) */ {
 public:
  NetMsg_Brain_RobotAction_S2C();
  virtual ~NetMsg_Brain_RobotAction_S2C();

  NetMsg_Brain_RobotAction_S2C(const NetMsg_Brain_RobotAction_S2C& from);

  inline NetMsg_Brain_RobotAction_S2C& operator=(const NetMsg_Brain_RobotAction_S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetMsg_Brain_RobotAction_S2C(NetMsg_Brain_RobotAction_S2C&& from) noexcept
    : NetMsg_Brain_RobotAction_S2C() {
    *this = ::std::move(from);
  }

  inline NetMsg_Brain_RobotAction_S2C& operator=(NetMsg_Brain_RobotAction_S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetMsg_Brain_RobotAction_S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetMsg_Brain_RobotAction_S2C* internal_default_instance() {
    return reinterpret_cast<const NetMsg_Brain_RobotAction_S2C*>(
               &_NetMsg_Brain_RobotAction_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(NetMsg_Brain_RobotAction_S2C* other);
  friend void swap(NetMsg_Brain_RobotAction_S2C& a, NetMsg_Brain_RobotAction_S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetMsg_Brain_RobotAction_S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  NetMsg_Brain_RobotAction_S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetMsg_Brain_RobotAction_S2C& from);
  void MergeFrom(const NetMsg_Brain_RobotAction_S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetMsg_Brain_RobotAction_S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 robot_id = 1;
  void clear_robot_id();
  static const int kRobotIdFieldNumber = 1;
  ::google::protobuf::uint32 robot_id() const;
  void set_robot_id(::google::protobuf::uint32 value);

  // uint32 action_seq = 2;
  void clear_action_seq();
  static const int kActionSeqFieldNumber = 2;
  ::google::protobuf::uint32 action_seq() const;
  void set_action_seq(::google::protobuf::uint32 value);

  // uint32 action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::google::protobuf::uint32 action() const;
  void set_action(::google::protobuf::uint32 value);

  // uint32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.NetMsg_Brain_RobotAction_S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 robot_id_;
  ::google::protobuf::uint32 action_seq_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsNetMsg_Brain_RobotAction_S2CImpl();
};
// -------------------------------------------------------------------

class RequestRobotJoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.RequestRobotJoinRoom) */ {
 public:
  RequestRobotJoinRoom();
  virtual ~RequestRobotJoinRoom();

  RequestRobotJoinRoom(const RequestRobotJoinRoom& from);

  inline RequestRobotJoinRoom& operator=(const RequestRobotJoinRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestRobotJoinRoom(RequestRobotJoinRoom&& from) noexcept
    : RequestRobotJoinRoom() {
    *this = ::std::move(from);
  }

  inline RequestRobotJoinRoom& operator=(RequestRobotJoinRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRobotJoinRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestRobotJoinRoom* internal_default_instance() {
    return reinterpret_cast<const RequestRobotJoinRoom*>(
               &_RequestRobotJoinRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RequestRobotJoinRoom* other);
  friend void swap(RequestRobotJoinRoom& a, RequestRobotJoinRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestRobotJoinRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestRobotJoinRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestRobotJoinRoom& from);
  void MergeFrom(const RequestRobotJoinRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestRobotJoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 role_id = 4;
  int role_id_size() const;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  ::google::protobuf::uint32 role_id(int index) const;
  void set_role_id(int index, ::google::protobuf::uint32 value);
  void add_role_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_id();

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string rm_test_param = 5;
  void clear_rm_test_param();
  static const int kRmTestParamFieldNumber = 5;
  const ::std::string& rm_test_param() const;
  void set_rm_test_param(const ::std::string& value);
  #if LANG_CXX11
  void set_rm_test_param(::std::string&& value);
  #endif
  void set_rm_test_param(const char* value);
  void set_rm_test_param(const char* value, size_t size);
  ::std::string* mutable_rm_test_param();
  ::std::string* release_rm_test_param();
  void set_allocated_rm_test_param(::std::string* rm_test_param);

  // uint64 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 game_type = 3;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // int32 seat = 6;
  void clear_seat();
  static const int kSeatFieldNumber = 6;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // uint32 tpa_room_id = 7;
  void clear_tpa_room_id();
  static const int kTpaRoomIdFieldNumber = 7;
  ::google::protobuf::uint32 tpa_room_id() const;
  void set_tpa_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.RequestRobotJoinRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_id_;
  mutable int _role_id_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr rm_test_param_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::uint32 tpa_room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsRequestRobotJoinRoomImpl();
};
// -------------------------------------------------------------------

class RequestRobotThread : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.RequestRobotThread) */ {
 public:
  RequestRobotThread();
  virtual ~RequestRobotThread();

  RequestRobotThread(const RequestRobotThread& from);

  inline RequestRobotThread& operator=(const RequestRobotThread& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestRobotThread(RequestRobotThread&& from) noexcept
    : RequestRobotThread() {
    *this = ::std::move(from);
  }

  inline RequestRobotThread& operator=(RequestRobotThread&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRobotThread& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestRobotThread* internal_default_instance() {
    return reinterpret_cast<const RequestRobotThread*>(
               &_RequestRobotThread_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RequestRobotThread* other);
  friend void swap(RequestRobotThread& a, RequestRobotThread& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestRobotThread* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestRobotThread* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestRobotThread& from);
  void MergeFrom(const RequestRobotThread& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestRobotThread* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_msg = 1;
  void clear_user_msg();
  static const int kUserMsgFieldNumber = 1;
  const ::std::string& user_msg() const;
  void set_user_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_user_msg(::std::string&& value);
  #endif
  void set_user_msg(const char* value);
  void set_user_msg(const char* value, size_t size);
  ::std::string* mutable_user_msg();
  ::std::string* release_user_msg();
  void set_allocated_user_msg(::std::string* user_msg);

  // uint32 thread_id = 2;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 2;
  ::google::protobuf::uint32 thread_id() const;
  void set_thread_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.RequestRobotThread)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_msg_;
  ::google::protobuf::uint32 thread_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsRequestRobotThreadImpl();
};
// -------------------------------------------------------------------

class CheckRobotValid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.CheckRobotValid) */ {
 public:
  CheckRobotValid();
  virtual ~CheckRobotValid();

  CheckRobotValid(const CheckRobotValid& from);

  inline CheckRobotValid& operator=(const CheckRobotValid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckRobotValid(CheckRobotValid&& from) noexcept
    : CheckRobotValid() {
    *this = ::std::move(from);
  }

  inline CheckRobotValid& operator=(CheckRobotValid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRobotValid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckRobotValid* internal_default_instance() {
    return reinterpret_cast<const CheckRobotValid*>(
               &_CheckRobotValid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CheckRobotValid* other);
  friend void swap(CheckRobotValid& a, CheckRobotValid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckRobotValid* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckRobotValid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckRobotValid& from);
  void MergeFrom(const CheckRobotValid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckRobotValid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 room_id = 2;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // uint32 role_id = 1;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 role_id() const;
  void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.CheckRobotValid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 role_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_brain_2eproto::TableStruct;
  friend void ::protobuf_brain_2eproto::InitDefaultsCheckRobotValidImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RobotActionInfo

// uint32 robot_pos = 1;
inline void RobotActionInfo::clear_robot_pos() {
  robot_pos_ = 0u;
}
inline ::google::protobuf::uint32 RobotActionInfo::robot_pos() const {
  // @@protoc_insertion_point(field_get:Pb.RobotActionInfo.robot_pos)
  return robot_pos_;
}
inline void RobotActionInfo::set_robot_pos(::google::protobuf::uint32 value) {
  
  robot_pos_ = value;
  // @@protoc_insertion_point(field_set:Pb.RobotActionInfo.robot_pos)
}

// uint32 game_type = 2;
inline void RobotActionInfo::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 RobotActionInfo::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.RobotActionInfo.game_type)
  return game_type_;
}
inline void RobotActionInfo::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.RobotActionInfo.game_type)
}

// uint32 difficulty = 3;
inline void RobotActionInfo::clear_difficulty() {
  difficulty_ = 0u;
}
inline ::google::protobuf::uint32 RobotActionInfo::difficulty() const {
  // @@protoc_insertion_point(field_get:Pb.RobotActionInfo.difficulty)
  return difficulty_;
}
inline void RobotActionInfo::set_difficulty(::google::protobuf::uint32 value) {
  
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:Pb.RobotActionInfo.difficulty)
}

// .Pb.AcpcState state = 4;
inline bool RobotActionInfo::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline const ::Pb::AcpcState& RobotActionInfo::state() const {
  const ::Pb::AcpcState* p = state_;
  // @@protoc_insertion_point(field_get:Pb.RobotActionInfo.state)
  return p != NULL ? *p : *reinterpret_cast<const ::Pb::AcpcState*>(
      &::Pb::_AcpcState_default_instance_);
}
inline ::Pb::AcpcState* RobotActionInfo::release_state() {
  // @@protoc_insertion_point(field_release:Pb.RobotActionInfo.state)
  
  ::Pb::AcpcState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::Pb::AcpcState* RobotActionInfo::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::Pb::AcpcState;
  }
  // @@protoc_insertion_point(field_mutable:Pb.RobotActionInfo.state)
  return state_;
}
inline void RobotActionInfo::set_allocated_state(::Pb::AcpcState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(state_);
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:Pb.RobotActionInfo.state)
}

// -------------------------------------------------------------------

// NetMsg_Brain_RobotAction_C2S

// uint32 robot_id = 1;
inline void NetMsg_Brain_RobotAction_C2S::clear_robot_id() {
  robot_id_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_C2S::robot_id() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_C2S.robot_id)
  return robot_id_;
}
inline void NetMsg_Brain_RobotAction_C2S::set_robot_id(::google::protobuf::uint32 value) {
  
  robot_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_C2S.robot_id)
}

// uint32 action_seq = 2;
inline void NetMsg_Brain_RobotAction_C2S::clear_action_seq() {
  action_seq_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_C2S::action_seq() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_C2S.action_seq)
  return action_seq_;
}
inline void NetMsg_Brain_RobotAction_C2S::set_action_seq(::google::protobuf::uint32 value) {
  
  action_seq_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_C2S.action_seq)
}

// .Pb.RobotActionInfo action_info = 3;
inline bool NetMsg_Brain_RobotAction_C2S::has_action_info() const {
  return this != internal_default_instance() && action_info_ != NULL;
}
inline void NetMsg_Brain_RobotAction_C2S::clear_action_info() {
  if (GetArenaNoVirtual() == NULL && action_info_ != NULL) {
    delete action_info_;
  }
  action_info_ = NULL;
}
inline const ::Pb::RobotActionInfo& NetMsg_Brain_RobotAction_C2S::action_info() const {
  const ::Pb::RobotActionInfo* p = action_info_;
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_C2S.action_info)
  return p != NULL ? *p : *reinterpret_cast<const ::Pb::RobotActionInfo*>(
      &::Pb::_RobotActionInfo_default_instance_);
}
inline ::Pb::RobotActionInfo* NetMsg_Brain_RobotAction_C2S::release_action_info() {
  // @@protoc_insertion_point(field_release:Pb.NetMsg_Brain_RobotAction_C2S.action_info)
  
  ::Pb::RobotActionInfo* temp = action_info_;
  action_info_ = NULL;
  return temp;
}
inline ::Pb::RobotActionInfo* NetMsg_Brain_RobotAction_C2S::mutable_action_info() {
  
  if (action_info_ == NULL) {
    action_info_ = new ::Pb::RobotActionInfo;
  }
  // @@protoc_insertion_point(field_mutable:Pb.NetMsg_Brain_RobotAction_C2S.action_info)
  return action_info_;
}
inline void NetMsg_Brain_RobotAction_C2S::set_allocated_action_info(::Pb::RobotActionInfo* action_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete action_info_;
  }
  if (action_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      action_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_info, submessage_arena);
    }
    
  } else {
    
  }
  action_info_ = action_info;
  // @@protoc_insertion_point(field_set_allocated:Pb.NetMsg_Brain_RobotAction_C2S.action_info)
}

// -------------------------------------------------------------------

// NetMsg_Brain_RobotAction_S2C

// uint32 robot_id = 1;
inline void NetMsg_Brain_RobotAction_S2C::clear_robot_id() {
  robot_id_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_S2C::robot_id() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_S2C.robot_id)
  return robot_id_;
}
inline void NetMsg_Brain_RobotAction_S2C::set_robot_id(::google::protobuf::uint32 value) {
  
  robot_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_S2C.robot_id)
}

// uint32 action_seq = 2;
inline void NetMsg_Brain_RobotAction_S2C::clear_action_seq() {
  action_seq_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_S2C::action_seq() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_S2C.action_seq)
  return action_seq_;
}
inline void NetMsg_Brain_RobotAction_S2C::set_action_seq(::google::protobuf::uint32 value) {
  
  action_seq_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_S2C.action_seq)
}

// uint32 action = 3;
inline void NetMsg_Brain_RobotAction_S2C::clear_action() {
  action_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_S2C::action() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_S2C.action)
  return action_;
}
inline void NetMsg_Brain_RobotAction_S2C::set_action(::google::protobuf::uint32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_S2C.action)
}

// uint32 size = 4;
inline void NetMsg_Brain_RobotAction_S2C::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 NetMsg_Brain_RobotAction_S2C::size() const {
  // @@protoc_insertion_point(field_get:Pb.NetMsg_Brain_RobotAction_S2C.size)
  return size_;
}
inline void NetMsg_Brain_RobotAction_S2C::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.NetMsg_Brain_RobotAction_S2C.size)
}

// -------------------------------------------------------------------

// RequestRobotJoinRoom

// uint64 room_id = 1;
inline void RequestRobotJoinRoom::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RequestRobotJoinRoom::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.room_id)
  return room_id_;
}
inline void RequestRobotJoinRoom::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.room_id)
}

// string password = 2;
inline void RequestRobotJoinRoom::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestRobotJoinRoom::password() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.password)
  return password_.GetNoArena();
}
inline void RequestRobotJoinRoom::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.password)
}
#if LANG_CXX11
inline void RequestRobotJoinRoom::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.RequestRobotJoinRoom.password)
}
#endif
inline void RequestRobotJoinRoom::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.RequestRobotJoinRoom.password)
}
inline void RequestRobotJoinRoom::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.RequestRobotJoinRoom.password)
}
inline ::std::string* RequestRobotJoinRoom::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Pb.RequestRobotJoinRoom.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestRobotJoinRoom::release_password() {
  // @@protoc_insertion_point(field_release:Pb.RequestRobotJoinRoom.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestRobotJoinRoom::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Pb.RequestRobotJoinRoom.password)
}

// uint32 game_type = 3;
inline void RequestRobotJoinRoom::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 RequestRobotJoinRoom::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.game_type)
  return game_type_;
}
inline void RequestRobotJoinRoom::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.game_type)
}

// repeated uint32 role_id = 4;
inline int RequestRobotJoinRoom::role_id_size() const {
  return role_id_.size();
}
inline void RequestRobotJoinRoom::clear_role_id() {
  role_id_.Clear();
}
inline ::google::protobuf::uint32 RequestRobotJoinRoom::role_id(int index) const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.role_id)
  return role_id_.Get(index);
}
inline void RequestRobotJoinRoom::set_role_id(int index, ::google::protobuf::uint32 value) {
  role_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.role_id)
}
inline void RequestRobotJoinRoom::add_role_id(::google::protobuf::uint32 value) {
  role_id_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.RequestRobotJoinRoom.role_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestRobotJoinRoom::role_id() const {
  // @@protoc_insertion_point(field_list:Pb.RequestRobotJoinRoom.role_id)
  return role_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestRobotJoinRoom::mutable_role_id() {
  // @@protoc_insertion_point(field_mutable_list:Pb.RequestRobotJoinRoom.role_id)
  return &role_id_;
}

// string rm_test_param = 5;
inline void RequestRobotJoinRoom::clear_rm_test_param() {
  rm_test_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestRobotJoinRoom::rm_test_param() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.rm_test_param)
  return rm_test_param_.GetNoArena();
}
inline void RequestRobotJoinRoom::set_rm_test_param(const ::std::string& value) {
  
  rm_test_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.rm_test_param)
}
#if LANG_CXX11
inline void RequestRobotJoinRoom::set_rm_test_param(::std::string&& value) {
  
  rm_test_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.RequestRobotJoinRoom.rm_test_param)
}
#endif
inline void RequestRobotJoinRoom::set_rm_test_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rm_test_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.RequestRobotJoinRoom.rm_test_param)
}
inline void RequestRobotJoinRoom::set_rm_test_param(const char* value, size_t size) {
  
  rm_test_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.RequestRobotJoinRoom.rm_test_param)
}
inline ::std::string* RequestRobotJoinRoom::mutable_rm_test_param() {
  
  // @@protoc_insertion_point(field_mutable:Pb.RequestRobotJoinRoom.rm_test_param)
  return rm_test_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestRobotJoinRoom::release_rm_test_param() {
  // @@protoc_insertion_point(field_release:Pb.RequestRobotJoinRoom.rm_test_param)
  
  return rm_test_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestRobotJoinRoom::set_allocated_rm_test_param(::std::string* rm_test_param) {
  if (rm_test_param != NULL) {
    
  } else {
    
  }
  rm_test_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rm_test_param);
  // @@protoc_insertion_point(field_set_allocated:Pb.RequestRobotJoinRoom.rm_test_param)
}

// int32 seat = 6;
inline void RequestRobotJoinRoom::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 RequestRobotJoinRoom::seat() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.seat)
  return seat_;
}
inline void RequestRobotJoinRoom::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.seat)
}

// uint32 tpa_room_id = 7;
inline void RequestRobotJoinRoom::clear_tpa_room_id() {
  tpa_room_id_ = 0u;
}
inline ::google::protobuf::uint32 RequestRobotJoinRoom::tpa_room_id() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotJoinRoom.tpa_room_id)
  return tpa_room_id_;
}
inline void RequestRobotJoinRoom::set_tpa_room_id(::google::protobuf::uint32 value) {
  
  tpa_room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.RequestRobotJoinRoom.tpa_room_id)
}

// -------------------------------------------------------------------

// RequestRobotThread

// string user_msg = 1;
inline void RequestRobotThread::clear_user_msg() {
  user_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestRobotThread::user_msg() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotThread.user_msg)
  return user_msg_.GetNoArena();
}
inline void RequestRobotThread::set_user_msg(const ::std::string& value) {
  
  user_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.RequestRobotThread.user_msg)
}
#if LANG_CXX11
inline void RequestRobotThread::set_user_msg(::std::string&& value) {
  
  user_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.RequestRobotThread.user_msg)
}
#endif
inline void RequestRobotThread::set_user_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.RequestRobotThread.user_msg)
}
inline void RequestRobotThread::set_user_msg(const char* value, size_t size) {
  
  user_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.RequestRobotThread.user_msg)
}
inline ::std::string* RequestRobotThread::mutable_user_msg() {
  
  // @@protoc_insertion_point(field_mutable:Pb.RequestRobotThread.user_msg)
  return user_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestRobotThread::release_user_msg() {
  // @@protoc_insertion_point(field_release:Pb.RequestRobotThread.user_msg)
  
  return user_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestRobotThread::set_allocated_user_msg(::std::string* user_msg) {
  if (user_msg != NULL) {
    
  } else {
    
  }
  user_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_msg);
  // @@protoc_insertion_point(field_set_allocated:Pb.RequestRobotThread.user_msg)
}

// uint32 thread_id = 2;
inline void RequestRobotThread::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::google::protobuf::uint32 RequestRobotThread::thread_id() const {
  // @@protoc_insertion_point(field_get:Pb.RequestRobotThread.thread_id)
  return thread_id_;
}
inline void RequestRobotThread::set_thread_id(::google::protobuf::uint32 value) {
  
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.RequestRobotThread.thread_id)
}

// -------------------------------------------------------------------

// CheckRobotValid

// uint32 role_id = 1;
inline void CheckRobotValid::clear_role_id() {
  role_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckRobotValid::role_id() const {
  // @@protoc_insertion_point(field_get:Pb.CheckRobotValid.role_id)
  return role_id_;
}
inline void CheckRobotValid::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.CheckRobotValid.role_id)
}

// uint64 room_id = 2;
inline void CheckRobotValid::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CheckRobotValid::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.CheckRobotValid.room_id)
  return room_id_;
}
inline void CheckRobotValid::set_room_id(::google::protobuf::uint64 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.CheckRobotValid.room_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pb::NETMSG_BRAIN> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pb::NETMSG_BRAIN>() {
  return ::Pb::NETMSG_BRAIN_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_brain_2eproto__INCLUDED
