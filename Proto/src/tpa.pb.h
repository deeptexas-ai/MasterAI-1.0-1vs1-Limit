// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tpa.proto

#ifndef PROTOBUF_tpa_2eproto__INCLUDED
#define PROTOBUF_tpa_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_tpa_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[31];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTPAPlayerImpl();
void InitDefaultsTPAPlayer();
void InitDefaultsTPAPlayerStateImpl();
void InitDefaultsTPAPlayerState();
void InitDefaultsTPAPlayerActionImpl();
void InitDefaultsTPAPlayerAction();
void InitDefaultsTPAPlayerCardsImpl();
void InitDefaultsTPAPlayerCards();
void InitDefaultsTpaRegisterReqImpl();
void InitDefaultsTpaRegisterReq();
void InitDefaultsTpaRegisterRespImpl();
void InitDefaultsTpaRegisterResp();
void InitDefaultsTpaKeepAliveReqImpl();
void InitDefaultsTpaKeepAliveReq();
void InitDefaultsTpaKeepAliveRespImpl();
void InitDefaultsTpaKeepAliveResp();
void InitDefaultsTpaEnterRoomReqImpl();
void InitDefaultsTpaEnterRoomReq();
void InitDefaultsTpaEnterRoomRespImpl();
void InitDefaultsTpaEnterRoomResp();
void InitDefaultsTpaAIEnterRoomReqImpl();
void InitDefaultsTpaAIEnterRoomReq();
void InitDefaultsTpaAIEnterRoomRespImpl();
void InitDefaultsTpaAIEnterRoomResp();
void InitDefaultsTpaLeaveRoomReqImpl();
void InitDefaultsTpaLeaveRoomReq();
void InitDefaultsTpaLeaveRoomRespImpl();
void InitDefaultsTpaLeaveRoomResp();
void InitDefaultsTpaNotifyDestroyRoomImpl();
void InitDefaultsTpaNotifyDestroyRoom();
void InitDefaultsTpaSetPlayerStateReqImpl();
void InitDefaultsTpaSetPlayerStateReq();
void InitDefaultsTpaSetPlayerStateRespImpl();
void InitDefaultsTpaSetPlayerStateResp();
void InitDefaultsTpaSetDealerReqImpl();
void InitDefaultsTpaSetDealerReq();
void InitDefaultsTpaSetDealerRespImpl();
void InitDefaultsTpaSetDealerResp();
void InitDefaultsTpaQueryCardsReqImpl();
void InitDefaultsTpaQueryCardsReq();
void InitDefaultsTpaQueryCardsRespImpl();
void InitDefaultsTpaQueryCardsResp();
void InitDefaultsTpaQueryAllowActionReqImpl();
void InitDefaultsTpaQueryAllowActionReq();
void InitDefaultsTpaQueryAllowActionRespImpl();
void InitDefaultsTpaQueryAllowActionResp();
void InitDefaultsTpaQueryMatchStateReqImpl();
void InitDefaultsTpaQueryMatchStateReq();
void InitDefaultsTpaQueryMatchStateRespImpl();
void InitDefaultsTpaQueryMatchStateResp();
void InitDefaultsTpaReportActionTokenReqImpl();
void InitDefaultsTpaReportActionTokenReq();
void InitDefaultsTpaReportActionTokenRespImpl();
void InitDefaultsTpaReportActionTokenResp();
void InitDefaultsTpaReportPlayerActionReqImpl();
void InitDefaultsTpaReportPlayerActionReq();
void InitDefaultsTpaReportPlayerActionRespImpl();
void InitDefaultsTpaReportPlayerActionResp();
void InitDefaultsTpaQueryAIActionReqImpl();
void InitDefaultsTpaQueryAIActionReq();
void InitDefaultsTpaQueryAIActionRespImpl();
void InitDefaultsTpaQueryAIActionResp();
inline void InitDefaults() {
  InitDefaultsTPAPlayer();
  InitDefaultsTPAPlayerState();
  InitDefaultsTPAPlayerAction();
  InitDefaultsTPAPlayerCards();
  InitDefaultsTpaRegisterReq();
  InitDefaultsTpaRegisterResp();
  InitDefaultsTpaKeepAliveReq();
  InitDefaultsTpaKeepAliveResp();
  InitDefaultsTpaEnterRoomReq();
  InitDefaultsTpaEnterRoomResp();
  InitDefaultsTpaAIEnterRoomReq();
  InitDefaultsTpaAIEnterRoomResp();
  InitDefaultsTpaLeaveRoomReq();
  InitDefaultsTpaLeaveRoomResp();
  InitDefaultsTpaNotifyDestroyRoom();
  InitDefaultsTpaSetPlayerStateReq();
  InitDefaultsTpaSetPlayerStateResp();
  InitDefaultsTpaSetDealerReq();
  InitDefaultsTpaSetDealerResp();
  InitDefaultsTpaQueryCardsReq();
  InitDefaultsTpaQueryCardsResp();
  InitDefaultsTpaQueryAllowActionReq();
  InitDefaultsTpaQueryAllowActionResp();
  InitDefaultsTpaQueryMatchStateReq();
  InitDefaultsTpaQueryMatchStateResp();
  InitDefaultsTpaReportActionTokenReq();
  InitDefaultsTpaReportActionTokenResp();
  InitDefaultsTpaReportPlayerActionReq();
  InitDefaultsTpaReportPlayerActionResp();
  InitDefaultsTpaQueryAIActionReq();
  InitDefaultsTpaQueryAIActionResp();
}
}  // namespace protobuf_tpa_2eproto
namespace Pb {
class TPAPlayer;
class TPAPlayerDefaultTypeInternal;
extern TPAPlayerDefaultTypeInternal _TPAPlayer_default_instance_;
class TPAPlayerAction;
class TPAPlayerActionDefaultTypeInternal;
extern TPAPlayerActionDefaultTypeInternal _TPAPlayerAction_default_instance_;
class TPAPlayerCards;
class TPAPlayerCardsDefaultTypeInternal;
extern TPAPlayerCardsDefaultTypeInternal _TPAPlayerCards_default_instance_;
class TPAPlayerState;
class TPAPlayerStateDefaultTypeInternal;
extern TPAPlayerStateDefaultTypeInternal _TPAPlayerState_default_instance_;
class TpaAIEnterRoomReq;
class TpaAIEnterRoomReqDefaultTypeInternal;
extern TpaAIEnterRoomReqDefaultTypeInternal _TpaAIEnterRoomReq_default_instance_;
class TpaAIEnterRoomResp;
class TpaAIEnterRoomRespDefaultTypeInternal;
extern TpaAIEnterRoomRespDefaultTypeInternal _TpaAIEnterRoomResp_default_instance_;
class TpaEnterRoomReq;
class TpaEnterRoomReqDefaultTypeInternal;
extern TpaEnterRoomReqDefaultTypeInternal _TpaEnterRoomReq_default_instance_;
class TpaEnterRoomResp;
class TpaEnterRoomRespDefaultTypeInternal;
extern TpaEnterRoomRespDefaultTypeInternal _TpaEnterRoomResp_default_instance_;
class TpaKeepAliveReq;
class TpaKeepAliveReqDefaultTypeInternal;
extern TpaKeepAliveReqDefaultTypeInternal _TpaKeepAliveReq_default_instance_;
class TpaKeepAliveResp;
class TpaKeepAliveRespDefaultTypeInternal;
extern TpaKeepAliveRespDefaultTypeInternal _TpaKeepAliveResp_default_instance_;
class TpaLeaveRoomReq;
class TpaLeaveRoomReqDefaultTypeInternal;
extern TpaLeaveRoomReqDefaultTypeInternal _TpaLeaveRoomReq_default_instance_;
class TpaLeaveRoomResp;
class TpaLeaveRoomRespDefaultTypeInternal;
extern TpaLeaveRoomRespDefaultTypeInternal _TpaLeaveRoomResp_default_instance_;
class TpaNotifyDestroyRoom;
class TpaNotifyDestroyRoomDefaultTypeInternal;
extern TpaNotifyDestroyRoomDefaultTypeInternal _TpaNotifyDestroyRoom_default_instance_;
class TpaQueryAIActionReq;
class TpaQueryAIActionReqDefaultTypeInternal;
extern TpaQueryAIActionReqDefaultTypeInternal _TpaQueryAIActionReq_default_instance_;
class TpaQueryAIActionResp;
class TpaQueryAIActionRespDefaultTypeInternal;
extern TpaQueryAIActionRespDefaultTypeInternal _TpaQueryAIActionResp_default_instance_;
class TpaQueryAllowActionReq;
class TpaQueryAllowActionReqDefaultTypeInternal;
extern TpaQueryAllowActionReqDefaultTypeInternal _TpaQueryAllowActionReq_default_instance_;
class TpaQueryAllowActionResp;
class TpaQueryAllowActionRespDefaultTypeInternal;
extern TpaQueryAllowActionRespDefaultTypeInternal _TpaQueryAllowActionResp_default_instance_;
class TpaQueryCardsReq;
class TpaQueryCardsReqDefaultTypeInternal;
extern TpaQueryCardsReqDefaultTypeInternal _TpaQueryCardsReq_default_instance_;
class TpaQueryCardsResp;
class TpaQueryCardsRespDefaultTypeInternal;
extern TpaQueryCardsRespDefaultTypeInternal _TpaQueryCardsResp_default_instance_;
class TpaQueryMatchStateReq;
class TpaQueryMatchStateReqDefaultTypeInternal;
extern TpaQueryMatchStateReqDefaultTypeInternal _TpaQueryMatchStateReq_default_instance_;
class TpaQueryMatchStateResp;
class TpaQueryMatchStateRespDefaultTypeInternal;
extern TpaQueryMatchStateRespDefaultTypeInternal _TpaQueryMatchStateResp_default_instance_;
class TpaRegisterReq;
class TpaRegisterReqDefaultTypeInternal;
extern TpaRegisterReqDefaultTypeInternal _TpaRegisterReq_default_instance_;
class TpaRegisterResp;
class TpaRegisterRespDefaultTypeInternal;
extern TpaRegisterRespDefaultTypeInternal _TpaRegisterResp_default_instance_;
class TpaReportActionTokenReq;
class TpaReportActionTokenReqDefaultTypeInternal;
extern TpaReportActionTokenReqDefaultTypeInternal _TpaReportActionTokenReq_default_instance_;
class TpaReportActionTokenResp;
class TpaReportActionTokenRespDefaultTypeInternal;
extern TpaReportActionTokenRespDefaultTypeInternal _TpaReportActionTokenResp_default_instance_;
class TpaReportPlayerActionReq;
class TpaReportPlayerActionReqDefaultTypeInternal;
extern TpaReportPlayerActionReqDefaultTypeInternal _TpaReportPlayerActionReq_default_instance_;
class TpaReportPlayerActionResp;
class TpaReportPlayerActionRespDefaultTypeInternal;
extern TpaReportPlayerActionRespDefaultTypeInternal _TpaReportPlayerActionResp_default_instance_;
class TpaSetDealerReq;
class TpaSetDealerReqDefaultTypeInternal;
extern TpaSetDealerReqDefaultTypeInternal _TpaSetDealerReq_default_instance_;
class TpaSetDealerResp;
class TpaSetDealerRespDefaultTypeInternal;
extern TpaSetDealerRespDefaultTypeInternal _TpaSetDealerResp_default_instance_;
class TpaSetPlayerStateReq;
class TpaSetPlayerStateReqDefaultTypeInternal;
extern TpaSetPlayerStateReqDefaultTypeInternal _TpaSetPlayerStateReq_default_instance_;
class TpaSetPlayerStateResp;
class TpaSetPlayerStateRespDefaultTypeInternal;
extern TpaSetPlayerStateRespDefaultTypeInternal _TpaSetPlayerStateResp_default_instance_;
}  // namespace Pb
namespace Pb {

enum TPA_CMD {
  CMD_TPA_NOT_DEFINE = 0,
  CMD_TPA_MIN = 90000,
  CMD_TPA_REGISTER = 90001,
  CMD_TPA_KEEP_ALIVE = 90002,
  CMD_TPA_ENTER_ROOM = 90011,
  CMD_TPA_AI_ENTER_ROOM = 90012,
  CMD_TPA_LEAVE_ROOM = 90014,
  CMD_TPA_DESTROY_ROOM = 90015,
  CMD_TPA_SET_PLAYER_STATE = 90017,
  CMD_TPA_SET_DEALER = 90018,
  CMD_TPA_QUERY_MATCH_CARDS = 90021,
  CMD_TPA_QUERY_ALLOW_ACTION = 90022,
  CMD_TPA_QUERY_MATCH_STATE = 90023,
  CMD_TPA_QUERY_AI_ACTION = 90024,
  CMD_TPA_REPORT_ACTION_TOKEN = 90025,
  CMD_TPA_REPORT_PLAYER_ACTION = 90026,
  CMD_TPA_MAX = 90900,
  TPA_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TPA_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TPA_CMD_IsValid(int value);
const TPA_CMD TPA_CMD_MIN = CMD_TPA_NOT_DEFINE;
const TPA_CMD TPA_CMD_MAX = CMD_TPA_MAX;
const int TPA_CMD_ARRAYSIZE = TPA_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPA_CMD_descriptor();
inline const ::std::string& TPA_CMD_Name(TPA_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPA_CMD_descriptor(), value);
}
inline bool TPA_CMD_Parse(
    const ::std::string& name, TPA_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPA_CMD>(
    TPA_CMD_descriptor(), name, value);
}
enum TPA_ERRCODE {
  TPA_OK = 0,
  ERR_TPA_AUTH_SERVERID_INVALID = 229001,
  ERR_TPA_AUTH_SERVERID_IP = 229002,
  ERR_TPA_AUTH_TOKEN = 229003,
  ERR_TPA_CONN_ID_INVALID = 229004,
  ERR_TPA_ENTER_ROOM = 229010,
  ERR_TPA_AI_ENTER_ROOM = 229020,
  ERR_TPA_LEAVE_ROOM = 229030,
  ERR_TPA_DESTROY_ROOM = 229040,
  ERR_TPA_SET_PLAYER_STATE = 229050,
  ERR_TPA_SET_DEALER = 229060,
  ERR_TPA_QUERY_MATCH_CARDS = 229070,
  ERR_TPA_QUERY_ALLOW_ACTION = 229080,
  ERR_TPA_QUERY_MATCH_STATE = 229090,
  ERR_TPA_QUERY_AI_ACTION = 229110,
  ERR_TPA_REPORT_ACTION_TOKEN = 229120,
  ERR_TPA_REPORT_PLAYER_ACTION = 229130,
  TPA_ERRCODE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TPA_ERRCODE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TPA_ERRCODE_IsValid(int value);
const TPA_ERRCODE TPA_ERRCODE_MIN = TPA_OK;
const TPA_ERRCODE TPA_ERRCODE_MAX = ERR_TPA_REPORT_PLAYER_ACTION;
const int TPA_ERRCODE_ARRAYSIZE = TPA_ERRCODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* TPA_ERRCODE_descriptor();
inline const ::std::string& TPA_ERRCODE_Name(TPA_ERRCODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    TPA_ERRCODE_descriptor(), value);
}
inline bool TPA_ERRCODE_Parse(
    const ::std::string& name, TPA_ERRCODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TPA_ERRCODE>(
    TPA_ERRCODE_descriptor(), name, value);
}
// ===================================================================

class TPAPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TPAPlayer) */ {
 public:
  TPAPlayer();
  virtual ~TPAPlayer();

  TPAPlayer(const TPAPlayer& from);

  inline TPAPlayer& operator=(const TPAPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPAPlayer(TPAPlayer&& from) noexcept
    : TPAPlayer() {
    *this = ::std::move(from);
  }

  inline TPAPlayer& operator=(TPAPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPAPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPAPlayer* internal_default_instance() {
    return reinterpret_cast<const TPAPlayer*>(
               &_TPAPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TPAPlayer* other);
  friend void swap(TPAPlayer& a, TPAPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPAPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  TPAPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPAPlayer& from);
  void MergeFrom(const TPAPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPAPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // int32 seat = 2;
  void clear_seat();
  static const int kSeatFieldNumber = 2;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // int32 is_ready = 3;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 3;
  ::google::protobuf::int32 is_ready() const;
  void set_is_ready(::google::protobuf::int32 value);

  // int32 money = 4;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TPAPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 is_ready_;
  ::google::protobuf::int32 money_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerImpl();
};
// -------------------------------------------------------------------

class TPAPlayerState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TPAPlayerState) */ {
 public:
  TPAPlayerState();
  virtual ~TPAPlayerState();

  TPAPlayerState(const TPAPlayerState& from);

  inline TPAPlayerState& operator=(const TPAPlayerState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPAPlayerState(TPAPlayerState&& from) noexcept
    : TPAPlayerState() {
    *this = ::std::move(from);
  }

  inline TPAPlayerState& operator=(TPAPlayerState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPAPlayerState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPAPlayerState* internal_default_instance() {
    return reinterpret_cast<const TPAPlayerState*>(
               &_TPAPlayerState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TPAPlayerState* other);
  friend void swap(TPAPlayerState& a, TPAPlayerState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPAPlayerState* New() const PROTOBUF_FINAL { return New(NULL); }

  TPAPlayerState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPAPlayerState& from);
  void MergeFrom(const TPAPlayerState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPAPlayerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 hole_cards = 5;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 5;
  ::google::protobuf::int32 hole_cards(int index) const;
  void set_hole_cards(int index, ::google::protobuf::int32 value);
  void add_hole_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hole_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hole_cards();

  // uint64 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // int32 seat = 2;
  void clear_seat();
  static const int kSeatFieldNumber = 2;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // uint32 spent = 3;
  void clear_spent();
  static const int kSpentFieldNumber = 3;
  ::google::protobuf::uint32 spent() const;
  void set_spent(::google::protobuf::uint32 value);

  // uint32 fold = 4;
  void clear_fold();
  static const int kFoldFieldNumber = 4;
  ::google::protobuf::uint32 fold() const;
  void set_fold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TPAPlayerState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hole_cards_;
  mutable int _hole_cards_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::uint32 spent_;
  ::google::protobuf::uint32 fold_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerStateImpl();
};
// -------------------------------------------------------------------

class TPAPlayerAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TPAPlayerAction) */ {
 public:
  TPAPlayerAction();
  virtual ~TPAPlayerAction();

  TPAPlayerAction(const TPAPlayerAction& from);

  inline TPAPlayerAction& operator=(const TPAPlayerAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPAPlayerAction(TPAPlayerAction&& from) noexcept
    : TPAPlayerAction() {
    *this = ::std::move(from);
  }

  inline TPAPlayerAction& operator=(TPAPlayerAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPAPlayerAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPAPlayerAction* internal_default_instance() {
    return reinterpret_cast<const TPAPlayerAction*>(
               &_TPAPlayerAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TPAPlayerAction* other);
  friend void swap(TPAPlayerAction& a, TPAPlayerAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPAPlayerAction* New() const PROTOBUF_FINAL { return New(NULL); }

  TPAPlayerAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPAPlayerAction& from);
  void MergeFrom(const TPAPlayerAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPAPlayerAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // int32 seat = 2;
  void clear_seat();
  static const int kSeatFieldNumber = 2;
  ::google::protobuf::int32 seat() const;
  void set_seat(::google::protobuf::int32 value);

  // int32 round = 3;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int32 size = 5;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TPAPlayerAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerActionImpl();
};
// -------------------------------------------------------------------

class TPAPlayerCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TPAPlayerCards) */ {
 public:
  TPAPlayerCards();
  virtual ~TPAPlayerCards();

  TPAPlayerCards(const TPAPlayerCards& from);

  inline TPAPlayerCards& operator=(const TPAPlayerCards& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TPAPlayerCards(TPAPlayerCards&& from) noexcept
    : TPAPlayerCards() {
    *this = ::std::move(from);
  }

  inline TPAPlayerCards& operator=(TPAPlayerCards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TPAPlayerCards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TPAPlayerCards* internal_default_instance() {
    return reinterpret_cast<const TPAPlayerCards*>(
               &_TPAPlayerCards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TPAPlayerCards* other);
  friend void swap(TPAPlayerCards& a, TPAPlayerCards& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TPAPlayerCards* New() const PROTOBUF_FINAL { return New(NULL); }

  TPAPlayerCards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TPAPlayerCards& from);
  void MergeFrom(const TPAPlayerCards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TPAPlayerCards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 hole_cards = 2;
  int hole_cards_size() const;
  void clear_hole_cards();
  static const int kHoleCardsFieldNumber = 2;
  ::google::protobuf::int32 hole_cards(int index) const;
  void set_hole_cards(int index, ::google::protobuf::int32 value);
  void add_hole_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hole_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hole_cards();

  // uint64 player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pb.TPAPlayerCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hole_cards_;
  mutable int _hole_cards_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerCardsImpl();
};
// -------------------------------------------------------------------

class TpaRegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaRegisterReq) */ {
 public:
  TpaRegisterReq();
  virtual ~TpaRegisterReq();

  TpaRegisterReq(const TpaRegisterReq& from);

  inline TpaRegisterReq& operator=(const TpaRegisterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaRegisterReq(TpaRegisterReq&& from) noexcept
    : TpaRegisterReq() {
    *this = ::std::move(from);
  }

  inline TpaRegisterReq& operator=(TpaRegisterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaRegisterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaRegisterReq* internal_default_instance() {
    return reinterpret_cast<const TpaRegisterReq*>(
               &_TpaRegisterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TpaRegisterReq* other);
  friend void swap(TpaRegisterReq& a, TpaRegisterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaRegisterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaRegisterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaRegisterReq& from);
  void MergeFrom(const TpaRegisterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaRegisterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaRegisterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterReqImpl();
};
// -------------------------------------------------------------------

class TpaRegisterResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaRegisterResp) */ {
 public:
  TpaRegisterResp();
  virtual ~TpaRegisterResp();

  TpaRegisterResp(const TpaRegisterResp& from);

  inline TpaRegisterResp& operator=(const TpaRegisterResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaRegisterResp(TpaRegisterResp&& from) noexcept
    : TpaRegisterResp() {
    *this = ::std::move(from);
  }

  inline TpaRegisterResp& operator=(TpaRegisterResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaRegisterResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaRegisterResp* internal_default_instance() {
    return reinterpret_cast<const TpaRegisterResp*>(
               &_TpaRegisterResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TpaRegisterResp* other);
  friend void swap(TpaRegisterResp& a, TpaRegisterResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaRegisterResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaRegisterResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaRegisterResp& from);
  void MergeFrom(const TpaRegisterResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaRegisterResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 conn_unique_id = 2;
  void clear_conn_unique_id();
  static const int kConnUniqueIdFieldNumber = 2;
  ::google::protobuf::uint64 conn_unique_id() const;
  void set_conn_unique_id(::google::protobuf::uint64 value);

  // uint32 ai_server_id = 1;
  void clear_ai_server_id();
  static const int kAiServerIdFieldNumber = 1;
  ::google::protobuf::uint32 ai_server_id() const;
  void set_ai_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaRegisterResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 conn_unique_id_;
  ::google::protobuf::uint32 ai_server_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterRespImpl();
};
// -------------------------------------------------------------------

class TpaKeepAliveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaKeepAliveReq) */ {
 public:
  TpaKeepAliveReq();
  virtual ~TpaKeepAliveReq();

  TpaKeepAliveReq(const TpaKeepAliveReq& from);

  inline TpaKeepAliveReq& operator=(const TpaKeepAliveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaKeepAliveReq(TpaKeepAliveReq&& from) noexcept
    : TpaKeepAliveReq() {
    *this = ::std::move(from);
  }

  inline TpaKeepAliveReq& operator=(TpaKeepAliveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaKeepAliveReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaKeepAliveReq* internal_default_instance() {
    return reinterpret_cast<const TpaKeepAliveReq*>(
               &_TpaKeepAliveReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TpaKeepAliveReq* other);
  friend void swap(TpaKeepAliveReq& a, TpaKeepAliveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaKeepAliveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaKeepAliveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaKeepAliveReq& from);
  void MergeFrom(const TpaKeepAliveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaKeepAliveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // uint32 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaKeepAliveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveReqImpl();
};
// -------------------------------------------------------------------

class TpaKeepAliveResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaKeepAliveResp) */ {
 public:
  TpaKeepAliveResp();
  virtual ~TpaKeepAliveResp();

  TpaKeepAliveResp(const TpaKeepAliveResp& from);

  inline TpaKeepAliveResp& operator=(const TpaKeepAliveResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaKeepAliveResp(TpaKeepAliveResp&& from) noexcept
    : TpaKeepAliveResp() {
    *this = ::std::move(from);
  }

  inline TpaKeepAliveResp& operator=(TpaKeepAliveResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaKeepAliveResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaKeepAliveResp* internal_default_instance() {
    return reinterpret_cast<const TpaKeepAliveResp*>(
               &_TpaKeepAliveResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TpaKeepAliveResp* other);
  friend void swap(TpaKeepAliveResp& a, TpaKeepAliveResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaKeepAliveResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaKeepAliveResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaKeepAliveResp& from);
  void MergeFrom(const TpaKeepAliveResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaKeepAliveResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ai_server_id = 1;
  void clear_ai_server_id();
  static const int kAiServerIdFieldNumber = 1;
  ::google::protobuf::uint32 ai_server_id() const;
  void set_ai_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaKeepAliveResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ai_server_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveRespImpl();
};
// -------------------------------------------------------------------

class TpaEnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaEnterRoomReq) */ {
 public:
  TpaEnterRoomReq();
  virtual ~TpaEnterRoomReq();

  TpaEnterRoomReq(const TpaEnterRoomReq& from);

  inline TpaEnterRoomReq& operator=(const TpaEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaEnterRoomReq(TpaEnterRoomReq&& from) noexcept
    : TpaEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline TpaEnterRoomReq& operator=(TpaEnterRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaEnterRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const TpaEnterRoomReq*>(
               &_TpaEnterRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TpaEnterRoomReq* other);
  friend void swap(TpaEnterRoomReq& a, TpaEnterRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaEnterRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaEnterRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaEnterRoomReq& from);
  void MergeFrom(const TpaEnterRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaEnterRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 2;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 2;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaEnterRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomReqImpl();
};
// -------------------------------------------------------------------

class TpaEnterRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaEnterRoomResp) */ {
 public:
  TpaEnterRoomResp();
  virtual ~TpaEnterRoomResp();

  TpaEnterRoomResp(const TpaEnterRoomResp& from);

  inline TpaEnterRoomResp& operator=(const TpaEnterRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaEnterRoomResp(TpaEnterRoomResp&& from) noexcept
    : TpaEnterRoomResp() {
    *this = ::std::move(from);
  }

  inline TpaEnterRoomResp& operator=(TpaEnterRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaEnterRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaEnterRoomResp* internal_default_instance() {
    return reinterpret_cast<const TpaEnterRoomResp*>(
               &_TpaEnterRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TpaEnterRoomResp* other);
  friend void swap(TpaEnterRoomResp& a, TpaEnterRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaEnterRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaEnterRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaEnterRoomResp& from);
  void MergeFrom(const TpaEnterRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaEnterRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 2;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 2;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaEnterRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomRespImpl();
};
// -------------------------------------------------------------------

class TpaAIEnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaAIEnterRoomReq) */ {
 public:
  TpaAIEnterRoomReq();
  virtual ~TpaAIEnterRoomReq();

  TpaAIEnterRoomReq(const TpaAIEnterRoomReq& from);

  inline TpaAIEnterRoomReq& operator=(const TpaAIEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaAIEnterRoomReq(TpaAIEnterRoomReq&& from) noexcept
    : TpaAIEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline TpaAIEnterRoomReq& operator=(TpaAIEnterRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaAIEnterRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaAIEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const TpaAIEnterRoomReq*>(
               &_TpaAIEnterRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TpaAIEnterRoomReq* other);
  friend void swap(TpaAIEnterRoomReq& a, TpaAIEnterRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaAIEnterRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaAIEnterRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaAIEnterRoomReq& from);
  void MergeFrom(const TpaAIEnterRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaAIEnterRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // string constant_token = 4;
  void clear_constant_token();
  static const int kConstantTokenFieldNumber = 4;
  const ::std::string& constant_token() const;
  void set_constant_token(const ::std::string& value);
  #if LANG_CXX11
  void set_constant_token(::std::string&& value);
  #endif
  void set_constant_token(const char* value);
  void set_constant_token(const char* value, size_t size);
  ::std::string* mutable_constant_token();
  ::std::string* release_constant_token();
  void set_allocated_constant_token(::std::string* constant_token);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 2;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 2;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaAIEnterRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::internal::ArenaStringPtr constant_token_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomReqImpl();
};
// -------------------------------------------------------------------

class TpaAIEnterRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaAIEnterRoomResp) */ {
 public:
  TpaAIEnterRoomResp();
  virtual ~TpaAIEnterRoomResp();

  TpaAIEnterRoomResp(const TpaAIEnterRoomResp& from);

  inline TpaAIEnterRoomResp& operator=(const TpaAIEnterRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaAIEnterRoomResp(TpaAIEnterRoomResp&& from) noexcept
    : TpaAIEnterRoomResp() {
    *this = ::std::move(from);
  }

  inline TpaAIEnterRoomResp& operator=(TpaAIEnterRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaAIEnterRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaAIEnterRoomResp* internal_default_instance() {
    return reinterpret_cast<const TpaAIEnterRoomResp*>(
               &_TpaAIEnterRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TpaAIEnterRoomResp* other);
  friend void swap(TpaAIEnterRoomResp& a, TpaAIEnterRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaAIEnterRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaAIEnterRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaAIEnterRoomResp& from);
  void MergeFrom(const TpaAIEnterRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaAIEnterRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 3;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // string constant_token = 4;
  void clear_constant_token();
  static const int kConstantTokenFieldNumber = 4;
  const ::std::string& constant_token() const;
  void set_constant_token(const ::std::string& value);
  #if LANG_CXX11
  void set_constant_token(::std::string&& value);
  #endif
  void set_constant_token(const char* value);
  void set_constant_token(const char* value, size_t size);
  ::std::string* mutable_constant_token();
  ::std::string* release_constant_token();
  void set_allocated_constant_token(::std::string* constant_token);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 game_type = 2;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 2;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaAIEnterRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::internal::ArenaStringPtr constant_token_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 game_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomRespImpl();
};
// -------------------------------------------------------------------

class TpaLeaveRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaLeaveRoomReq) */ {
 public:
  TpaLeaveRoomReq();
  virtual ~TpaLeaveRoomReq();

  TpaLeaveRoomReq(const TpaLeaveRoomReq& from);

  inline TpaLeaveRoomReq& operator=(const TpaLeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaLeaveRoomReq(TpaLeaveRoomReq&& from) noexcept
    : TpaLeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline TpaLeaveRoomReq& operator=(TpaLeaveRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaLeaveRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaLeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const TpaLeaveRoomReq*>(
               &_TpaLeaveRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TpaLeaveRoomReq* other);
  friend void swap(TpaLeaveRoomReq& a, TpaLeaveRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaLeaveRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaLeaveRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaLeaveRoomReq& from);
  void MergeFrom(const TpaLeaveRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaLeaveRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 2;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaLeaveRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomReqImpl();
};
// -------------------------------------------------------------------

class TpaLeaveRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaLeaveRoomResp) */ {
 public:
  TpaLeaveRoomResp();
  virtual ~TpaLeaveRoomResp();

  TpaLeaveRoomResp(const TpaLeaveRoomResp& from);

  inline TpaLeaveRoomResp& operator=(const TpaLeaveRoomResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaLeaveRoomResp(TpaLeaveRoomResp&& from) noexcept
    : TpaLeaveRoomResp() {
    *this = ::std::move(from);
  }

  inline TpaLeaveRoomResp& operator=(TpaLeaveRoomResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaLeaveRoomResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaLeaveRoomResp* internal_default_instance() {
    return reinterpret_cast<const TpaLeaveRoomResp*>(
               &_TpaLeaveRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TpaLeaveRoomResp* other);
  friend void swap(TpaLeaveRoomResp& a, TpaLeaveRoomResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaLeaveRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaLeaveRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaLeaveRoomResp& from);
  void MergeFrom(const TpaLeaveRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaLeaveRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 2;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaLeaveRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomRespImpl();
};
// -------------------------------------------------------------------

class TpaNotifyDestroyRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaNotifyDestroyRoom) */ {
 public:
  TpaNotifyDestroyRoom();
  virtual ~TpaNotifyDestroyRoom();

  TpaNotifyDestroyRoom(const TpaNotifyDestroyRoom& from);

  inline TpaNotifyDestroyRoom& operator=(const TpaNotifyDestroyRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaNotifyDestroyRoom(TpaNotifyDestroyRoom&& from) noexcept
    : TpaNotifyDestroyRoom() {
    *this = ::std::move(from);
  }

  inline TpaNotifyDestroyRoom& operator=(TpaNotifyDestroyRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaNotifyDestroyRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaNotifyDestroyRoom* internal_default_instance() {
    return reinterpret_cast<const TpaNotifyDestroyRoom*>(
               &_TpaNotifyDestroyRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(TpaNotifyDestroyRoom* other);
  friend void swap(TpaNotifyDestroyRoom& a, TpaNotifyDestroyRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaNotifyDestroyRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaNotifyDestroyRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaNotifyDestroyRoom& from);
  void MergeFrom(const TpaNotifyDestroyRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaNotifyDestroyRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaNotifyDestroyRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 reason_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaNotifyDestroyRoomImpl();
};
// -------------------------------------------------------------------

class TpaSetPlayerStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaSetPlayerStateReq) */ {
 public:
  TpaSetPlayerStateReq();
  virtual ~TpaSetPlayerStateReq();

  TpaSetPlayerStateReq(const TpaSetPlayerStateReq& from);

  inline TpaSetPlayerStateReq& operator=(const TpaSetPlayerStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaSetPlayerStateReq(TpaSetPlayerStateReq&& from) noexcept
    : TpaSetPlayerStateReq() {
    *this = ::std::move(from);
  }

  inline TpaSetPlayerStateReq& operator=(TpaSetPlayerStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaSetPlayerStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaSetPlayerStateReq* internal_default_instance() {
    return reinterpret_cast<const TpaSetPlayerStateReq*>(
               &_TpaSetPlayerStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TpaSetPlayerStateReq* other);
  friend void swap(TpaSetPlayerStateReq& a, TpaSetPlayerStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaSetPlayerStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaSetPlayerStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaSetPlayerStateReq& from);
  void MergeFrom(const TpaSetPlayerStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaSetPlayerStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 2;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaSetPlayerStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateReqImpl();
};
// -------------------------------------------------------------------

class TpaSetPlayerStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaSetPlayerStateResp) */ {
 public:
  TpaSetPlayerStateResp();
  virtual ~TpaSetPlayerStateResp();

  TpaSetPlayerStateResp(const TpaSetPlayerStateResp& from);

  inline TpaSetPlayerStateResp& operator=(const TpaSetPlayerStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaSetPlayerStateResp(TpaSetPlayerStateResp&& from) noexcept
    : TpaSetPlayerStateResp() {
    *this = ::std::move(from);
  }

  inline TpaSetPlayerStateResp& operator=(TpaSetPlayerStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaSetPlayerStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaSetPlayerStateResp* internal_default_instance() {
    return reinterpret_cast<const TpaSetPlayerStateResp*>(
               &_TpaSetPlayerStateResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TpaSetPlayerStateResp* other);
  friend void swap(TpaSetPlayerStateResp& a, TpaSetPlayerStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaSetPlayerStateResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaSetPlayerStateResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaSetPlayerStateResp& from);
  void MergeFrom(const TpaSetPlayerStateResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaSetPlayerStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayer player_list = 2;
  int player_list_size() const;
  void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  const ::Pb::TPAPlayer& player_list(int index) const;
  ::Pb::TPAPlayer* mutable_player_list(int index);
  ::Pb::TPAPlayer* add_player_list();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
      mutable_player_list();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
      player_list() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaSetPlayerStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer > player_list_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateRespImpl();
};
// -------------------------------------------------------------------

class TpaSetDealerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaSetDealerReq) */ {
 public:
  TpaSetDealerReq();
  virtual ~TpaSetDealerReq();

  TpaSetDealerReq(const TpaSetDealerReq& from);

  inline TpaSetDealerReq& operator=(const TpaSetDealerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaSetDealerReq(TpaSetDealerReq&& from) noexcept
    : TpaSetDealerReq() {
    *this = ::std::move(from);
  }

  inline TpaSetDealerReq& operator=(TpaSetDealerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaSetDealerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaSetDealerReq* internal_default_instance() {
    return reinterpret_cast<const TpaSetDealerReq*>(
               &_TpaSetDealerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TpaSetDealerReq* other);
  friend void swap(TpaSetDealerReq& a, TpaSetDealerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaSetDealerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaSetDealerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaSetDealerReq& from);
  void MergeFrom(const TpaSetDealerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaSetDealerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 dealer_player_id = 2;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // int32 dealer_seat = 3;
  void clear_dealer_seat();
  static const int kDealerSeatFieldNumber = 3;
  ::google::protobuf::int32 dealer_seat() const;
  void set_dealer_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaSetDealerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::int32 dealer_seat_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerReqImpl();
};
// -------------------------------------------------------------------

class TpaSetDealerResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaSetDealerResp) */ {
 public:
  TpaSetDealerResp();
  virtual ~TpaSetDealerResp();

  TpaSetDealerResp(const TpaSetDealerResp& from);

  inline TpaSetDealerResp& operator=(const TpaSetDealerResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaSetDealerResp(TpaSetDealerResp&& from) noexcept
    : TpaSetDealerResp() {
    *this = ::std::move(from);
  }

  inline TpaSetDealerResp& operator=(TpaSetDealerResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaSetDealerResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaSetDealerResp* internal_default_instance() {
    return reinterpret_cast<const TpaSetDealerResp*>(
               &_TpaSetDealerResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TpaSetDealerResp* other);
  friend void swap(TpaSetDealerResp& a, TpaSetDealerResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaSetDealerResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaSetDealerResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaSetDealerResp& from);
  void MergeFrom(const TpaSetDealerResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaSetDealerResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pb.TPAPlayerState player_state = 5;
  int player_state_size() const;
  void clear_player_state();
  static const int kPlayerStateFieldNumber = 5;
  const ::Pb::TPAPlayerState& player_state(int index) const;
  ::Pb::TPAPlayerState* mutable_player_state(int index);
  ::Pb::TPAPlayerState* add_player_state();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >*
      mutable_player_state();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >&
      player_state() const;

  // uint64 dealer_player_id = 2;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 hand_id = 3;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 3;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // uint32 max_spent = 4;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 4;
  ::google::protobuf::uint32 max_spent() const;
  void set_max_spent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaSetDealerResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState > player_state_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::uint32 max_spent_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerRespImpl();
};
// -------------------------------------------------------------------

class TpaQueryCardsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryCardsReq) */ {
 public:
  TpaQueryCardsReq();
  virtual ~TpaQueryCardsReq();

  TpaQueryCardsReq(const TpaQueryCardsReq& from);

  inline TpaQueryCardsReq& operator=(const TpaQueryCardsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryCardsReq(TpaQueryCardsReq&& from) noexcept
    : TpaQueryCardsReq() {
    *this = ::std::move(from);
  }

  inline TpaQueryCardsReq& operator=(TpaQueryCardsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryCardsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryCardsReq* internal_default_instance() {
    return reinterpret_cast<const TpaQueryCardsReq*>(
               &_TpaQueryCardsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TpaQueryCardsReq* other);
  friend void swap(TpaQueryCardsReq& a, TpaQueryCardsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryCardsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryCardsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryCardsReq& from);
  void MergeFrom(const TpaQueryCardsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryCardsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // int32 round = 2;
  void clear_round();
  static const int kRoundFieldNumber = 2;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryCardsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::int32 round_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsReqImpl();
};
// -------------------------------------------------------------------

class TpaQueryCardsResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryCardsResp) */ {
 public:
  TpaQueryCardsResp();
  virtual ~TpaQueryCardsResp();

  TpaQueryCardsResp(const TpaQueryCardsResp& from);

  inline TpaQueryCardsResp& operator=(const TpaQueryCardsResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryCardsResp(TpaQueryCardsResp&& from) noexcept
    : TpaQueryCardsResp() {
    *this = ::std::move(from);
  }

  inline TpaQueryCardsResp& operator=(TpaQueryCardsResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryCardsResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryCardsResp* internal_default_instance() {
    return reinterpret_cast<const TpaQueryCardsResp*>(
               &_TpaQueryCardsResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TpaQueryCardsResp* other);
  friend void swap(TpaQueryCardsResp& a, TpaQueryCardsResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryCardsResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryCardsResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryCardsResp& from);
  void MergeFrom(const TpaQueryCardsResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryCardsResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 flop_cards = 4;
  int flop_cards_size() const;
  void clear_flop_cards();
  static const int kFlopCardsFieldNumber = 4;
  ::google::protobuf::int32 flop_cards(int index) const;
  void set_flop_cards(int index, ::google::protobuf::int32 value);
  void add_flop_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flop_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flop_cards();

  // repeated int32 turn_cards = 5;
  int turn_cards_size() const;
  void clear_turn_cards();
  static const int kTurnCardsFieldNumber = 5;
  ::google::protobuf::int32 turn_cards(int index) const;
  void set_turn_cards(int index, ::google::protobuf::int32 value);
  void add_turn_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      turn_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_turn_cards();

  // repeated int32 river_cards = 6;
  int river_cards_size() const;
  void clear_river_cards();
  static const int kRiverCardsFieldNumber = 6;
  ::google::protobuf::int32 river_cards(int index) const;
  void set_river_cards(int index, ::google::protobuf::int32 value);
  void add_river_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      river_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_river_cards();

  // repeated .Pb.TPAPlayerCards player_cards = 7;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 7;
  const ::Pb::TPAPlayerCards& player_cards(int index) const;
  ::Pb::TPAPlayerCards* mutable_player_cards(int index);
  ::Pb::TPAPlayerCards* add_player_cards();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerCards >*
      mutable_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerCards >&
      player_cards() const;

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // int32 round = 2;
  void clear_round();
  static const int kRoundFieldNumber = 2;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint64 dealer_player_id = 8;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 8;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // uint32 finished = 3;
  void clear_finished();
  static const int kFinishedFieldNumber = 3;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryCardsResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flop_cards_;
  mutable int _flop_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > turn_cards_;
  mutable int _turn_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > river_cards_;
  mutable int _river_cards_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerCards > player_cards_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::uint32 finished_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsRespImpl();
};
// -------------------------------------------------------------------

class TpaQueryAllowActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryAllowActionReq) */ {
 public:
  TpaQueryAllowActionReq();
  virtual ~TpaQueryAllowActionReq();

  TpaQueryAllowActionReq(const TpaQueryAllowActionReq& from);

  inline TpaQueryAllowActionReq& operator=(const TpaQueryAllowActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryAllowActionReq(TpaQueryAllowActionReq&& from) noexcept
    : TpaQueryAllowActionReq() {
    *this = ::std::move(from);
  }

  inline TpaQueryAllowActionReq& operator=(TpaQueryAllowActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryAllowActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryAllowActionReq* internal_default_instance() {
    return reinterpret_cast<const TpaQueryAllowActionReq*>(
               &_TpaQueryAllowActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TpaQueryAllowActionReq* other);
  friend void swap(TpaQueryAllowActionReq& a, TpaQueryAllowActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryAllowActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryAllowActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryAllowActionReq& from);
  void MergeFrom(const TpaQueryAllowActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryAllowActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryAllowActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionReqImpl();
};
// -------------------------------------------------------------------

class TpaQueryAllowActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryAllowActionResp) */ {
 public:
  TpaQueryAllowActionResp();
  virtual ~TpaQueryAllowActionResp();

  TpaQueryAllowActionResp(const TpaQueryAllowActionResp& from);

  inline TpaQueryAllowActionResp& operator=(const TpaQueryAllowActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryAllowActionResp(TpaQueryAllowActionResp&& from) noexcept
    : TpaQueryAllowActionResp() {
    *this = ::std::move(from);
  }

  inline TpaQueryAllowActionResp& operator=(TpaQueryAllowActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryAllowActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryAllowActionResp* internal_default_instance() {
    return reinterpret_cast<const TpaQueryAllowActionResp*>(
               &_TpaQueryAllowActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(TpaQueryAllowActionResp* other);
  friend void swap(TpaQueryAllowActionResp& a, TpaQueryAllowActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryAllowActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryAllowActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryAllowActionResp& from);
  void MergeFrom(const TpaQueryAllowActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryAllowActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 3;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 3;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryAllowActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionRespImpl();
};
// -------------------------------------------------------------------

class TpaQueryMatchStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryMatchStateReq) */ {
 public:
  TpaQueryMatchStateReq();
  virtual ~TpaQueryMatchStateReq();

  TpaQueryMatchStateReq(const TpaQueryMatchStateReq& from);

  inline TpaQueryMatchStateReq& operator=(const TpaQueryMatchStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryMatchStateReq(TpaQueryMatchStateReq&& from) noexcept
    : TpaQueryMatchStateReq() {
    *this = ::std::move(from);
  }

  inline TpaQueryMatchStateReq& operator=(TpaQueryMatchStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryMatchStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryMatchStateReq* internal_default_instance() {
    return reinterpret_cast<const TpaQueryMatchStateReq*>(
               &_TpaQueryMatchStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(TpaQueryMatchStateReq* other);
  friend void swap(TpaQueryMatchStateReq& a, TpaQueryMatchStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryMatchStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryMatchStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryMatchStateReq& from);
  void MergeFrom(const TpaQueryMatchStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryMatchStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // int32 round = 2;
  void clear_round();
  static const int kRoundFieldNumber = 2;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryMatchStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::int32 round_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateReqImpl();
};
// -------------------------------------------------------------------

class TpaQueryMatchStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryMatchStateResp) */ {
 public:
  TpaQueryMatchStateResp();
  virtual ~TpaQueryMatchStateResp();

  TpaQueryMatchStateResp(const TpaQueryMatchStateResp& from);

  inline TpaQueryMatchStateResp& operator=(const TpaQueryMatchStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryMatchStateResp(TpaQueryMatchStateResp&& from) noexcept
    : TpaQueryMatchStateResp() {
    *this = ::std::move(from);
  }

  inline TpaQueryMatchStateResp& operator=(TpaQueryMatchStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryMatchStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryMatchStateResp* internal_default_instance() {
    return reinterpret_cast<const TpaQueryMatchStateResp*>(
               &_TpaQueryMatchStateResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(TpaQueryMatchStateResp* other);
  friend void swap(TpaQueryMatchStateResp& a, TpaQueryMatchStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryMatchStateResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryMatchStateResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryMatchStateResp& from);
  void MergeFrom(const TpaQueryMatchStateResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryMatchStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 flop_cards = 7;
  int flop_cards_size() const;
  void clear_flop_cards();
  static const int kFlopCardsFieldNumber = 7;
  ::google::protobuf::int32 flop_cards(int index) const;
  void set_flop_cards(int index, ::google::protobuf::int32 value);
  void add_flop_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flop_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flop_cards();

  // repeated int32 turn_cards = 8;
  int turn_cards_size() const;
  void clear_turn_cards();
  static const int kTurnCardsFieldNumber = 8;
  ::google::protobuf::int32 turn_cards(int index) const;
  void set_turn_cards(int index, ::google::protobuf::int32 value);
  void add_turn_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      turn_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_turn_cards();

  // repeated int32 river_cards = 9;
  int river_cards_size() const;
  void clear_river_cards();
  static const int kRiverCardsFieldNumber = 9;
  ::google::protobuf::int32 river_cards(int index) const;
  void set_river_cards(int index, ::google::protobuf::int32 value);
  void add_river_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      river_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_river_cards();

  // repeated uint32 allow_raise = 10;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 10;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // repeated .Pb.TPAPlayerState player_state = 11;
  int player_state_size() const;
  void clear_player_state();
  static const int kPlayerStateFieldNumber = 11;
  const ::Pb::TPAPlayerState& player_state(int index) const;
  ::Pb::TPAPlayerState* mutable_player_state(int index);
  ::Pb::TPAPlayerState* add_player_state();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >*
      mutable_player_state();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >&
      player_state() const;

  // repeated .Pb.TPAPlayerAction player_action = 12;
  int player_action_size() const;
  void clear_player_action();
  static const int kPlayerActionFieldNumber = 12;
  const ::Pb::TPAPlayerAction& player_action(int index) const;
  ::Pb::TPAPlayerAction* mutable_player_action(int index);
  ::Pb::TPAPlayerAction* add_player_action();
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerAction >*
      mutable_player_action();
  const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerAction >&
      player_action() const;

  // uint64 dealer_player_id = 2;
  void clear_dealer_player_id();
  static const int kDealerPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 dealer_player_id() const;
  void set_dealer_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 hand_id = 3;
  void clear_hand_id();
  static const int kHandIdFieldNumber = 3;
  ::google::protobuf::uint32 hand_id() const;
  void set_hand_id(::google::protobuf::uint32 value);

  // int32 round = 4;
  void clear_round();
  static const int kRoundFieldNumber = 4;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // uint32 finished = 5;
  void clear_finished();
  static const int kFinishedFieldNumber = 5;
  ::google::protobuf::uint32 finished() const;
  void set_finished(::google::protobuf::uint32 value);

  // uint64 turn_player_id = 13;
  void clear_turn_player_id();
  static const int kTurnPlayerIdFieldNumber = 13;
  ::google::protobuf::uint64 turn_player_id() const;
  void set_turn_player_id(::google::protobuf::uint64 value);

  // uint32 max_spent = 6;
  void clear_max_spent();
  static const int kMaxSpentFieldNumber = 6;
  ::google::protobuf::uint32 max_spent() const;
  void set_max_spent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryMatchStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flop_cards_;
  mutable int _flop_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > turn_cards_;
  mutable int _turn_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > river_cards_;
  mutable int _river_cards_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState > player_state_;
  ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerAction > player_action_;
  ::google::protobuf::uint64 dealer_player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 hand_id_;
  ::google::protobuf::int32 round_;
  ::google::protobuf::uint32 finished_;
  ::google::protobuf::uint64 turn_player_id_;
  ::google::protobuf::uint32 max_spent_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateRespImpl();
};
// -------------------------------------------------------------------

class TpaReportActionTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaReportActionTokenReq) */ {
 public:
  TpaReportActionTokenReq();
  virtual ~TpaReportActionTokenReq();

  TpaReportActionTokenReq(const TpaReportActionTokenReq& from);

  inline TpaReportActionTokenReq& operator=(const TpaReportActionTokenReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaReportActionTokenReq(TpaReportActionTokenReq&& from) noexcept
    : TpaReportActionTokenReq() {
    *this = ::std::move(from);
  }

  inline TpaReportActionTokenReq& operator=(TpaReportActionTokenReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaReportActionTokenReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaReportActionTokenReq* internal_default_instance() {
    return reinterpret_cast<const TpaReportActionTokenReq*>(
               &_TpaReportActionTokenReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(TpaReportActionTokenReq* other);
  friend void swap(TpaReportActionTokenReq& a, TpaReportActionTokenReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaReportActionTokenReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaReportActionTokenReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaReportActionTokenReq& from);
  void MergeFrom(const TpaReportActionTokenReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaReportActionTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaReportActionTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenReqImpl();
};
// -------------------------------------------------------------------

class TpaReportActionTokenResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaReportActionTokenResp) */ {
 public:
  TpaReportActionTokenResp();
  virtual ~TpaReportActionTokenResp();

  TpaReportActionTokenResp(const TpaReportActionTokenResp& from);

  inline TpaReportActionTokenResp& operator=(const TpaReportActionTokenResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaReportActionTokenResp(TpaReportActionTokenResp&& from) noexcept
    : TpaReportActionTokenResp() {
    *this = ::std::move(from);
  }

  inline TpaReportActionTokenResp& operator=(TpaReportActionTokenResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaReportActionTokenResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaReportActionTokenResp* internal_default_instance() {
    return reinterpret_cast<const TpaReportActionTokenResp*>(
               &_TpaReportActionTokenResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(TpaReportActionTokenResp* other);
  friend void swap(TpaReportActionTokenResp& a, TpaReportActionTokenResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaReportActionTokenResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaReportActionTokenResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaReportActionTokenResp& from);
  void MergeFrom(const TpaReportActionTokenResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaReportActionTokenResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaReportActionTokenResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenRespImpl();
};
// -------------------------------------------------------------------

class TpaReportPlayerActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaReportPlayerActionReq) */ {
 public:
  TpaReportPlayerActionReq();
  virtual ~TpaReportPlayerActionReq();

  TpaReportPlayerActionReq(const TpaReportPlayerActionReq& from);

  inline TpaReportPlayerActionReq& operator=(const TpaReportPlayerActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaReportPlayerActionReq(TpaReportPlayerActionReq&& from) noexcept
    : TpaReportPlayerActionReq() {
    *this = ::std::move(from);
  }

  inline TpaReportPlayerActionReq& operator=(TpaReportPlayerActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaReportPlayerActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaReportPlayerActionReq* internal_default_instance() {
    return reinterpret_cast<const TpaReportPlayerActionReq*>(
               &_TpaReportPlayerActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TpaReportPlayerActionReq* other);
  friend void swap(TpaReportPlayerActionReq& a, TpaReportPlayerActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaReportPlayerActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaReportPlayerActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaReportPlayerActionReq& from);
  void MergeFrom(const TpaReportPlayerActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaReportPlayerActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 action_type = 3;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 3;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaReportPlayerActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionReqImpl();
};
// -------------------------------------------------------------------

class TpaReportPlayerActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaReportPlayerActionResp) */ {
 public:
  TpaReportPlayerActionResp();
  virtual ~TpaReportPlayerActionResp();

  TpaReportPlayerActionResp(const TpaReportPlayerActionResp& from);

  inline TpaReportPlayerActionResp& operator=(const TpaReportPlayerActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaReportPlayerActionResp(TpaReportPlayerActionResp&& from) noexcept
    : TpaReportPlayerActionResp() {
    *this = ::std::move(from);
  }

  inline TpaReportPlayerActionResp& operator=(TpaReportPlayerActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaReportPlayerActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaReportPlayerActionResp* internal_default_instance() {
    return reinterpret_cast<const TpaReportPlayerActionResp*>(
               &_TpaReportPlayerActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TpaReportPlayerActionResp* other);
  friend void swap(TpaReportPlayerActionResp& a, TpaReportPlayerActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaReportPlayerActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaReportPlayerActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaReportPlayerActionResp& from);
  void MergeFrom(const TpaReportPlayerActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaReportPlayerActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 5;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 5;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 action_type = 3;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 3;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaReportPlayerActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionRespImpl();
};
// -------------------------------------------------------------------

class TpaQueryAIActionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryAIActionReq) */ {
 public:
  TpaQueryAIActionReq();
  virtual ~TpaQueryAIActionReq();

  TpaQueryAIActionReq(const TpaQueryAIActionReq& from);

  inline TpaQueryAIActionReq& operator=(const TpaQueryAIActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryAIActionReq(TpaQueryAIActionReq&& from) noexcept
    : TpaQueryAIActionReq() {
    *this = ::std::move(from);
  }

  inline TpaQueryAIActionReq& operator=(TpaQueryAIActionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryAIActionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryAIActionReq* internal_default_instance() {
    return reinterpret_cast<const TpaQueryAIActionReq*>(
               &_TpaQueryAIActionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TpaQueryAIActionReq* other);
  friend void swap(TpaQueryAIActionReq& a, TpaQueryAIActionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryAIActionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryAIActionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryAIActionReq& from);
  void MergeFrom(const TpaQueryAIActionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryAIActionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryAIActionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionReqImpl();
};
// -------------------------------------------------------------------

class TpaQueryAIActionResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pb.TpaQueryAIActionResp) */ {
 public:
  TpaQueryAIActionResp();
  virtual ~TpaQueryAIActionResp();

  TpaQueryAIActionResp(const TpaQueryAIActionResp& from);

  inline TpaQueryAIActionResp& operator=(const TpaQueryAIActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TpaQueryAIActionResp(TpaQueryAIActionResp&& from) noexcept
    : TpaQueryAIActionResp() {
    *this = ::std::move(from);
  }

  inline TpaQueryAIActionResp& operator=(TpaQueryAIActionResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TpaQueryAIActionResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TpaQueryAIActionResp* internal_default_instance() {
    return reinterpret_cast<const TpaQueryAIActionResp*>(
               &_TpaQueryAIActionResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TpaQueryAIActionResp* other);
  friend void swap(TpaQueryAIActionResp& a, TpaQueryAIActionResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TpaQueryAIActionResp* New() const PROTOBUF_FINAL { return New(NULL); }

  TpaQueryAIActionResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TpaQueryAIActionResp& from);
  void MergeFrom(const TpaQueryAIActionResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TpaQueryAIActionResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 allow_raise = 5;
  int allow_raise_size() const;
  void clear_allow_raise();
  static const int kAllowRaiseFieldNumber = 5;
  ::google::protobuf::uint32 allow_raise(int index) const;
  void set_allow_raise(int index, ::google::protobuf::uint32 value);
  void add_allow_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      allow_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_allow_raise();

  // uint64 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint64 player_id() const;
  void set_player_id(::google::protobuf::uint64 value);

  // uint32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 action_type = 3;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 3;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // uint32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pb.TpaQueryAIActionResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > allow_raise_;
  mutable int _allow_raise_cached_byte_size_;
  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend struct ::protobuf_tpa_2eproto::TableStruct;
  friend void ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionRespImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TPAPlayer

// uint64 player_id = 1;
inline void TPAPlayer::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TPAPlayer::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayer.player_id)
  return player_id_;
}
inline void TPAPlayer::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayer.player_id)
}

// int32 seat = 2;
inline void TPAPlayer::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 TPAPlayer::seat() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayer.seat)
  return seat_;
}
inline void TPAPlayer::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayer.seat)
}

// int32 is_ready = 3;
inline void TPAPlayer::clear_is_ready() {
  is_ready_ = 0;
}
inline ::google::protobuf::int32 TPAPlayer::is_ready() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayer.is_ready)
  return is_ready_;
}
inline void TPAPlayer::set_is_ready(::google::protobuf::int32 value) {
  
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayer.is_ready)
}

// int32 money = 4;
inline void TPAPlayer::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 TPAPlayer::money() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayer.money)
  return money_;
}
inline void TPAPlayer::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayer.money)
}

// -------------------------------------------------------------------

// TPAPlayerState

// uint64 player_id = 1;
inline void TPAPlayerState::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TPAPlayerState::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerState.player_id)
  return player_id_;
}
inline void TPAPlayerState::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerState.player_id)
}

// int32 seat = 2;
inline void TPAPlayerState::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 TPAPlayerState::seat() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerState.seat)
  return seat_;
}
inline void TPAPlayerState::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerState.seat)
}

// uint32 spent = 3;
inline void TPAPlayerState::clear_spent() {
  spent_ = 0u;
}
inline ::google::protobuf::uint32 TPAPlayerState::spent() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerState.spent)
  return spent_;
}
inline void TPAPlayerState::set_spent(::google::protobuf::uint32 value) {
  
  spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerState.spent)
}

// uint32 fold = 4;
inline void TPAPlayerState::clear_fold() {
  fold_ = 0u;
}
inline ::google::protobuf::uint32 TPAPlayerState::fold() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerState.fold)
  return fold_;
}
inline void TPAPlayerState::set_fold(::google::protobuf::uint32 value) {
  
  fold_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerState.fold)
}

// repeated int32 hole_cards = 5;
inline int TPAPlayerState::hole_cards_size() const {
  return hole_cards_.size();
}
inline void TPAPlayerState::clear_hole_cards() {
  hole_cards_.Clear();
}
inline ::google::protobuf::int32 TPAPlayerState::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerState.hole_cards)
  return hole_cards_.Get(index);
}
inline void TPAPlayerState::set_hole_cards(int index, ::google::protobuf::int32 value) {
  hole_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerState.hole_cards)
}
inline void TPAPlayerState::add_hole_cards(::google::protobuf::int32 value) {
  hole_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TPAPlayerState.hole_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TPAPlayerState::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TPAPlayerState.hole_cards)
  return hole_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TPAPlayerState::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TPAPlayerState.hole_cards)
  return &hole_cards_;
}

// -------------------------------------------------------------------

// TPAPlayerAction

// uint64 player_id = 1;
inline void TPAPlayerAction::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TPAPlayerAction::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerAction.player_id)
  return player_id_;
}
inline void TPAPlayerAction::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerAction.player_id)
}

// int32 seat = 2;
inline void TPAPlayerAction::clear_seat() {
  seat_ = 0;
}
inline ::google::protobuf::int32 TPAPlayerAction::seat() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerAction.seat)
  return seat_;
}
inline void TPAPlayerAction::set_seat(::google::protobuf::int32 value) {
  
  seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerAction.seat)
}

// int32 round = 3;
inline void TPAPlayerAction::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TPAPlayerAction::round() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerAction.round)
  return round_;
}
inline void TPAPlayerAction::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerAction.round)
}

// uint32 type = 4;
inline void TPAPlayerAction::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 TPAPlayerAction::type() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerAction.type)
  return type_;
}
inline void TPAPlayerAction::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerAction.type)
}

// int32 size = 5;
inline void TPAPlayerAction::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 TPAPlayerAction::size() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerAction.size)
  return size_;
}
inline void TPAPlayerAction::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerAction.size)
}

// -------------------------------------------------------------------

// TPAPlayerCards

// uint64 player_id = 1;
inline void TPAPlayerCards::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TPAPlayerCards::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerCards.player_id)
  return player_id_;
}
inline void TPAPlayerCards::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerCards.player_id)
}

// repeated int32 hole_cards = 2;
inline int TPAPlayerCards::hole_cards_size() const {
  return hole_cards_.size();
}
inline void TPAPlayerCards::clear_hole_cards() {
  hole_cards_.Clear();
}
inline ::google::protobuf::int32 TPAPlayerCards::hole_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TPAPlayerCards.hole_cards)
  return hole_cards_.Get(index);
}
inline void TPAPlayerCards::set_hole_cards(int index, ::google::protobuf::int32 value) {
  hole_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TPAPlayerCards.hole_cards)
}
inline void TPAPlayerCards::add_hole_cards(::google::protobuf::int32 value) {
  hole_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TPAPlayerCards.hole_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TPAPlayerCards::hole_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TPAPlayerCards.hole_cards)
  return hole_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TPAPlayerCards::mutable_hole_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TPAPlayerCards.hole_cards)
  return &hole_cards_;
}

// -------------------------------------------------------------------

// TpaRegisterReq

// string token = 1;
inline void TpaRegisterReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TpaRegisterReq::token() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRegisterReq.token)
  return token_.GetNoArena();
}
inline void TpaRegisterReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.TpaRegisterReq.token)
}
#if LANG_CXX11
inline void TpaRegisterReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.TpaRegisterReq.token)
}
#endif
inline void TpaRegisterReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.TpaRegisterReq.token)
}
inline void TpaRegisterReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.TpaRegisterReq.token)
}
inline ::std::string* TpaRegisterReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:Pb.TpaRegisterReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TpaRegisterReq::release_token() {
  // @@protoc_insertion_point(field_release:Pb.TpaRegisterReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TpaRegisterReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:Pb.TpaRegisterReq.token)
}

// uint32 server_id = 2;
inline void TpaRegisterReq::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaRegisterReq::server_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRegisterReq.server_id)
  return server_id_;
}
inline void TpaRegisterReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRegisterReq.server_id)
}

// -------------------------------------------------------------------

// TpaRegisterResp

// uint32 ai_server_id = 1;
inline void TpaRegisterResp::clear_ai_server_id() {
  ai_server_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaRegisterResp::ai_server_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRegisterResp.ai_server_id)
  return ai_server_id_;
}
inline void TpaRegisterResp::set_ai_server_id(::google::protobuf::uint32 value) {
  
  ai_server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRegisterResp.ai_server_id)
}

// uint64 conn_unique_id = 2;
inline void TpaRegisterResp::clear_conn_unique_id() {
  conn_unique_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaRegisterResp::conn_unique_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaRegisterResp.conn_unique_id)
  return conn_unique_id_;
}
inline void TpaRegisterResp::set_conn_unique_id(::google::protobuf::uint64 value) {
  
  conn_unique_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaRegisterResp.conn_unique_id)
}

// -------------------------------------------------------------------

// TpaKeepAliveReq

// uint32 server_id = 1;
inline void TpaKeepAliveReq::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaKeepAliveReq::server_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaKeepAliveReq.server_id)
  return server_id_;
}
inline void TpaKeepAliveReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaKeepAliveReq.server_id)
}

// uint32 timestamp = 2;
inline void TpaKeepAliveReq::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 TpaKeepAliveReq::timestamp() const {
  // @@protoc_insertion_point(field_get:Pb.TpaKeepAliveReq.timestamp)
  return timestamp_;
}
inline void TpaKeepAliveReq::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaKeepAliveReq.timestamp)
}

// -------------------------------------------------------------------

// TpaKeepAliveResp

// uint32 ai_server_id = 1;
inline void TpaKeepAliveResp::clear_ai_server_id() {
  ai_server_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaKeepAliveResp::ai_server_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaKeepAliveResp.ai_server_id)
  return ai_server_id_;
}
inline void TpaKeepAliveResp::set_ai_server_id(::google::protobuf::uint32 value) {
  
  ai_server_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaKeepAliveResp.ai_server_id)
}

// -------------------------------------------------------------------

// TpaEnterRoomReq

// uint32 room_id = 1;
inline void TpaEnterRoomReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaEnterRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomReq.room_id)
  return room_id_;
}
inline void TpaEnterRoomReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaEnterRoomReq.room_id)
}

// uint32 game_type = 2;
inline void TpaEnterRoomReq::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaEnterRoomReq::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomReq.game_type)
  return game_type_;
}
inline void TpaEnterRoomReq::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaEnterRoomReq.game_type)
}

// repeated .Pb.TPAPlayer player_list = 3;
inline int TpaEnterRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void TpaEnterRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaEnterRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaEnterRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaEnterRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaEnterRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaEnterRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaEnterRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaEnterRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaEnterRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaEnterRoomReq.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaEnterRoomResp

// uint32 room_id = 1;
inline void TpaEnterRoomResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaEnterRoomResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomResp.room_id)
  return room_id_;
}
inline void TpaEnterRoomResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaEnterRoomResp.room_id)
}

// uint32 game_type = 2;
inline void TpaEnterRoomResp::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaEnterRoomResp::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomResp.game_type)
  return game_type_;
}
inline void TpaEnterRoomResp::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaEnterRoomResp.game_type)
}

// repeated .Pb.TPAPlayer player_list = 3;
inline int TpaEnterRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void TpaEnterRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaEnterRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaEnterRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaEnterRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaEnterRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaEnterRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaEnterRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaEnterRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaEnterRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaEnterRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaEnterRoomResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaAIEnterRoomReq

// uint32 room_id = 1;
inline void TpaAIEnterRoomReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaAIEnterRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomReq.room_id)
  return room_id_;
}
inline void TpaAIEnterRoomReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomReq.room_id)
}

// uint32 game_type = 2;
inline void TpaAIEnterRoomReq::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaAIEnterRoomReq::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomReq.game_type)
  return game_type_;
}
inline void TpaAIEnterRoomReq::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomReq.game_type)
}

// repeated .Pb.TPAPlayer player_list = 3;
inline int TpaAIEnterRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void TpaAIEnterRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaAIEnterRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaAIEnterRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAIEnterRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaAIEnterRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaAIEnterRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaAIEnterRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAIEnterRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaAIEnterRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAIEnterRoomReq.player_list)
  return player_list_;
}

// string constant_token = 4;
inline void TpaAIEnterRoomReq::clear_constant_token() {
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TpaAIEnterRoomReq::constant_token() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomReq.constant_token)
  return constant_token_.GetNoArena();
}
inline void TpaAIEnterRoomReq::set_constant_token(const ::std::string& value) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomReq.constant_token)
}
#if LANG_CXX11
inline void TpaAIEnterRoomReq::set_constant_token(::std::string&& value) {
  
  constant_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.TpaAIEnterRoomReq.constant_token)
}
#endif
inline void TpaAIEnterRoomReq::set_constant_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.TpaAIEnterRoomReq.constant_token)
}
inline void TpaAIEnterRoomReq::set_constant_token(const char* value, size_t size) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.TpaAIEnterRoomReq.constant_token)
}
inline ::std::string* TpaAIEnterRoomReq::mutable_constant_token() {
  
  // @@protoc_insertion_point(field_mutable:Pb.TpaAIEnterRoomReq.constant_token)
  return constant_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TpaAIEnterRoomReq::release_constant_token() {
  // @@protoc_insertion_point(field_release:Pb.TpaAIEnterRoomReq.constant_token)
  
  return constant_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TpaAIEnterRoomReq::set_allocated_constant_token(::std::string* constant_token) {
  if (constant_token != NULL) {
    
  } else {
    
  }
  constant_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constant_token);
  // @@protoc_insertion_point(field_set_allocated:Pb.TpaAIEnterRoomReq.constant_token)
}

// -------------------------------------------------------------------

// TpaAIEnterRoomResp

// uint32 room_id = 1;
inline void TpaAIEnterRoomResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaAIEnterRoomResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomResp.room_id)
  return room_id_;
}
inline void TpaAIEnterRoomResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomResp.room_id)
}

// uint32 game_type = 2;
inline void TpaAIEnterRoomResp::clear_game_type() {
  game_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaAIEnterRoomResp::game_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomResp.game_type)
  return game_type_;
}
inline void TpaAIEnterRoomResp::set_game_type(::google::protobuf::uint32 value) {
  
  game_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomResp.game_type)
}

// repeated .Pb.TPAPlayer player_list = 3;
inline int TpaAIEnterRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void TpaAIEnterRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaAIEnterRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaAIEnterRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaAIEnterRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaAIEnterRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaAIEnterRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaAIEnterRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaAIEnterRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaAIEnterRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaAIEnterRoomResp.player_list)
  return player_list_;
}

// string constant_token = 4;
inline void TpaAIEnterRoomResp::clear_constant_token() {
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TpaAIEnterRoomResp::constant_token() const {
  // @@protoc_insertion_point(field_get:Pb.TpaAIEnterRoomResp.constant_token)
  return constant_token_.GetNoArena();
}
inline void TpaAIEnterRoomResp::set_constant_token(const ::std::string& value) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pb.TpaAIEnterRoomResp.constant_token)
}
#if LANG_CXX11
inline void TpaAIEnterRoomResp::set_constant_token(::std::string&& value) {
  
  constant_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pb.TpaAIEnterRoomResp.constant_token)
}
#endif
inline void TpaAIEnterRoomResp::set_constant_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pb.TpaAIEnterRoomResp.constant_token)
}
inline void TpaAIEnterRoomResp::set_constant_token(const char* value, size_t size) {
  
  constant_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pb.TpaAIEnterRoomResp.constant_token)
}
inline ::std::string* TpaAIEnterRoomResp::mutable_constant_token() {
  
  // @@protoc_insertion_point(field_mutable:Pb.TpaAIEnterRoomResp.constant_token)
  return constant_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TpaAIEnterRoomResp::release_constant_token() {
  // @@protoc_insertion_point(field_release:Pb.TpaAIEnterRoomResp.constant_token)
  
  return constant_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TpaAIEnterRoomResp::set_allocated_constant_token(::std::string* constant_token) {
  if (constant_token != NULL) {
    
  } else {
    
  }
  constant_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constant_token);
  // @@protoc_insertion_point(field_set_allocated:Pb.TpaAIEnterRoomResp.constant_token)
}

// -------------------------------------------------------------------

// TpaLeaveRoomReq

// uint32 room_id = 1;
inline void TpaLeaveRoomReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaLeaveRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaLeaveRoomReq.room_id)
  return room_id_;
}
inline void TpaLeaveRoomReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaLeaveRoomReq.room_id)
}

// repeated .Pb.TPAPlayer player_list = 2;
inline int TpaLeaveRoomReq::player_list_size() const {
  return player_list_.size();
}
inline void TpaLeaveRoomReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaLeaveRoomReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaLeaveRoomReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaLeaveRoomReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaLeaveRoomReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaLeaveRoomReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaLeaveRoomReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaLeaveRoomReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaLeaveRoomReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaLeaveRoomReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaLeaveRoomReq.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaLeaveRoomResp

// uint32 room_id = 1;
inline void TpaLeaveRoomResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaLeaveRoomResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaLeaveRoomResp.room_id)
  return room_id_;
}
inline void TpaLeaveRoomResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaLeaveRoomResp.room_id)
}

// repeated .Pb.TPAPlayer player_list = 2;
inline int TpaLeaveRoomResp::player_list_size() const {
  return player_list_.size();
}
inline void TpaLeaveRoomResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaLeaveRoomResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaLeaveRoomResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaLeaveRoomResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaLeaveRoomResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaLeaveRoomResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaLeaveRoomResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaLeaveRoomResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaLeaveRoomResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaLeaveRoomResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaLeaveRoomResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaNotifyDestroyRoom

// uint32 room_id = 1;
inline void TpaNotifyDestroyRoom::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaNotifyDestroyRoom::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaNotifyDestroyRoom.room_id)
  return room_id_;
}
inline void TpaNotifyDestroyRoom::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaNotifyDestroyRoom.room_id)
}

// uint32 reason = 2;
inline void TpaNotifyDestroyRoom::clear_reason() {
  reason_ = 0u;
}
inline ::google::protobuf::uint32 TpaNotifyDestroyRoom::reason() const {
  // @@protoc_insertion_point(field_get:Pb.TpaNotifyDestroyRoom.reason)
  return reason_;
}
inline void TpaNotifyDestroyRoom::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaNotifyDestroyRoom.reason)
}

// -------------------------------------------------------------------

// TpaSetPlayerStateReq

// uint32 room_id = 1;
inline void TpaSetPlayerStateReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetPlayerStateReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetPlayerStateReq.room_id)
  return room_id_;
}
inline void TpaSetPlayerStateReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetPlayerStateReq.room_id)
}

// repeated .Pb.TPAPlayer player_list = 2;
inline int TpaSetPlayerStateReq::player_list_size() const {
  return player_list_.size();
}
inline void TpaSetPlayerStateReq::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaSetPlayerStateReq::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetPlayerStateReq.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaSetPlayerStateReq::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaSetPlayerStateReq.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaSetPlayerStateReq::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaSetPlayerStateReq.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaSetPlayerStateReq::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaSetPlayerStateReq.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaSetPlayerStateReq::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaSetPlayerStateReq.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaSetPlayerStateResp

// uint32 room_id = 1;
inline void TpaSetPlayerStateResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetPlayerStateResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetPlayerStateResp.room_id)
  return room_id_;
}
inline void TpaSetPlayerStateResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetPlayerStateResp.room_id)
}

// repeated .Pb.TPAPlayer player_list = 2;
inline int TpaSetPlayerStateResp::player_list_size() const {
  return player_list_.size();
}
inline void TpaSetPlayerStateResp::clear_player_list() {
  player_list_.Clear();
}
inline const ::Pb::TPAPlayer& TpaSetPlayerStateResp::player_list(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetPlayerStateResp.player_list)
  return player_list_.Get(index);
}
inline ::Pb::TPAPlayer* TpaSetPlayerStateResp::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaSetPlayerStateResp.player_list)
  return player_list_.Mutable(index);
}
inline ::Pb::TPAPlayer* TpaSetPlayerStateResp::add_player_list() {
  // @@protoc_insertion_point(field_add:Pb.TpaSetPlayerStateResp.player_list)
  return player_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >*
TpaSetPlayerStateResp::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaSetPlayerStateResp.player_list)
  return &player_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayer >&
TpaSetPlayerStateResp::player_list() const {
  // @@protoc_insertion_point(field_list:Pb.TpaSetPlayerStateResp.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// TpaSetDealerReq

// uint32 room_id = 1;
inline void TpaSetDealerReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetDealerReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerReq.room_id)
  return room_id_;
}
inline void TpaSetDealerReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerReq.room_id)
}

// uint64 dealer_player_id = 2;
inline void TpaSetDealerReq::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaSetDealerReq::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerReq.dealer_player_id)
  return dealer_player_id_;
}
inline void TpaSetDealerReq::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerReq.dealer_player_id)
}

// int32 dealer_seat = 3;
inline void TpaSetDealerReq::clear_dealer_seat() {
  dealer_seat_ = 0;
}
inline ::google::protobuf::int32 TpaSetDealerReq::dealer_seat() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerReq.dealer_seat)
  return dealer_seat_;
}
inline void TpaSetDealerReq::set_dealer_seat(::google::protobuf::int32 value) {
  
  dealer_seat_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerReq.dealer_seat)
}

// -------------------------------------------------------------------

// TpaSetDealerResp

// uint32 room_id = 1;
inline void TpaSetDealerResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetDealerResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerResp.room_id)
  return room_id_;
}
inline void TpaSetDealerResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerResp.room_id)
}

// uint64 dealer_player_id = 2;
inline void TpaSetDealerResp::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaSetDealerResp::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerResp.dealer_player_id)
  return dealer_player_id_;
}
inline void TpaSetDealerResp::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerResp.dealer_player_id)
}

// uint32 hand_id = 3;
inline void TpaSetDealerResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetDealerResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerResp.hand_id)
  return hand_id_;
}
inline void TpaSetDealerResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerResp.hand_id)
}

// uint32 max_spent = 4;
inline void TpaSetDealerResp::clear_max_spent() {
  max_spent_ = 0u;
}
inline ::google::protobuf::uint32 TpaSetDealerResp::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerResp.max_spent)
  return max_spent_;
}
inline void TpaSetDealerResp::set_max_spent(::google::protobuf::uint32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaSetDealerResp.max_spent)
}

// repeated .Pb.TPAPlayerState player_state = 5;
inline int TpaSetDealerResp::player_state_size() const {
  return player_state_.size();
}
inline void TpaSetDealerResp::clear_player_state() {
  player_state_.Clear();
}
inline const ::Pb::TPAPlayerState& TpaSetDealerResp::player_state(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaSetDealerResp.player_state)
  return player_state_.Get(index);
}
inline ::Pb::TPAPlayerState* TpaSetDealerResp::mutable_player_state(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaSetDealerResp.player_state)
  return player_state_.Mutable(index);
}
inline ::Pb::TPAPlayerState* TpaSetDealerResp::add_player_state() {
  // @@protoc_insertion_point(field_add:Pb.TpaSetDealerResp.player_state)
  return player_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >*
TpaSetDealerResp::mutable_player_state() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaSetDealerResp.player_state)
  return &player_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >&
TpaSetDealerResp::player_state() const {
  // @@protoc_insertion_point(field_list:Pb.TpaSetDealerResp.player_state)
  return player_state_;
}

// -------------------------------------------------------------------

// TpaQueryCardsReq

// uint32 room_id = 1;
inline void TpaQueryCardsReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryCardsReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsReq.room_id)
  return room_id_;
}
inline void TpaQueryCardsReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsReq.room_id)
}

// int32 round = 2;
inline void TpaQueryCardsReq::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TpaQueryCardsReq::round() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsReq.round)
  return round_;
}
inline void TpaQueryCardsReq::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsReq.round)
}

// -------------------------------------------------------------------

// TpaQueryCardsResp

// uint32 room_id = 1;
inline void TpaQueryCardsResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryCardsResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.room_id)
  return room_id_;
}
inline void TpaQueryCardsResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.room_id)
}

// int32 round = 2;
inline void TpaQueryCardsResp::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TpaQueryCardsResp::round() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.round)
  return round_;
}
inline void TpaQueryCardsResp::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.round)
}

// uint32 finished = 3;
inline void TpaQueryCardsResp::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryCardsResp::finished() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.finished)
  return finished_;
}
inline void TpaQueryCardsResp::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.finished)
}

// repeated int32 flop_cards = 4;
inline int TpaQueryCardsResp::flop_cards_size() const {
  return flop_cards_.size();
}
inline void TpaQueryCardsResp::clear_flop_cards() {
  flop_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryCardsResp::flop_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.flop_cards)
  return flop_cards_.Get(index);
}
inline void TpaQueryCardsResp::set_flop_cards(int index, ::google::protobuf::int32 value) {
  flop_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.flop_cards)
}
inline void TpaQueryCardsResp::add_flop_cards(::google::protobuf::int32 value) {
  flop_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryCardsResp.flop_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryCardsResp::flop_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryCardsResp.flop_cards)
  return flop_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryCardsResp::mutable_flop_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryCardsResp.flop_cards)
  return &flop_cards_;
}

// repeated int32 turn_cards = 5;
inline int TpaQueryCardsResp::turn_cards_size() const {
  return turn_cards_.size();
}
inline void TpaQueryCardsResp::clear_turn_cards() {
  turn_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryCardsResp::turn_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.turn_cards)
  return turn_cards_.Get(index);
}
inline void TpaQueryCardsResp::set_turn_cards(int index, ::google::protobuf::int32 value) {
  turn_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.turn_cards)
}
inline void TpaQueryCardsResp::add_turn_cards(::google::protobuf::int32 value) {
  turn_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryCardsResp.turn_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryCardsResp::turn_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryCardsResp.turn_cards)
  return turn_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryCardsResp::mutable_turn_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryCardsResp.turn_cards)
  return &turn_cards_;
}

// repeated int32 river_cards = 6;
inline int TpaQueryCardsResp::river_cards_size() const {
  return river_cards_.size();
}
inline void TpaQueryCardsResp::clear_river_cards() {
  river_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryCardsResp::river_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.river_cards)
  return river_cards_.Get(index);
}
inline void TpaQueryCardsResp::set_river_cards(int index, ::google::protobuf::int32 value) {
  river_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.river_cards)
}
inline void TpaQueryCardsResp::add_river_cards(::google::protobuf::int32 value) {
  river_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryCardsResp.river_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryCardsResp::river_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryCardsResp.river_cards)
  return river_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryCardsResp::mutable_river_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryCardsResp.river_cards)
  return &river_cards_;
}

// repeated .Pb.TPAPlayerCards player_cards = 7;
inline int TpaQueryCardsResp::player_cards_size() const {
  return player_cards_.size();
}
inline void TpaQueryCardsResp::clear_player_cards() {
  player_cards_.Clear();
}
inline const ::Pb::TPAPlayerCards& TpaQueryCardsResp::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.player_cards)
  return player_cards_.Get(index);
}
inline ::Pb::TPAPlayerCards* TpaQueryCardsResp::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaQueryCardsResp.player_cards)
  return player_cards_.Mutable(index);
}
inline ::Pb::TPAPlayerCards* TpaQueryCardsResp::add_player_cards() {
  // @@protoc_insertion_point(field_add:Pb.TpaQueryCardsResp.player_cards)
  return player_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerCards >*
TpaQueryCardsResp::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryCardsResp.player_cards)
  return &player_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerCards >&
TpaQueryCardsResp::player_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryCardsResp.player_cards)
  return player_cards_;
}

// uint64 dealer_player_id = 8;
inline void TpaQueryCardsResp::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryCardsResp::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryCardsResp.dealer_player_id)
  return dealer_player_id_;
}
inline void TpaQueryCardsResp::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryCardsResp.dealer_player_id)
}

// -------------------------------------------------------------------

// TpaQueryAllowActionReq

// uint32 room_id = 1;
inline void TpaQueryAllowActionReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAllowActionReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAllowActionReq.room_id)
  return room_id_;
}
inline void TpaQueryAllowActionReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAllowActionReq.room_id)
}

// uint64 player_id = 2;
inline void TpaQueryAllowActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryAllowActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAllowActionReq.player_id)
  return player_id_;
}
inline void TpaQueryAllowActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAllowActionReq.player_id)
}

// -------------------------------------------------------------------

// TpaQueryAllowActionResp

// uint32 room_id = 1;
inline void TpaQueryAllowActionResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAllowActionResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAllowActionResp.room_id)
  return room_id_;
}
inline void TpaQueryAllowActionResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAllowActionResp.room_id)
}

// uint64 player_id = 2;
inline void TpaQueryAllowActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryAllowActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAllowActionResp.player_id)
  return player_id_;
}
inline void TpaQueryAllowActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAllowActionResp.player_id)
}

// repeated uint32 allow_raise = 3;
inline int TpaQueryAllowActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void TpaQueryAllowActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 TpaQueryAllowActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAllowActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void TpaQueryAllowActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAllowActionResp.allow_raise)
}
inline void TpaQueryAllowActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryAllowActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TpaQueryAllowActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryAllowActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TpaQueryAllowActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryAllowActionResp.allow_raise)
  return &allow_raise_;
}

// -------------------------------------------------------------------

// TpaQueryMatchStateReq

// uint32 room_id = 1;
inline void TpaQueryMatchStateReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryMatchStateReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateReq.room_id)
  return room_id_;
}
inline void TpaQueryMatchStateReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateReq.room_id)
}

// int32 round = 2;
inline void TpaQueryMatchStateReq::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TpaQueryMatchStateReq::round() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateReq.round)
  return round_;
}
inline void TpaQueryMatchStateReq::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateReq.round)
}

// -------------------------------------------------------------------

// TpaQueryMatchStateResp

// uint32 room_id = 1;
inline void TpaQueryMatchStateResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryMatchStateResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.room_id)
  return room_id_;
}
inline void TpaQueryMatchStateResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.room_id)
}

// uint64 dealer_player_id = 2;
inline void TpaQueryMatchStateResp::clear_dealer_player_id() {
  dealer_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryMatchStateResp::dealer_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.dealer_player_id)
  return dealer_player_id_;
}
inline void TpaQueryMatchStateResp::set_dealer_player_id(::google::protobuf::uint64 value) {
  
  dealer_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.dealer_player_id)
}

// uint32 hand_id = 3;
inline void TpaQueryMatchStateResp::clear_hand_id() {
  hand_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryMatchStateResp::hand_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.hand_id)
  return hand_id_;
}
inline void TpaQueryMatchStateResp::set_hand_id(::google::protobuf::uint32 value) {
  
  hand_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.hand_id)
}

// int32 round = 4;
inline void TpaQueryMatchStateResp::clear_round() {
  round_ = 0;
}
inline ::google::protobuf::int32 TpaQueryMatchStateResp::round() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.round)
  return round_;
}
inline void TpaQueryMatchStateResp::set_round(::google::protobuf::int32 value) {
  
  round_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.round)
}

// uint32 finished = 5;
inline void TpaQueryMatchStateResp::clear_finished() {
  finished_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryMatchStateResp::finished() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.finished)
  return finished_;
}
inline void TpaQueryMatchStateResp::set_finished(::google::protobuf::uint32 value) {
  
  finished_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.finished)
}

// uint32 max_spent = 6;
inline void TpaQueryMatchStateResp::clear_max_spent() {
  max_spent_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryMatchStateResp::max_spent() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.max_spent)
  return max_spent_;
}
inline void TpaQueryMatchStateResp::set_max_spent(::google::protobuf::uint32 value) {
  
  max_spent_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.max_spent)
}

// repeated int32 flop_cards = 7;
inline int TpaQueryMatchStateResp::flop_cards_size() const {
  return flop_cards_.size();
}
inline void TpaQueryMatchStateResp::clear_flop_cards() {
  flop_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryMatchStateResp::flop_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.flop_cards)
  return flop_cards_.Get(index);
}
inline void TpaQueryMatchStateResp::set_flop_cards(int index, ::google::protobuf::int32 value) {
  flop_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.flop_cards)
}
inline void TpaQueryMatchStateResp::add_flop_cards(::google::protobuf::int32 value) {
  flop_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.flop_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryMatchStateResp::flop_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.flop_cards)
  return flop_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryMatchStateResp::mutable_flop_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.flop_cards)
  return &flop_cards_;
}

// repeated int32 turn_cards = 8;
inline int TpaQueryMatchStateResp::turn_cards_size() const {
  return turn_cards_.size();
}
inline void TpaQueryMatchStateResp::clear_turn_cards() {
  turn_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryMatchStateResp::turn_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.turn_cards)
  return turn_cards_.Get(index);
}
inline void TpaQueryMatchStateResp::set_turn_cards(int index, ::google::protobuf::int32 value) {
  turn_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.turn_cards)
}
inline void TpaQueryMatchStateResp::add_turn_cards(::google::protobuf::int32 value) {
  turn_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.turn_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryMatchStateResp::turn_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.turn_cards)
  return turn_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryMatchStateResp::mutable_turn_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.turn_cards)
  return &turn_cards_;
}

// repeated int32 river_cards = 9;
inline int TpaQueryMatchStateResp::river_cards_size() const {
  return river_cards_.size();
}
inline void TpaQueryMatchStateResp::clear_river_cards() {
  river_cards_.Clear();
}
inline ::google::protobuf::int32 TpaQueryMatchStateResp::river_cards(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.river_cards)
  return river_cards_.Get(index);
}
inline void TpaQueryMatchStateResp::set_river_cards(int index, ::google::protobuf::int32 value) {
  river_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.river_cards)
}
inline void TpaQueryMatchStateResp::add_river_cards(::google::protobuf::int32 value) {
  river_cards_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.river_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TpaQueryMatchStateResp::river_cards() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.river_cards)
  return river_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TpaQueryMatchStateResp::mutable_river_cards() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.river_cards)
  return &river_cards_;
}

// repeated uint32 allow_raise = 10;
inline int TpaQueryMatchStateResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void TpaQueryMatchStateResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 TpaQueryMatchStateResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void TpaQueryMatchStateResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.allow_raise)
}
inline void TpaQueryMatchStateResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TpaQueryMatchStateResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TpaQueryMatchStateResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.allow_raise)
  return &allow_raise_;
}

// repeated .Pb.TPAPlayerState player_state = 11;
inline int TpaQueryMatchStateResp::player_state_size() const {
  return player_state_.size();
}
inline void TpaQueryMatchStateResp::clear_player_state() {
  player_state_.Clear();
}
inline const ::Pb::TPAPlayerState& TpaQueryMatchStateResp::player_state(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.player_state)
  return player_state_.Get(index);
}
inline ::Pb::TPAPlayerState* TpaQueryMatchStateResp::mutable_player_state(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaQueryMatchStateResp.player_state)
  return player_state_.Mutable(index);
}
inline ::Pb::TPAPlayerState* TpaQueryMatchStateResp::add_player_state() {
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.player_state)
  return player_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >*
TpaQueryMatchStateResp::mutable_player_state() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.player_state)
  return &player_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerState >&
TpaQueryMatchStateResp::player_state() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.player_state)
  return player_state_;
}

// repeated .Pb.TPAPlayerAction player_action = 12;
inline int TpaQueryMatchStateResp::player_action_size() const {
  return player_action_.size();
}
inline void TpaQueryMatchStateResp::clear_player_action() {
  player_action_.Clear();
}
inline const ::Pb::TPAPlayerAction& TpaQueryMatchStateResp::player_action(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.player_action)
  return player_action_.Get(index);
}
inline ::Pb::TPAPlayerAction* TpaQueryMatchStateResp::mutable_player_action(int index) {
  // @@protoc_insertion_point(field_mutable:Pb.TpaQueryMatchStateResp.player_action)
  return player_action_.Mutable(index);
}
inline ::Pb::TPAPlayerAction* TpaQueryMatchStateResp::add_player_action() {
  // @@protoc_insertion_point(field_add:Pb.TpaQueryMatchStateResp.player_action)
  return player_action_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerAction >*
TpaQueryMatchStateResp::mutable_player_action() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryMatchStateResp.player_action)
  return &player_action_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Pb::TPAPlayerAction >&
TpaQueryMatchStateResp::player_action() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryMatchStateResp.player_action)
  return player_action_;
}

// uint64 turn_player_id = 13;
inline void TpaQueryMatchStateResp::clear_turn_player_id() {
  turn_player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryMatchStateResp::turn_player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryMatchStateResp.turn_player_id)
  return turn_player_id_;
}
inline void TpaQueryMatchStateResp::set_turn_player_id(::google::protobuf::uint64 value) {
  
  turn_player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryMatchStateResp.turn_player_id)
}

// -------------------------------------------------------------------

// TpaReportActionTokenReq

// uint32 room_id = 1;
inline void TpaReportActionTokenReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportActionTokenReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportActionTokenReq.room_id)
  return room_id_;
}
inline void TpaReportActionTokenReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportActionTokenReq.room_id)
}

// uint64 player_id = 2;
inline void TpaReportActionTokenReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaReportActionTokenReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportActionTokenReq.player_id)
  return player_id_;
}
inline void TpaReportActionTokenReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportActionTokenReq.player_id)
}

// -------------------------------------------------------------------

// TpaReportActionTokenResp

// uint32 room_id = 1;
inline void TpaReportActionTokenResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportActionTokenResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportActionTokenResp.room_id)
  return room_id_;
}
inline void TpaReportActionTokenResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportActionTokenResp.room_id)
}

// uint64 player_id = 2;
inline void TpaReportActionTokenResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaReportActionTokenResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportActionTokenResp.player_id)
  return player_id_;
}
inline void TpaReportActionTokenResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportActionTokenResp.player_id)
}

// -------------------------------------------------------------------

// TpaReportPlayerActionReq

// uint32 room_id = 1;
inline void TpaReportPlayerActionReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionReq.room_id)
  return room_id_;
}
inline void TpaReportPlayerActionReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionReq.room_id)
}

// uint64 player_id = 2;
inline void TpaReportPlayerActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaReportPlayerActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionReq.player_id)
  return player_id_;
}
inline void TpaReportPlayerActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionReq.player_id)
}

// uint32 action_type = 3;
inline void TpaReportPlayerActionReq::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionReq::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionReq.action_type)
  return action_type_;
}
inline void TpaReportPlayerActionReq::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionReq.action_type)
}

// uint32 size = 4;
inline void TpaReportPlayerActionReq::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionReq::size() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionReq.size)
  return size_;
}
inline void TpaReportPlayerActionReq::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionReq.size)
}

// -------------------------------------------------------------------

// TpaReportPlayerActionResp

// uint32 room_id = 1;
inline void TpaReportPlayerActionResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionResp.room_id)
  return room_id_;
}
inline void TpaReportPlayerActionResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionResp.room_id)
}

// uint64 player_id = 2;
inline void TpaReportPlayerActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaReportPlayerActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionResp.player_id)
  return player_id_;
}
inline void TpaReportPlayerActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionResp.player_id)
}

// uint32 action_type = 3;
inline void TpaReportPlayerActionResp::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionResp::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionResp.action_type)
  return action_type_;
}
inline void TpaReportPlayerActionResp::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionResp.action_type)
}

// uint32 size = 4;
inline void TpaReportPlayerActionResp::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 TpaReportPlayerActionResp::size() const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionResp.size)
  return size_;
}
inline void TpaReportPlayerActionResp::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionResp.size)
}

// repeated uint32 allow_raise = 5;
inline int TpaReportPlayerActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void TpaReportPlayerActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 TpaReportPlayerActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaReportPlayerActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void TpaReportPlayerActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaReportPlayerActionResp.allow_raise)
}
inline void TpaReportPlayerActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaReportPlayerActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TpaReportPlayerActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.TpaReportPlayerActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TpaReportPlayerActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaReportPlayerActionResp.allow_raise)
  return &allow_raise_;
}

// -------------------------------------------------------------------

// TpaQueryAIActionReq

// uint32 room_id = 1;
inline void TpaQueryAIActionReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAIActionReq::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionReq.room_id)
  return room_id_;
}
inline void TpaQueryAIActionReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionReq.room_id)
}

// uint64 player_id = 2;
inline void TpaQueryAIActionReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryAIActionReq::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionReq.player_id)
  return player_id_;
}
inline void TpaQueryAIActionReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionReq.player_id)
}

// -------------------------------------------------------------------

// TpaQueryAIActionResp

// uint32 room_id = 1;
inline void TpaQueryAIActionResp::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAIActionResp::room_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionResp.room_id)
  return room_id_;
}
inline void TpaQueryAIActionResp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionResp.room_id)
}

// uint64 player_id = 2;
inline void TpaQueryAIActionResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TpaQueryAIActionResp::player_id() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionResp.player_id)
  return player_id_;
}
inline void TpaQueryAIActionResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionResp.player_id)
}

// uint32 action_type = 3;
inline void TpaQueryAIActionResp::clear_action_type() {
  action_type_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAIActionResp::action_type() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionResp.action_type)
  return action_type_;
}
inline void TpaQueryAIActionResp::set_action_type(::google::protobuf::uint32 value) {
  
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionResp.action_type)
}

// uint32 size = 4;
inline void TpaQueryAIActionResp::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 TpaQueryAIActionResp::size() const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionResp.size)
  return size_;
}
inline void TpaQueryAIActionResp::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionResp.size)
}

// repeated uint32 allow_raise = 5;
inline int TpaQueryAIActionResp::allow_raise_size() const {
  return allow_raise_.size();
}
inline void TpaQueryAIActionResp::clear_allow_raise() {
  allow_raise_.Clear();
}
inline ::google::protobuf::uint32 TpaQueryAIActionResp::allow_raise(int index) const {
  // @@protoc_insertion_point(field_get:Pb.TpaQueryAIActionResp.allow_raise)
  return allow_raise_.Get(index);
}
inline void TpaQueryAIActionResp::set_allow_raise(int index, ::google::protobuf::uint32 value) {
  allow_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pb.TpaQueryAIActionResp.allow_raise)
}
inline void TpaQueryAIActionResp::add_allow_raise(::google::protobuf::uint32 value) {
  allow_raise_.Add(value);
  // @@protoc_insertion_point(field_add:Pb.TpaQueryAIActionResp.allow_raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TpaQueryAIActionResp::allow_raise() const {
  // @@protoc_insertion_point(field_list:Pb.TpaQueryAIActionResp.allow_raise)
  return allow_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TpaQueryAIActionResp::mutable_allow_raise() {
  // @@protoc_insertion_point(field_mutable_list:Pb.TpaQueryAIActionResp.allow_raise)
  return &allow_raise_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pb::TPA_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pb::TPA_CMD>() {
  return ::Pb::TPA_CMD_descriptor();
}
template <> struct is_proto_enum< ::Pb::TPA_ERRCODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pb::TPA_ERRCODE>() {
  return ::Pb::TPA_ERRCODE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tpa_2eproto__INCLUDED
