// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: third.proto

#include "third.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Pb {
class ThirdLoginAiSvrReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdLoginAiSvrReq>
      _instance;
} _ThirdLoginAiSvrReq_default_instance_;
class ThirdLoginAiSvrRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdLoginAiSvrRsp>
      _instance;
} _ThirdLoginAiSvrRsp_default_instance_;
class ThirdKeepAliveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdKeepAliveReq>
      _instance;
} _ThirdKeepAliveReq_default_instance_;
class ThirdKeepAliveRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdKeepAliveRsp>
      _instance;
} _ThirdKeepAliveRsp_default_instance_;
class ThirdRobotActionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdRobotActionReq>
      _instance;
} _ThirdRobotActionReq_default_instance_;
class ThirdRobotActionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdRobotActionRsp>
      _instance;
} _ThirdRobotActionRsp_default_instance_;
class ThirdGameBeginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameBeginNotify>
      _instance;
} _ThirdGameBeginNotify_default_instance_;
class ThirdGameBankerNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameBankerNotify>
      _instance;
} _ThirdGameBankerNotify_default_instance_;
class ThirdGameSendCardsNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameSendCardsNotify>
      _instance;
} _ThirdGameSendCardsNotify_default_instance_;
class ThirdGameTokenToNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameTokenToNotify>
      _instance;
} _ThirdGameTokenToNotify_default_instance_;
class ThirdGameActionNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameActionNotify>
      _instance;
} _ThirdGameActionNotify_default_instance_;
class ThirdGameEndNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameEndNotify>
      _instance;
} _ThirdGameEndNotify_default_instance_;
class ThirdGameQueryStateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameQueryStateReq>
      _instance;
} _ThirdGameQueryStateReq_default_instance_;
class ThirdGameQueryStateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameQueryStateRsp>
      _instance;
} _ThirdGameQueryStateRsp_default_instance_;
class ThirdGameStatDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameStatDataReq>
      _instance;
} _ThirdGameStatDataReq_default_instance_;
class ThirdGameStatDataRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThirdGameStatDataRsp>
      _instance;
} _ThirdGameStatDataRsp_default_instance_;
}  // namespace Pb
namespace protobuf_third_2eproto {
void InitDefaultsThirdLoginAiSvrReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdLoginAiSvrReq_default_instance_;
    new (ptr) ::Pb::ThirdLoginAiSvrReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdLoginAiSvrReq::InitAsDefaultInstance();
}

void InitDefaultsThirdLoginAiSvrReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdLoginAiSvrReqImpl);
}

void InitDefaultsThirdLoginAiSvrRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdLoginAiSvrRsp_default_instance_;
    new (ptr) ::Pb::ThirdLoginAiSvrRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdLoginAiSvrRsp::InitAsDefaultInstance();
}

void InitDefaultsThirdLoginAiSvrRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdLoginAiSvrRspImpl);
}

void InitDefaultsThirdKeepAliveReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdKeepAliveReq_default_instance_;
    new (ptr) ::Pb::ThirdKeepAliveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdKeepAliveReq::InitAsDefaultInstance();
}

void InitDefaultsThirdKeepAliveReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdKeepAliveReqImpl);
}

void InitDefaultsThirdKeepAliveRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdKeepAliveRsp_default_instance_;
    new (ptr) ::Pb::ThirdKeepAliveRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdKeepAliveRsp::InitAsDefaultInstance();
}

void InitDefaultsThirdKeepAliveRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdKeepAliveRspImpl);
}

void InitDefaultsThirdRobotActionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdRobotActionReq_default_instance_;
    new (ptr) ::Pb::ThirdRobotActionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdRobotActionReq::InitAsDefaultInstance();
}

void InitDefaultsThirdRobotActionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdRobotActionReqImpl);
}

void InitDefaultsThirdRobotActionRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdRobotActionRsp_default_instance_;
    new (ptr) ::Pb::ThirdRobotActionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdRobotActionRsp::InitAsDefaultInstance();
}

void InitDefaultsThirdRobotActionRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdRobotActionRspImpl);
}

void InitDefaultsThirdGameBeginNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameBeginNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameBeginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameBeginNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameBeginNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameBeginNotifyImpl);
}

void InitDefaultsThirdGameBankerNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameBankerNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameBankerNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameBankerNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameBankerNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameBankerNotifyImpl);
}

void InitDefaultsThirdGameSendCardsNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameSendCardsNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameSendCardsNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameSendCardsNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameSendCardsNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameSendCardsNotifyImpl);
}

void InitDefaultsThirdGameTokenToNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameTokenToNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameTokenToNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameTokenToNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameTokenToNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameTokenToNotifyImpl);
}

void InitDefaultsThirdGameActionNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameActionNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameActionNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameActionNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameActionNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameActionNotifyImpl);
}

void InitDefaultsThirdGameEndNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameEndNotify_default_instance_;
    new (ptr) ::Pb::ThirdGameEndNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameEndNotify::InitAsDefaultInstance();
}

void InitDefaultsThirdGameEndNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameEndNotifyImpl);
}

void InitDefaultsThirdGameQueryStateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameQueryStateReq_default_instance_;
    new (ptr) ::Pb::ThirdGameQueryStateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameQueryStateReq::InitAsDefaultInstance();
}

void InitDefaultsThirdGameQueryStateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameQueryStateReqImpl);
}

void InitDefaultsThirdGameQueryStateRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameQueryStateRsp_default_instance_;
    new (ptr) ::Pb::ThirdGameQueryStateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameQueryStateRsp::InitAsDefaultInstance();
}

void InitDefaultsThirdGameQueryStateRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameQueryStateRspImpl);
}

void InitDefaultsThirdGameStatDataReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameStatDataReq_default_instance_;
    new (ptr) ::Pb::ThirdGameStatDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameStatDataReq::InitAsDefaultInstance();
}

void InitDefaultsThirdGameStatDataReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameStatDataReqImpl);
}

void InitDefaultsThirdGameStatDataRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_ThirdGameStatDataRsp_default_instance_;
    new (ptr) ::Pb::ThirdGameStatDataRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::ThirdGameStatDataRsp::InitAsDefaultInstance();
}

void InitDefaultsThirdGameStatDataRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsThirdGameStatDataRspImpl);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdLoginAiSvrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdLoginAiSvrReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdLoginAiSvrRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdLoginAiSvrRsp, resultcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdKeepAliveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdKeepAliveReq, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdKeepAliveRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdKeepAliveRsp, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionReq, round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionRsp, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionRsp, betnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdRobotActionRsp, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, hand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, player_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, bankerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBeginNotify, ai_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBankerNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBankerNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameBankerNotify, bankerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameSendCardsNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameSendCardsNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameSendCardsNotify, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameSendCardsNotify, robot_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameSendCardsNotify, board_cards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameTokenToNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameTokenToNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameTokenToNotify, robot_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameActionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameActionNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameActionNotify, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameActionNotify, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameActionNotify, betnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, hand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, robotresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, player_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameEndNotify, board_cards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateRsp, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateRsp, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateRsp, next_turn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameQueryStateRsp, allow_raise_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataReq, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataReq, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, resultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, vpip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, pfr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, showdown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, win_showdown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, three_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, vpip_bb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, vpip_btn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, fold_to_three_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, fold_to_four_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, four_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, call_five_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, fold_to_five_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, limp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, limp_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_check_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_fold_to_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_call_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_cbet_reraise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_double_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_tripple_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_fold_to_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_fold_to_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_fold_to_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_call_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_call_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_check_call_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_raise_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_check_raise_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_miss_cbet_bet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_miss_cbet_bet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_donk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_call_fold_to_double_barrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, single_call_call_fold_to_tripple_barrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_check_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_fold_to_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_call_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_cbet_reraise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_double_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_tripple_barreling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_fold_to_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_fold_to_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_fold_to_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_call_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_call_cbet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_check_call_cbet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_raise_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_check_raise_cbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_miss_cbet_bet_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_miss_cbet_bet_oop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_donk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_call_fold_to_double_barrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, tbet_call_call_fold_to_tripple_barrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_turn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_turn_over_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_turn_standard_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_turn_half_pot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_turn_small_pot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_turn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_turn_bluff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_turn_bluff_toppair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_over_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_standard_bet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_half_pot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_small_pot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_bluff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, bet_river_bluff_toppair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_river_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_river_bluff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, raise_river_bluff_toppair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, call_down_river_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, err_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::ThirdGameStatDataRsp, win_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pb::ThirdLoginAiSvrReq)},
  { 6, -1, sizeof(::Pb::ThirdLoginAiSvrRsp)},
  { 12, -1, sizeof(::Pb::ThirdKeepAliveReq)},
  { 18, -1, sizeof(::Pb::ThirdKeepAliveRsp)},
  { 24, -1, sizeof(::Pb::ThirdRobotActionReq)},
  { 31, -1, sizeof(::Pb::ThirdRobotActionRsp)},
  { 40, -1, sizeof(::Pb::ThirdGameBeginNotify)},
  { 51, -1, sizeof(::Pb::ThirdGameBankerNotify)},
  { 58, -1, sizeof(::Pb::ThirdGameSendCardsNotify)},
  { 67, -1, sizeof(::Pb::ThirdGameTokenToNotify)},
  { 74, -1, sizeof(::Pb::ThirdGameActionNotify)},
  { 83, -1, sizeof(::Pb::ThirdGameEndNotify)},
  { 93, -1, sizeof(::Pb::ThirdGameQueryStateReq)},
  { 99, -1, sizeof(::Pb::ThirdGameQueryStateRsp)},
  { 108, -1, sizeof(::Pb::ThirdGameStatDataReq)},
  { 116, -1, sizeof(::Pb::ThirdGameStatDataRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdLoginAiSvrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdLoginAiSvrRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdKeepAliveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdKeepAliveRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdRobotActionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdRobotActionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameBeginNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameBankerNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameSendCardsNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameTokenToNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameActionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameQueryStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameQueryStateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameStatDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_ThirdGameStatDataRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "third.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013third.proto\022\002Pb\"#\n\022ThirdLoginAiSvrReq\022"
      "\r\n\005token\030\001 \001(\t\"(\n\022ThirdLoginAiSvrRsp\022\022\n\n"
      "resultCode\030\001 \001(\005\"&\n\021ThirdKeepAliveReq\022\021\n"
      "\ttimestamp\030\001 \001(\005\"&\n\021ThirdKeepAliveRsp\022\021\n"
      "\ttimestamp\030\001 \001(\005\"4\n\023ThirdRobotActionReq\022"
      "\016\n\006roomid\030\001 \001(\t\022\r\n\005round\030\002 \001(\r\"^\n\023ThirdR"
      "obotActionRsp\022\022\n\nresultCode\030\001 \001(\005\022\022\n\nact"
      "ionType\030\002 \001(\005\022\016\n\006betNum\030\003 \001(\003\022\017\n\007err_msg"
      "\030\004 \001(\t\"\200\001\n\024ThirdGameBeginNotify\022\016\n\006roomi"
      "d\030\001 \001(\t\022\014\n\004hand\030\002 \001(\r\022\021\n\tplayer_id\030\003 \001(\003"
      "\022\024\n\014player_score\030\004 \001(\005\022\020\n\010bankerid\030\005 \001(\003"
      "\022\017\n\007ai_mode\030\006 \001(\005\"9\n\025ThirdGameBankerNoti"
      "fy\022\016\n\006roomid\030\001 \001(\t\022\020\n\010bankerid\030\002 \001(\003\"c\n\030"
      "ThirdGameSendCardsNotify\022\016\n\006roomid\030\001 \001(\t"
      "\022\r\n\005round\030\002 \001(\r\022\023\n\013robot_cards\030\003 \003(\005\022\023\n\013"
      "board_cards\030\004 \003(\005\":\n\026ThirdGameTokenToNot"
      "ify\022\016\n\006roomid\030\001 \001(\t\022\020\n\010robot_id\030\002 \001(\003\"^\n"
      "\025ThirdGameActionNotify\022\016\n\006roomid\030\001 \001(\t\022\021"
      "\n\tplayer_id\030\002 \001(\003\022\022\n\nactionType\030\003 \001(\005\022\016\n"
      "\006betNum\030\004 \001(\005\"r\n\022ThirdGameEndNotify\022\016\n\006r"
      "oomid\030\001 \001(\t\022\014\n\004hand\030\002 \001(\r\022\023\n\013robotResult"
      "\030\003 \001(\005\022\024\n\014player_cards\030\004 \003(\005\022\023\n\013board_ca"
      "rds\030\005 \003(\005\"(\n\026ThirdGameQueryStateReq\022\016\n\006r"
      "oomid\030\001 \001(\t\"d\n\026ThirdGameQueryStateRsp\022\020\n"
      "\010finished\030\001 \001(\005\022\r\n\005round\030\002 \001(\005\022\024\n\014next_t"
      "urn_id\030\003 \001(\003\022\023\n\013allow_raise\030\004 \003(\005\"\?\n\024Thi"
      "rdGameStatDataReq\022\013\n\003uid\030\001 \001(\003\022\r\n\005start\030"
      "\002 \001(\t\022\013\n\003end\030\003 \001(\t\"\374\021\n\024ThirdGameStatData"
      "Rsp\022\022\n\nresultCode\030\001 \001(\005\022\013\n\003uid\030\002 \001(\003\022\014\n\004"
      "vpip\030\003 \001(\r\022\013\n\003pfr\030\004 \001(\r\022\020\n\010showdown\030\005 \001("
      "\r\022\014\n\004cbet\030\006 \001(\r\022\024\n\014win_showdown\030\007 \001(\r\022\021\n"
      "\tthree_bet\030\010 \001(\r\022\017\n\007vpip_bb\030\t \001(\r\022\020\n\010vpi"
      "p_btn\030\n \001(\r\022\031\n\021fold_to_three_bet\030\013 \001(\r\022\030"
      "\n\020fold_to_four_bet\030\014 \001(\r\022\020\n\010four_bet\030\r \001"
      "(\r\022\025\n\rcall_five_bet\030\016 \001(\r\022\030\n\020fold_to_fiv"
      "e_bet\030\017 \001(\r\022\014\n\004limp\030\020 \001(\r\022\022\n\nlimp_raise\030"
      "\021 \001(\r\022\023\n\013single_cbet\030\022 \001(\r\022\026\n\016single_cbe"
      "t_ip\030\023 \001(\r\022\027\n\017single_cbet_oop\030\024 \001(\r\022\037\n\027s"
      "ingle_cbet_check_raise\030\025 \001(\r\022!\n\031single_c"
      "bet_fold_to_raise\030\026 \001(\r\022\036\n\026single_cbet_c"
      "all_raise\030\027 \001(\r\022\033\n\023single_cbet_reraise\030\030"
      " \001(\r\022\030\n\020single_barreling\030\031 \001(\r\022\037\n\027single"
      "_double_barreling\030\032 \001(\r\022 \n\030single_trippl"
      "e_barreling\030\033 \001(\r\022\033\n\023single_fold_to_cbet"
      "\030\034 \001(\r\022\036\n\026single_fold_to_cbet_ip\030\035 \001(\r\022\037"
      "\n\027single_fold_to_cbet_oop\030\036 \001(\r\022\030\n\020singl"
      "e_call_cbet\030\037 \001(\r\022\033\n\023single_call_cbet_ip"
      "\030  \001(\r\022\"\n\032single_check_call_cbet_oop\030! \001"
      "(\r\022\031\n\021single_raise_cbet\030\" \001(\r\022\037\n\027single_"
      "check_raise_cbet\030# \001(\r\022\037\n\027single_miss_cb"
      "et_bet_ip\030$ \001(\r\022 \n\030single_miss_cbet_bet_"
      "oop\030% \001(\r\022\023\n\013single_donk\030& \001(\r\022)\n!single"
      "_call_fold_to_double_barrel\030\' \001(\r\022/\n\'sin"
      "gle_call_call_fold_to_tripple_barrel\030( \001"
      "(\r\022\021\n\ttbet_cbet\030) \001(\r\022\024\n\014tbet_cbet_ip\030* "
      "\001(\r\022\025\n\rtbet_cbet_oop\030+ \001(\r\022\035\n\025tbet_cbet_"
      "check_raise\030, \001(\r\022\037\n\027tbet_cbet_fold_to_r"
      "aise\030- \001(\r\022\034\n\024tbet_cbet_call_raise\030. \001(\r"
      "\022\031\n\021tbet_cbet_reraise\030/ \001(\r\022\026\n\016tbet_barr"
      "eling\0300 \001(\r\022\035\n\025tbet_double_barreling\0301 \001"
      "(\r\022\036\n\026tbet_tripple_barreling\0302 \001(\r\022\031\n\021tb"
      "et_fold_to_cbet\0303 \001(\r\022\034\n\024tbet_fold_to_cb"
      "et_ip\0304 \001(\r\022\035\n\025tbet_fold_to_cbet_oop\0305 \001"
      "(\r\022\026\n\016tbet_call_cbet\0306 \001(\r\022\031\n\021tbet_call_"
      "cbet_ip\0307 \001(\r\022 \n\030tbet_check_call_cbet_oo"
      "p\0308 \001(\r\022\027\n\017tbet_raise_cbet\0309 \001(\r\022\035\n\025tbet"
      "_check_raise_cbet\030: \001(\r\022\035\n\025tbet_miss_cbe"
      "t_bet_ip\030; \001(\r\022\036\n\026tbet_miss_cbet_bet_oop"
      "\030< \001(\r\022\021\n\ttbet_donk\030= \001(\r\022\'\n\037tbet_call_f"
      "old_to_double_barrel\030> \001(\r\022-\n%tbet_call_"
      "call_fold_to_tripple_barrel\030\? \001(\r\022\020\n\010bet"
      "_turn\030@ \001(\r\022\031\n\021bet_turn_over_bet\030A \001(\r\022\035"
      "\n\025bet_turn_standard_bet\030B \001(\r\022\031\n\021bet_tur"
      "n_half_pot\030C \001(\r\022\032\n\022bet_turn_small_pot\030D"
      " \001(\r\022\022\n\nraise_turn\030E \001(\r\022\030\n\020raise_turn_b"
      "luff\030F \001(\r\022 \n\030raise_turn_bluff_toppair\030G"
      " \001(\r\022\021\n\tbet_river\030H \001(\r\022\032\n\022bet_river_ove"
      "r_bet\030I \001(\r\022\036\n\026bet_river_standard_bet\030J "
      "\001(\r\022\032\n\022bet_river_half_pot\030K \001(\r\022\033\n\023bet_r"
      "iver_small_pot\030L \001(\r\022\027\n\017bet_river_value\030"
      "M \001(\r\022\027\n\017bet_river_bluff\030N \001(\r\022\037\n\027bet_ri"
      "ver_bluff_toppair\030O \001(\r\022\023\n\013raise_river\030P"
      " \001(\r\022\031\n\021raise_river_bluff\030Q \001(\r\022!\n\031raise"
      "_river_bluff_toppair\030R \001(\r\022\027\n\017call_down_"
      "river\030S \001(\r\022\017\n\007err_msg\030T \001(\t\022\013\n\003win\030U \001("
      "\r*\337\004\n\tTHIRD_CMD\022\030\n\024THIRD_CMD_NOT_DEFINE\020"
      "\000\022\036\n\031THIRD_CMD_LOGIN_AISVR_REQ\020\251F\022\036\n\031THI"
      "RD_CMD_LOGIN_AISVR_RSP\020\252F\022\034\n\027THIRD_CMD_K"
      "EEPALIVE_REQ\020\253F\022\034\n\027THIRD_CMD_KEEPALIVE_R"
      "SP\020\254F\022\037\n\032THIRD_CMD_ROBOT_ACTION_REQ\020\255F\022\037"
      "\n\032THIRD_CMD_ROBOT_ACTION_RSP\020\256F\022 \n\033THIRD"
      "_CMD_GAME_BEGIN_NOTIFY\020\257F\022!\n\034THIRD_CMD_G"
      "AME_BANKER_NOTIFY\020\260F\022#\n\036THIRD_CMD_GAME_S"
      "ENDCARD_NOTIFY\020\261F\022\"\n\035THIRD_CMD_GAME_TOKE"
      "NTO_NOTIFY\020\262F\022!\n\034THIRD_CMD_GAME_ACTION_N"
      "OTIFY\020\263F\022!\n\034THIRD_CMD_GAME_RESULT_NOTIFY"
      "\020\264F\022 \n\033THIRD_CMD_GAME_STATDATA_REQ\020\265F\022 \n"
      "\033THIRD_CMD_GAME_STATDATA_RSP\020\266F\022#\n\036THIRD"
      "_CMD_GAME_QUERY_STATE_REQ\020\212G\022#\n\036THIRD_CM"
      "D_GAME_QUERY_STATE_RSP\020\213G\022\030\n\023THIRD_CMD_M"
      "AX_VALUE\020\217N*+\n\tTHIRD_ERR\022\016\n\nTHIRD_SUCC\020\000"
      "\022\016\n\nTHIRD_FAIL\020\001B\003\200\001\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4069);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "third.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_third_2eproto
namespace Pb {
const ::google::protobuf::EnumDescriptor* THIRD_CMD_descriptor() {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_third_2eproto::file_level_enum_descriptors[0];
}
bool THIRD_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 9001:
    case 9002:
    case 9003:
    case 9004:
    case 9005:
    case 9006:
    case 9007:
    case 9008:
    case 9009:
    case 9010:
    case 9011:
    case 9012:
    case 9013:
    case 9014:
    case 9098:
    case 9099:
    case 9999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* THIRD_ERR_descriptor() {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_third_2eproto::file_level_enum_descriptors[1];
}
bool THIRD_ERR_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ThirdLoginAiSvrReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdLoginAiSvrReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdLoginAiSvrReq::ThirdLoginAiSvrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdLoginAiSvrReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdLoginAiSvrReq)
}
ThirdLoginAiSvrReq::ThirdLoginAiSvrReq(const ThirdLoginAiSvrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdLoginAiSvrReq)
}

void ThirdLoginAiSvrReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ThirdLoginAiSvrReq::~ThirdLoginAiSvrReq() {
  // @@protoc_insertion_point(destructor:Pb.ThirdLoginAiSvrReq)
  SharedDtor();
}

void ThirdLoginAiSvrReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdLoginAiSvrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdLoginAiSvrReq::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdLoginAiSvrReq& ThirdLoginAiSvrReq::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdLoginAiSvrReq();
  return *internal_default_instance();
}

ThirdLoginAiSvrReq* ThirdLoginAiSvrReq::New(::google::protobuf::Arena* arena) const {
  ThirdLoginAiSvrReq* n = new ThirdLoginAiSvrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdLoginAiSvrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdLoginAiSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ThirdLoginAiSvrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdLoginAiSvrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdLoginAiSvrReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdLoginAiSvrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdLoginAiSvrReq)
  return false;
#undef DO_
}

void ThirdLoginAiSvrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdLoginAiSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdLoginAiSvrReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdLoginAiSvrReq)
}

::google::protobuf::uint8* ThirdLoginAiSvrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdLoginAiSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdLoginAiSvrReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdLoginAiSvrReq)
  return target;
}

size_t ThirdLoginAiSvrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdLoginAiSvrReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdLoginAiSvrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdLoginAiSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdLoginAiSvrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdLoginAiSvrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdLoginAiSvrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdLoginAiSvrReq)
    MergeFrom(*source);
  }
}

void ThirdLoginAiSvrReq::MergeFrom(const ThirdLoginAiSvrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdLoginAiSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ThirdLoginAiSvrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdLoginAiSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdLoginAiSvrReq::CopyFrom(const ThirdLoginAiSvrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdLoginAiSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdLoginAiSvrReq::IsInitialized() const {
  return true;
}

void ThirdLoginAiSvrReq::Swap(ThirdLoginAiSvrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdLoginAiSvrReq::InternalSwap(ThirdLoginAiSvrReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdLoginAiSvrReq::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdLoginAiSvrRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdLoginAiSvrRsp::kResultCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdLoginAiSvrRsp::ThirdLoginAiSvrRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdLoginAiSvrRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdLoginAiSvrRsp)
}
ThirdLoginAiSvrRsp::ThirdLoginAiSvrRsp(const ThirdLoginAiSvrRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resultcode_ = from.resultcode_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdLoginAiSvrRsp)
}

void ThirdLoginAiSvrRsp::SharedCtor() {
  resultcode_ = 0;
  _cached_size_ = 0;
}

ThirdLoginAiSvrRsp::~ThirdLoginAiSvrRsp() {
  // @@protoc_insertion_point(destructor:Pb.ThirdLoginAiSvrRsp)
  SharedDtor();
}

void ThirdLoginAiSvrRsp::SharedDtor() {
}

void ThirdLoginAiSvrRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdLoginAiSvrRsp::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdLoginAiSvrRsp& ThirdLoginAiSvrRsp::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdLoginAiSvrRsp();
  return *internal_default_instance();
}

ThirdLoginAiSvrRsp* ThirdLoginAiSvrRsp::New(::google::protobuf::Arena* arena) const {
  ThirdLoginAiSvrRsp* n = new ThirdLoginAiSvrRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdLoginAiSvrRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdLoginAiSvrRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resultcode_ = 0;
  _internal_metadata_.Clear();
}

bool ThirdLoginAiSvrRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdLoginAiSvrRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 resultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdLoginAiSvrRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdLoginAiSvrRsp)
  return false;
#undef DO_
}

void ThirdLoginAiSvrRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdLoginAiSvrRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdLoginAiSvrRsp)
}

::google::protobuf::uint8* ThirdLoginAiSvrRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdLoginAiSvrRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdLoginAiSvrRsp)
  return target;
}

size_t ThirdLoginAiSvrRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdLoginAiSvrRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdLoginAiSvrRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdLoginAiSvrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdLoginAiSvrRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdLoginAiSvrRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdLoginAiSvrRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdLoginAiSvrRsp)
    MergeFrom(*source);
  }
}

void ThirdLoginAiSvrRsp::MergeFrom(const ThirdLoginAiSvrRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdLoginAiSvrRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
}

void ThirdLoginAiSvrRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdLoginAiSvrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdLoginAiSvrRsp::CopyFrom(const ThirdLoginAiSvrRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdLoginAiSvrRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdLoginAiSvrRsp::IsInitialized() const {
  return true;
}

void ThirdLoginAiSvrRsp::Swap(ThirdLoginAiSvrRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdLoginAiSvrRsp::InternalSwap(ThirdLoginAiSvrRsp* other) {
  using std::swap;
  swap(resultcode_, other->resultcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdLoginAiSvrRsp::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdKeepAliveReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdKeepAliveReq::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdKeepAliveReq::ThirdKeepAliveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdKeepAliveReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdKeepAliveReq)
}
ThirdKeepAliveReq::ThirdKeepAliveReq(const ThirdKeepAliveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdKeepAliveReq)
}

void ThirdKeepAliveReq::SharedCtor() {
  timestamp_ = 0;
  _cached_size_ = 0;
}

ThirdKeepAliveReq::~ThirdKeepAliveReq() {
  // @@protoc_insertion_point(destructor:Pb.ThirdKeepAliveReq)
  SharedDtor();
}

void ThirdKeepAliveReq::SharedDtor() {
}

void ThirdKeepAliveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdKeepAliveReq::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdKeepAliveReq& ThirdKeepAliveReq::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdKeepAliveReq();
  return *internal_default_instance();
}

ThirdKeepAliveReq* ThirdKeepAliveReq::New(::google::protobuf::Arena* arena) const {
  ThirdKeepAliveReq* n = new ThirdKeepAliveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdKeepAliveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool ThirdKeepAliveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdKeepAliveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdKeepAliveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdKeepAliveReq)
  return false;
#undef DO_
}

void ThirdKeepAliveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdKeepAliveReq)
}

::google::protobuf::uint8* ThirdKeepAliveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdKeepAliveReq)
  return target;
}

size_t ThirdKeepAliveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdKeepAliveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdKeepAliveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdKeepAliveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdKeepAliveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdKeepAliveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdKeepAliveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdKeepAliveReq)
    MergeFrom(*source);
  }
}

void ThirdKeepAliveReq::MergeFrom(const ThirdKeepAliveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdKeepAliveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ThirdKeepAliveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdKeepAliveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdKeepAliveReq::CopyFrom(const ThirdKeepAliveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdKeepAliveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdKeepAliveReq::IsInitialized() const {
  return true;
}

void ThirdKeepAliveReq::Swap(ThirdKeepAliveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdKeepAliveReq::InternalSwap(ThirdKeepAliveReq* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdKeepAliveReq::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdKeepAliveRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdKeepAliveRsp::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdKeepAliveRsp::ThirdKeepAliveRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdKeepAliveRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdKeepAliveRsp)
}
ThirdKeepAliveRsp::ThirdKeepAliveRsp(const ThirdKeepAliveRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdKeepAliveRsp)
}

void ThirdKeepAliveRsp::SharedCtor() {
  timestamp_ = 0;
  _cached_size_ = 0;
}

ThirdKeepAliveRsp::~ThirdKeepAliveRsp() {
  // @@protoc_insertion_point(destructor:Pb.ThirdKeepAliveRsp)
  SharedDtor();
}

void ThirdKeepAliveRsp::SharedDtor() {
}

void ThirdKeepAliveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdKeepAliveRsp::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdKeepAliveRsp& ThirdKeepAliveRsp::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdKeepAliveRsp();
  return *internal_default_instance();
}

ThirdKeepAliveRsp* ThirdKeepAliveRsp::New(::google::protobuf::Arena* arena) const {
  ThirdKeepAliveRsp* n = new ThirdKeepAliveRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdKeepAliveRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdKeepAliveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool ThirdKeepAliveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdKeepAliveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdKeepAliveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdKeepAliveRsp)
  return false;
#undef DO_
}

void ThirdKeepAliveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdKeepAliveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdKeepAliveRsp)
}

::google::protobuf::uint8* ThirdKeepAliveRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdKeepAliveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdKeepAliveRsp)
  return target;
}

size_t ThirdKeepAliveRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdKeepAliveRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdKeepAliveRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdKeepAliveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdKeepAliveRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdKeepAliveRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdKeepAliveRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdKeepAliveRsp)
    MergeFrom(*source);
  }
}

void ThirdKeepAliveRsp::MergeFrom(const ThirdKeepAliveRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdKeepAliveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ThirdKeepAliveRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdKeepAliveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdKeepAliveRsp::CopyFrom(const ThirdKeepAliveRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdKeepAliveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdKeepAliveRsp::IsInitialized() const {
  return true;
}

void ThirdKeepAliveRsp::Swap(ThirdKeepAliveRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdKeepAliveRsp::InternalSwap(ThirdKeepAliveRsp* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdKeepAliveRsp::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdRobotActionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdRobotActionReq::kRoomidFieldNumber;
const int ThirdRobotActionReq::kRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdRobotActionReq::ThirdRobotActionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdRobotActionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdRobotActionReq)
}
ThirdRobotActionReq::ThirdRobotActionReq(const ThirdRobotActionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  round_ = from.round_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdRobotActionReq)
}

void ThirdRobotActionReq::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_ = 0u;
  _cached_size_ = 0;
}

ThirdRobotActionReq::~ThirdRobotActionReq() {
  // @@protoc_insertion_point(destructor:Pb.ThirdRobotActionReq)
  SharedDtor();
}

void ThirdRobotActionReq::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdRobotActionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdRobotActionReq::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdRobotActionReq& ThirdRobotActionReq::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdRobotActionReq();
  return *internal_default_instance();
}

ThirdRobotActionReq* ThirdRobotActionReq::New(::google::protobuf::Arena* arena) const {
  ThirdRobotActionReq* n = new ThirdRobotActionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdRobotActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdRobotActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_ = 0u;
  _internal_metadata_.Clear();
}

bool ThirdRobotActionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdRobotActionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdRobotActionReq.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdRobotActionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdRobotActionReq)
  return false;
#undef DO_
}

void ThirdRobotActionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdRobotActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdRobotActionReq.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->round(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdRobotActionReq)
}

::google::protobuf::uint8* ThirdRobotActionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdRobotActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdRobotActionReq.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->round(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdRobotActionReq)
  return target;
}

size_t ThirdRobotActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdRobotActionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdRobotActionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdRobotActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdRobotActionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdRobotActionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdRobotActionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdRobotActionReq)
    MergeFrom(*source);
  }
}

void ThirdRobotActionReq::MergeFrom(const ThirdRobotActionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdRobotActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void ThirdRobotActionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdRobotActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdRobotActionReq::CopyFrom(const ThirdRobotActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdRobotActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdRobotActionReq::IsInitialized() const {
  return true;
}

void ThirdRobotActionReq::Swap(ThirdRobotActionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdRobotActionReq::InternalSwap(ThirdRobotActionReq* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(round_, other->round_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdRobotActionReq::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdRobotActionRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdRobotActionRsp::kResultCodeFieldNumber;
const int ThirdRobotActionRsp::kActionTypeFieldNumber;
const int ThirdRobotActionRsp::kBetNumFieldNumber;
const int ThirdRobotActionRsp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdRobotActionRsp::ThirdRobotActionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdRobotActionRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdRobotActionRsp)
}
ThirdRobotActionRsp::ThirdRobotActionRsp(const ThirdRobotActionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ::memcpy(&resultcode_, &from.resultcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&betnum_) -
    reinterpret_cast<char*>(&resultcode_)) + sizeof(betnum_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdRobotActionRsp)
}

void ThirdRobotActionRsp::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&betnum_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(betnum_));
  _cached_size_ = 0;
}

ThirdRobotActionRsp::~ThirdRobotActionRsp() {
  // @@protoc_insertion_point(destructor:Pb.ThirdRobotActionRsp)
  SharedDtor();
}

void ThirdRobotActionRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdRobotActionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdRobotActionRsp::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdRobotActionRsp& ThirdRobotActionRsp::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdRobotActionRsp();
  return *internal_default_instance();
}

ThirdRobotActionRsp* ThirdRobotActionRsp::New(::google::protobuf::Arena* arena) const {
  ThirdRobotActionRsp* n = new ThirdRobotActionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdRobotActionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdRobotActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resultcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&betnum_) -
      reinterpret_cast<char*>(&resultcode_)) + sizeof(betnum_));
  _internal_metadata_.Clear();
}

bool ThirdRobotActionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdRobotActionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 resultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 betNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &betnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err_msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err_msg().data(), static_cast<int>(this->err_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdRobotActionRsp.err_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdRobotActionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdRobotActionRsp)
  return false;
#undef DO_
}

void ThirdRobotActionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdRobotActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // int32 actionType = 2;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actiontype(), output);
  }

  // int64 betNum = 3;
  if (this->betnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->betnum(), output);
  }

  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdRobotActionRsp.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdRobotActionRsp)
}

::google::protobuf::uint8* ThirdRobotActionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdRobotActionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // int32 actionType = 2;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actiontype(), target);
  }

  // int64 betNum = 3;
  if (this->betnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->betnum(), target);
  }

  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdRobotActionRsp.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdRobotActionRsp)
  return target;
}

size_t ThirdRobotActionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdRobotActionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // int32 actionType = 2;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int64 betNum = 3;
  if (this->betnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->betnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdRobotActionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdRobotActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdRobotActionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdRobotActionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdRobotActionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdRobotActionRsp)
    MergeFrom(*source);
  }
}

void ThirdRobotActionRsp::MergeFrom(const ThirdRobotActionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdRobotActionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.betnum() != 0) {
    set_betnum(from.betnum());
  }
}

void ThirdRobotActionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdRobotActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdRobotActionRsp::CopyFrom(const ThirdRobotActionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdRobotActionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdRobotActionRsp::IsInitialized() const {
  return true;
}

void ThirdRobotActionRsp::Swap(ThirdRobotActionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdRobotActionRsp::InternalSwap(ThirdRobotActionRsp* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_);
  swap(resultcode_, other->resultcode_);
  swap(actiontype_, other->actiontype_);
  swap(betnum_, other->betnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdRobotActionRsp::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameBeginNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameBeginNotify::kRoomidFieldNumber;
const int ThirdGameBeginNotify::kHandFieldNumber;
const int ThirdGameBeginNotify::kPlayerIdFieldNumber;
const int ThirdGameBeginNotify::kPlayerScoreFieldNumber;
const int ThirdGameBeginNotify::kBankeridFieldNumber;
const int ThirdGameBeginNotify::kAiModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameBeginNotify::ThirdGameBeginNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameBeginNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameBeginNotify)
}
ThirdGameBeginNotify::ThirdGameBeginNotify(const ThirdGameBeginNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ai_mode_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(ai_mode_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameBeginNotify)
}

void ThirdGameBeginNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ai_mode_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(ai_mode_));
  _cached_size_ = 0;
}

ThirdGameBeginNotify::~ThirdGameBeginNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameBeginNotify)
  SharedDtor();
}

void ThirdGameBeginNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameBeginNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameBeginNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameBeginNotify& ThirdGameBeginNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameBeginNotify();
  return *internal_default_instance();
}

ThirdGameBeginNotify* ThirdGameBeginNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameBeginNotify* n = new ThirdGameBeginNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameBeginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ai_mode_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(ai_mode_));
  _internal_metadata_.Clear();
}

bool ThirdGameBeginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameBeginNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameBeginNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 player_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bankerid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bankerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ai_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameBeginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameBeginNotify)
  return false;
#undef DO_
}

void ThirdGameBeginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameBeginNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hand(), output);
  }

  // int64 player_id = 3;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_id(), output);
  }

  // int32 player_score = 4;
  if (this->player_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_score(), output);
  }

  // int64 bankerid = 5;
  if (this->bankerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->bankerid(), output);
  }

  // int32 ai_mode = 6;
  if (this->ai_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ai_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameBeginNotify)
}

::google::protobuf::uint8* ThirdGameBeginNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameBeginNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hand(), target);
  }

  // int64 player_id = 3;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_id(), target);
  }

  // int32 player_score = 4;
  if (this->player_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->player_score(), target);
  }

  // int64 bankerid = 5;
  if (this->bankerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->bankerid(), target);
  }

  // int32 ai_mode = 6;
  if (this->ai_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ai_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameBeginNotify)
  return target;
}

size_t ThirdGameBeginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameBeginNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // int64 player_id = 3;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->player_id());
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hand());
  }

  // int32 player_score = 4;
  if (this->player_score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_score());
  }

  // int64 bankerid = 5;
  if (this->bankerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bankerid());
  }

  // int32 ai_mode = 6;
  if (this->ai_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ai_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameBeginNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameBeginNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameBeginNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameBeginNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameBeginNotify)
    MergeFrom(*source);
  }
}

void ThirdGameBeginNotify::MergeFrom(const ThirdGameBeginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.hand() != 0) {
    set_hand(from.hand());
  }
  if (from.player_score() != 0) {
    set_player_score(from.player_score());
  }
  if (from.bankerid() != 0) {
    set_bankerid(from.bankerid());
  }
  if (from.ai_mode() != 0) {
    set_ai_mode(from.ai_mode());
  }
}

void ThirdGameBeginNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameBeginNotify::CopyFrom(const ThirdGameBeginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameBeginNotify::IsInitialized() const {
  return true;
}

void ThirdGameBeginNotify::Swap(ThirdGameBeginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameBeginNotify::InternalSwap(ThirdGameBeginNotify* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(player_id_, other->player_id_);
  swap(hand_, other->hand_);
  swap(player_score_, other->player_score_);
  swap(bankerid_, other->bankerid_);
  swap(ai_mode_, other->ai_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameBeginNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameBankerNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameBankerNotify::kRoomidFieldNumber;
const int ThirdGameBankerNotify::kBankeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameBankerNotify::ThirdGameBankerNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameBankerNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameBankerNotify)
}
ThirdGameBankerNotify::ThirdGameBankerNotify(const ThirdGameBankerNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  bankerid_ = from.bankerid_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameBankerNotify)
}

void ThirdGameBankerNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankerid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ThirdGameBankerNotify::~ThirdGameBankerNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameBankerNotify)
  SharedDtor();
}

void ThirdGameBankerNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameBankerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameBankerNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameBankerNotify& ThirdGameBankerNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameBankerNotify();
  return *internal_default_instance();
}

ThirdGameBankerNotify* ThirdGameBankerNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameBankerNotify* n = new ThirdGameBankerNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameBankerNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameBankerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankerid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ThirdGameBankerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameBankerNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameBankerNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bankerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bankerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameBankerNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameBankerNotify)
  return false;
#undef DO_
}

void ThirdGameBankerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameBankerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameBankerNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // int64 bankerid = 2;
  if (this->bankerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bankerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameBankerNotify)
}

::google::protobuf::uint8* ThirdGameBankerNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameBankerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameBankerNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // int64 bankerid = 2;
  if (this->bankerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bankerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameBankerNotify)
  return target;
}

size_t ThirdGameBankerNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameBankerNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // int64 bankerid = 2;
  if (this->bankerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bankerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameBankerNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameBankerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameBankerNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameBankerNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameBankerNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameBankerNotify)
    MergeFrom(*source);
  }
}

void ThirdGameBankerNotify::MergeFrom(const ThirdGameBankerNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameBankerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.bankerid() != 0) {
    set_bankerid(from.bankerid());
  }
}

void ThirdGameBankerNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameBankerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameBankerNotify::CopyFrom(const ThirdGameBankerNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameBankerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameBankerNotify::IsInitialized() const {
  return true;
}

void ThirdGameBankerNotify::Swap(ThirdGameBankerNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameBankerNotify::InternalSwap(ThirdGameBankerNotify* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(bankerid_, other->bankerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameBankerNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameSendCardsNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameSendCardsNotify::kRoomidFieldNumber;
const int ThirdGameSendCardsNotify::kRoundFieldNumber;
const int ThirdGameSendCardsNotify::kRobotCardsFieldNumber;
const int ThirdGameSendCardsNotify::kBoardCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameSendCardsNotify::ThirdGameSendCardsNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameSendCardsNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameSendCardsNotify)
}
ThirdGameSendCardsNotify::ThirdGameSendCardsNotify(const ThirdGameSendCardsNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      robot_cards_(from.robot_cards_),
      board_cards_(from.board_cards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  round_ = from.round_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameSendCardsNotify)
}

void ThirdGameSendCardsNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_ = 0u;
  _cached_size_ = 0;
}

ThirdGameSendCardsNotify::~ThirdGameSendCardsNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameSendCardsNotify)
  SharedDtor();
}

void ThirdGameSendCardsNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameSendCardsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameSendCardsNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameSendCardsNotify& ThirdGameSendCardsNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameSendCardsNotify();
  return *internal_default_instance();
}

ThirdGameSendCardsNotify* ThirdGameSendCardsNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameSendCardsNotify* n = new ThirdGameSendCardsNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameSendCardsNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameSendCardsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_cards_.Clear();
  board_cards_.Clear();
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_ = 0u;
  _internal_metadata_.Clear();
}

bool ThirdGameSendCardsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameSendCardsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameSendCardsNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 robot_cards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_robot_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_robot_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 board_cards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_board_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_board_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameSendCardsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameSendCardsNotify)
  return false;
#undef DO_
}

void ThirdGameSendCardsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameSendCardsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameSendCardsNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->round(), output);
  }

  // repeated int32 robot_cards = 3;
  if (this->robot_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _robot_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->robot_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->robot_cards(i), output);
  }

  // repeated int32 board_cards = 4;
  if (this->board_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _board_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->board_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->board_cards(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameSendCardsNotify)
}

::google::protobuf::uint8* ThirdGameSendCardsNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameSendCardsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameSendCardsNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->round(), target);
  }

  // repeated int32 robot_cards = 3;
  if (this->robot_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _robot_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->robot_cards_, target);
  }

  // repeated int32 board_cards = 4;
  if (this->board_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _board_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->board_cards_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameSendCardsNotify)
  return target;
}

size_t ThirdGameSendCardsNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameSendCardsNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 robot_cards = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->robot_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _robot_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 board_cards = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->board_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _board_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // uint32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameSendCardsNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameSendCardsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameSendCardsNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameSendCardsNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameSendCardsNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameSendCardsNotify)
    MergeFrom(*source);
  }
}

void ThirdGameSendCardsNotify::MergeFrom(const ThirdGameSendCardsNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameSendCardsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  robot_cards_.MergeFrom(from.robot_cards_);
  board_cards_.MergeFrom(from.board_cards_);
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void ThirdGameSendCardsNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameSendCardsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameSendCardsNotify::CopyFrom(const ThirdGameSendCardsNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameSendCardsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameSendCardsNotify::IsInitialized() const {
  return true;
}

void ThirdGameSendCardsNotify::Swap(ThirdGameSendCardsNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameSendCardsNotify::InternalSwap(ThirdGameSendCardsNotify* other) {
  using std::swap;
  robot_cards_.InternalSwap(&other->robot_cards_);
  board_cards_.InternalSwap(&other->board_cards_);
  roomid_.Swap(&other->roomid_);
  swap(round_, other->round_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameSendCardsNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameTokenToNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameTokenToNotify::kRoomidFieldNumber;
const int ThirdGameTokenToNotify::kRobotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameTokenToNotify::ThirdGameTokenToNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameTokenToNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameTokenToNotify)
}
ThirdGameTokenToNotify::ThirdGameTokenToNotify(const ThirdGameTokenToNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  robot_id_ = from.robot_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameTokenToNotify)
}

void ThirdGameTokenToNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ThirdGameTokenToNotify::~ThirdGameTokenToNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameTokenToNotify)
  SharedDtor();
}

void ThirdGameTokenToNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameTokenToNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameTokenToNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameTokenToNotify& ThirdGameTokenToNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameTokenToNotify();
  return *internal_default_instance();
}

ThirdGameTokenToNotify* ThirdGameTokenToNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameTokenToNotify* n = new ThirdGameTokenToNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameTokenToNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameTokenToNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ThirdGameTokenToNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameTokenToNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameTokenToNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 robot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &robot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameTokenToNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameTokenToNotify)
  return false;
#undef DO_
}

void ThirdGameTokenToNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameTokenToNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameTokenToNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // int64 robot_id = 2;
  if (this->robot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->robot_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameTokenToNotify)
}

::google::protobuf::uint8* ThirdGameTokenToNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameTokenToNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameTokenToNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // int64 robot_id = 2;
  if (this->robot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->robot_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameTokenToNotify)
  return target;
}

size_t ThirdGameTokenToNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameTokenToNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // int64 robot_id = 2;
  if (this->robot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->robot_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameTokenToNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameTokenToNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameTokenToNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameTokenToNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameTokenToNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameTokenToNotify)
    MergeFrom(*source);
  }
}

void ThirdGameTokenToNotify::MergeFrom(const ThirdGameTokenToNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameTokenToNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.robot_id() != 0) {
    set_robot_id(from.robot_id());
  }
}

void ThirdGameTokenToNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameTokenToNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameTokenToNotify::CopyFrom(const ThirdGameTokenToNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameTokenToNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameTokenToNotify::IsInitialized() const {
  return true;
}

void ThirdGameTokenToNotify::Swap(ThirdGameTokenToNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameTokenToNotify::InternalSwap(ThirdGameTokenToNotify* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(robot_id_, other->robot_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameTokenToNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameActionNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameActionNotify::kRoomidFieldNumber;
const int ThirdGameActionNotify::kPlayerIdFieldNumber;
const int ThirdGameActionNotify::kActionTypeFieldNumber;
const int ThirdGameActionNotify::kBetNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameActionNotify::ThirdGameActionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameActionNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameActionNotify)
}
ThirdGameActionNotify::ThirdGameActionNotify(const ThirdGameActionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&betnum_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(betnum_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameActionNotify)
}

void ThirdGameActionNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&betnum_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(betnum_));
  _cached_size_ = 0;
}

ThirdGameActionNotify::~ThirdGameActionNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameActionNotify)
  SharedDtor();
}

void ThirdGameActionNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameActionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameActionNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameActionNotify& ThirdGameActionNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameActionNotify();
  return *internal_default_instance();
}

ThirdGameActionNotify* ThirdGameActionNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameActionNotify* n = new ThirdGameActionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameActionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameActionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&betnum_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(betnum_));
  _internal_metadata_.Clear();
}

bool ThirdGameActionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameActionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameActionNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 betNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &betnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameActionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameActionNotify)
  return false;
#undef DO_
}

void ThirdGameActionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameActionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameActionNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // int64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }

  // int32 actionType = 3;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actiontype(), output);
  }

  // int32 betNum = 4;
  if (this->betnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->betnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameActionNotify)
}

::google::protobuf::uint8* ThirdGameActionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameActionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameActionNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // int64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }

  // int32 actionType = 3;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actiontype(), target);
  }

  // int32 betNum = 4;
  if (this->betnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->betnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameActionNotify)
  return target;
}

size_t ThirdGameActionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameActionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // int64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->player_id());
  }

  // int32 actionType = 3;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int32 betNum = 4;
  if (this->betnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->betnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameActionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameActionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameActionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameActionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameActionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameActionNotify)
    MergeFrom(*source);
  }
}

void ThirdGameActionNotify::MergeFrom(const ThirdGameActionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameActionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.betnum() != 0) {
    set_betnum(from.betnum());
  }
}

void ThirdGameActionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameActionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameActionNotify::CopyFrom(const ThirdGameActionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameActionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameActionNotify::IsInitialized() const {
  return true;
}

void ThirdGameActionNotify::Swap(ThirdGameActionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameActionNotify::InternalSwap(ThirdGameActionNotify* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(player_id_, other->player_id_);
  swap(actiontype_, other->actiontype_);
  swap(betnum_, other->betnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameActionNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameEndNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameEndNotify::kRoomidFieldNumber;
const int ThirdGameEndNotify::kHandFieldNumber;
const int ThirdGameEndNotify::kRobotResultFieldNumber;
const int ThirdGameEndNotify::kPlayerCardsFieldNumber;
const int ThirdGameEndNotify::kBoardCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameEndNotify::ThirdGameEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameEndNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameEndNotify)
}
ThirdGameEndNotify::ThirdGameEndNotify(const ThirdGameEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_cards_(from.player_cards_),
      board_cards_(from.board_cards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  ::memcpy(&hand_, &from.hand_,
    static_cast<size_t>(reinterpret_cast<char*>(&robotresult_) -
    reinterpret_cast<char*>(&hand_)) + sizeof(robotresult_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameEndNotify)
}

void ThirdGameEndNotify::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotresult_) -
      reinterpret_cast<char*>(&hand_)) + sizeof(robotresult_));
  _cached_size_ = 0;
}

ThirdGameEndNotify::~ThirdGameEndNotify() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameEndNotify)
  SharedDtor();
}

void ThirdGameEndNotify::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameEndNotify::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameEndNotify& ThirdGameEndNotify::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameEndNotify();
  return *internal_default_instance();
}

ThirdGameEndNotify* ThirdGameEndNotify::New(::google::protobuf::Arena* arena) const {
  ThirdGameEndNotify* n = new ThirdGameEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_cards_.Clear();
  board_cards_.Clear();
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotresult_) -
      reinterpret_cast<char*>(&hand_)) + sizeof(robotresult_));
  _internal_metadata_.Clear();
}

bool ThirdGameEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameEndNotify.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 robotResult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_cards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_player_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 board_cards = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_board_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_board_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameEndNotify)
  return false;
#undef DO_
}

void ThirdGameEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameEndNotify.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hand(), output);
  }

  // int32 robotResult = 3;
  if (this->robotresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->robotresult(), output);
  }

  // repeated int32 player_cards = 4;
  if (this->player_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->player_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_cards(i), output);
  }

  // repeated int32 board_cards = 5;
  if (this->board_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _board_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->board_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->board_cards(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameEndNotify)
}

::google::protobuf::uint8* ThirdGameEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameEndNotify.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hand(), target);
  }

  // int32 robotResult = 3;
  if (this->robotresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->robotresult(), target);
  }

  // repeated int32 player_cards = 4;
  if (this->player_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_cards_, target);
  }

  // repeated int32 board_cards = 5;
  if (this->board_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _board_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->board_cards_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameEndNotify)
  return target;
}

size_t ThirdGameEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 player_cards = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 board_cards = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->board_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _board_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // uint32 hand = 2;
  if (this->hand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hand());
  }

  // int32 robotResult = 3;
  if (this->robotresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameEndNotify)
    MergeFrom(*source);
  }
}

void ThirdGameEndNotify::MergeFrom(const ThirdGameEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_cards_.MergeFrom(from.player_cards_);
  board_cards_.MergeFrom(from.board_cards_);
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.hand() != 0) {
    set_hand(from.hand());
  }
  if (from.robotresult() != 0) {
    set_robotresult(from.robotresult());
  }
}

void ThirdGameEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameEndNotify::CopyFrom(const ThirdGameEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameEndNotify::IsInitialized() const {
  return true;
}

void ThirdGameEndNotify::Swap(ThirdGameEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameEndNotify::InternalSwap(ThirdGameEndNotify* other) {
  using std::swap;
  player_cards_.InternalSwap(&other->player_cards_);
  board_cards_.InternalSwap(&other->board_cards_);
  roomid_.Swap(&other->roomid_);
  swap(hand_, other->hand_);
  swap(robotresult_, other->robotresult_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameEndNotify::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameQueryStateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameQueryStateReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameQueryStateReq::ThirdGameQueryStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameQueryStateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameQueryStateReq)
}
ThirdGameQueryStateReq::ThirdGameQueryStateReq(const ThirdGameQueryStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomid().size() > 0) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameQueryStateReq)
}

void ThirdGameQueryStateReq::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ThirdGameQueryStateReq::~ThirdGameQueryStateReq() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameQueryStateReq)
  SharedDtor();
}

void ThirdGameQueryStateReq::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameQueryStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameQueryStateReq::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameQueryStateReq& ThirdGameQueryStateReq::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameQueryStateReq();
  return *internal_default_instance();
}

ThirdGameQueryStateReq* ThirdGameQueryStateReq::New(::google::protobuf::Arena* arena) const {
  ThirdGameQueryStateReq* n = new ThirdGameQueryStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameQueryStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameQueryStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ThirdGameQueryStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameQueryStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameQueryStateReq.roomid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameQueryStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameQueryStateReq)
  return false;
#undef DO_
}

void ThirdGameQueryStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameQueryStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameQueryStateReq.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameQueryStateReq)
}

::google::protobuf::uint8* ThirdGameQueryStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameQueryStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomid = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameQueryStateReq.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameQueryStateReq)
  return target;
}

size_t ThirdGameQueryStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameQueryStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomid = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameQueryStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameQueryStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameQueryStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameQueryStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameQueryStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameQueryStateReq)
    MergeFrom(*source);
  }
}

void ThirdGameQueryStateReq::MergeFrom(const ThirdGameQueryStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameQueryStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void ThirdGameQueryStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameQueryStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameQueryStateReq::CopyFrom(const ThirdGameQueryStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameQueryStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameQueryStateReq::IsInitialized() const {
  return true;
}

void ThirdGameQueryStateReq::Swap(ThirdGameQueryStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameQueryStateReq::InternalSwap(ThirdGameQueryStateReq* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameQueryStateReq::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameQueryStateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameQueryStateRsp::kFinishedFieldNumber;
const int ThirdGameQueryStateRsp::kRoundFieldNumber;
const int ThirdGameQueryStateRsp::kNextTurnIdFieldNumber;
const int ThirdGameQueryStateRsp::kAllowRaiseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameQueryStateRsp::ThirdGameQueryStateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameQueryStateRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameQueryStateRsp)
}
ThirdGameQueryStateRsp::ThirdGameQueryStateRsp(const ThirdGameQueryStateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allow_raise_(from.allow_raise_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&finished_, &from.finished_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_turn_id_) -
    reinterpret_cast<char*>(&finished_)) + sizeof(next_turn_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameQueryStateRsp)
}

void ThirdGameQueryStateRsp::SharedCtor() {
  ::memset(&finished_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_turn_id_) -
      reinterpret_cast<char*>(&finished_)) + sizeof(next_turn_id_));
  _cached_size_ = 0;
}

ThirdGameQueryStateRsp::~ThirdGameQueryStateRsp() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameQueryStateRsp)
  SharedDtor();
}

void ThirdGameQueryStateRsp::SharedDtor() {
}

void ThirdGameQueryStateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameQueryStateRsp::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameQueryStateRsp& ThirdGameQueryStateRsp::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameQueryStateRsp();
  return *internal_default_instance();
}

ThirdGameQueryStateRsp* ThirdGameQueryStateRsp::New(::google::protobuf::Arena* arena) const {
  ThirdGameQueryStateRsp* n = new ThirdGameQueryStateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameQueryStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameQueryStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_raise_.Clear();
  ::memset(&finished_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_turn_id_) -
      reinterpret_cast<char*>(&finished_)) + sizeof(next_turn_id_));
  _internal_metadata_.Clear();
}

bool ThirdGameQueryStateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameQueryStateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 finished = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 next_turn_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &next_turn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 allow_raise = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_allow_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_allow_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameQueryStateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameQueryStateRsp)
  return false;
#undef DO_
}

void ThirdGameQueryStateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameQueryStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 finished = 1;
  if (this->finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->finished(), output);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->round(), output);
  }

  // int64 next_turn_id = 3;
  if (this->next_turn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->next_turn_id(), output);
  }

  // repeated int32 allow_raise = 4;
  if (this->allow_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _allow_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->allow_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->allow_raise(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameQueryStateRsp)
}

::google::protobuf::uint8* ThirdGameQueryStateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameQueryStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 finished = 1;
  if (this->finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->finished(), target);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->round(), target);
  }

  // int64 next_turn_id = 3;
  if (this->next_turn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->next_turn_id(), target);
  }

  // repeated int32 allow_raise = 4;
  if (this->allow_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _allow_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->allow_raise_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameQueryStateRsp)
  return target;
}

size_t ThirdGameQueryStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameQueryStateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 allow_raise = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->allow_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allow_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 finished = 1;
  if (this->finished() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->finished());
  }

  // int32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  // int64 next_turn_id = 3;
  if (this->next_turn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->next_turn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameQueryStateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameQueryStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameQueryStateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameQueryStateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameQueryStateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameQueryStateRsp)
    MergeFrom(*source);
  }
}

void ThirdGameQueryStateRsp::MergeFrom(const ThirdGameQueryStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameQueryStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allow_raise_.MergeFrom(from.allow_raise_);
  if (from.finished() != 0) {
    set_finished(from.finished());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
  if (from.next_turn_id() != 0) {
    set_next_turn_id(from.next_turn_id());
  }
}

void ThirdGameQueryStateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameQueryStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameQueryStateRsp::CopyFrom(const ThirdGameQueryStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameQueryStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameQueryStateRsp::IsInitialized() const {
  return true;
}

void ThirdGameQueryStateRsp::Swap(ThirdGameQueryStateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameQueryStateRsp::InternalSwap(ThirdGameQueryStateRsp* other) {
  using std::swap;
  allow_raise_.InternalSwap(&other->allow_raise_);
  swap(finished_, other->finished_);
  swap(round_, other->round_);
  swap(next_turn_id_, other->next_turn_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameQueryStateRsp::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameStatDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameStatDataReq::kUidFieldNumber;
const int ThirdGameStatDataReq::kStartFieldNumber;
const int ThirdGameStatDataReq::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameStatDataReq::ThirdGameStatDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameStatDataReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameStatDataReq)
}
ThirdGameStatDataReq::ThirdGameStatDataReq(const ThirdGameStatDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start().size() > 0) {
    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end().size() > 0) {
    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameStatDataReq)
}

void ThirdGameStatDataReq::SharedCtor() {
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ThirdGameStatDataReq::~ThirdGameStatDataReq() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameStatDataReq)
  SharedDtor();
}

void ThirdGameStatDataReq::SharedDtor() {
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameStatDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameStatDataReq::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameStatDataReq& ThirdGameStatDataReq::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameStatDataReq();
  return *internal_default_instance();
}

ThirdGameStatDataReq* ThirdGameStatDataReq::New(::google::protobuf::Arena* arena) const {
  ThirdGameStatDataReq* n = new ThirdGameStatDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameStatDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameStatDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ThirdGameStatDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameStatDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start().data(), static_cast<int>(this->start().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameStatDataReq.start"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end().data(), static_cast<int>(this->end().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameStatDataReq.end"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameStatDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameStatDataReq)
  return false;
#undef DO_
}

void ThirdGameStatDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameStatDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  // string start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start().data(), static_cast<int>(this->start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataReq.start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start(), output);
  }

  // string end = 3;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end().data(), static_cast<int>(this->end().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataReq.end");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameStatDataReq)
}

::google::protobuf::uint8* ThirdGameStatDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameStatDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  // string start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start().data(), static_cast<int>(this->start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataReq.start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start(), target);
  }

  // string end = 3;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end().data(), static_cast<int>(this->end().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataReq.end");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameStatDataReq)
  return target;
}

size_t ThirdGameStatDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameStatDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string start = 2;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start());
  }

  // string end = 3;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end());
  }

  // int64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameStatDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameStatDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameStatDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameStatDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameStatDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameStatDataReq)
    MergeFrom(*source);
  }
}

void ThirdGameStatDataReq::MergeFrom(const ThirdGameStatDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameStatDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ThirdGameStatDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameStatDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameStatDataReq::CopyFrom(const ThirdGameStatDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameStatDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameStatDataReq::IsInitialized() const {
  return true;
}

void ThirdGameStatDataReq::Swap(ThirdGameStatDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameStatDataReq::InternalSwap(ThirdGameStatDataReq* other) {
  using std::swap;
  start_.Swap(&other->start_);
  end_.Swap(&other->end_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameStatDataReq::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThirdGameStatDataRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdGameStatDataRsp::kResultCodeFieldNumber;
const int ThirdGameStatDataRsp::kUidFieldNumber;
const int ThirdGameStatDataRsp::kVpipFieldNumber;
const int ThirdGameStatDataRsp::kPfrFieldNumber;
const int ThirdGameStatDataRsp::kShowdownFieldNumber;
const int ThirdGameStatDataRsp::kCbetFieldNumber;
const int ThirdGameStatDataRsp::kWinShowdownFieldNumber;
const int ThirdGameStatDataRsp::kThreeBetFieldNumber;
const int ThirdGameStatDataRsp::kVpipBbFieldNumber;
const int ThirdGameStatDataRsp::kVpipBtnFieldNumber;
const int ThirdGameStatDataRsp::kFoldToThreeBetFieldNumber;
const int ThirdGameStatDataRsp::kFoldToFourBetFieldNumber;
const int ThirdGameStatDataRsp::kFourBetFieldNumber;
const int ThirdGameStatDataRsp::kCallFiveBetFieldNumber;
const int ThirdGameStatDataRsp::kFoldToFiveBetFieldNumber;
const int ThirdGameStatDataRsp::kLimpFieldNumber;
const int ThirdGameStatDataRsp::kLimpRaiseFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetCheckRaiseFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetFoldToRaiseFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetCallRaiseFieldNumber;
const int ThirdGameStatDataRsp::kSingleCbetReraiseFieldNumber;
const int ThirdGameStatDataRsp::kSingleBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kSingleDoubleBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kSingleTrippleBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kSingleFoldToCbetFieldNumber;
const int ThirdGameStatDataRsp::kSingleFoldToCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kSingleFoldToCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kSingleCallCbetFieldNumber;
const int ThirdGameStatDataRsp::kSingleCallCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kSingleCheckCallCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kSingleRaiseCbetFieldNumber;
const int ThirdGameStatDataRsp::kSingleCheckRaiseCbetFieldNumber;
const int ThirdGameStatDataRsp::kSingleMissCbetBetIpFieldNumber;
const int ThirdGameStatDataRsp::kSingleMissCbetBetOopFieldNumber;
const int ThirdGameStatDataRsp::kSingleDonkFieldNumber;
const int ThirdGameStatDataRsp::kSingleCallFoldToDoubleBarrelFieldNumber;
const int ThirdGameStatDataRsp::kSingleCallCallFoldToTrippleBarrelFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetCheckRaiseFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetFoldToRaiseFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetCallRaiseFieldNumber;
const int ThirdGameStatDataRsp::kTbetCbetReraiseFieldNumber;
const int ThirdGameStatDataRsp::kTbetBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kTbetDoubleBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kTbetTrippleBarrelingFieldNumber;
const int ThirdGameStatDataRsp::kTbetFoldToCbetFieldNumber;
const int ThirdGameStatDataRsp::kTbetFoldToCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kTbetFoldToCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kTbetCallCbetFieldNumber;
const int ThirdGameStatDataRsp::kTbetCallCbetIpFieldNumber;
const int ThirdGameStatDataRsp::kTbetCheckCallCbetOopFieldNumber;
const int ThirdGameStatDataRsp::kTbetRaiseCbetFieldNumber;
const int ThirdGameStatDataRsp::kTbetCheckRaiseCbetFieldNumber;
const int ThirdGameStatDataRsp::kTbetMissCbetBetIpFieldNumber;
const int ThirdGameStatDataRsp::kTbetMissCbetBetOopFieldNumber;
const int ThirdGameStatDataRsp::kTbetDonkFieldNumber;
const int ThirdGameStatDataRsp::kTbetCallFoldToDoubleBarrelFieldNumber;
const int ThirdGameStatDataRsp::kTbetCallCallFoldToTrippleBarrelFieldNumber;
const int ThirdGameStatDataRsp::kBetTurnFieldNumber;
const int ThirdGameStatDataRsp::kBetTurnOverBetFieldNumber;
const int ThirdGameStatDataRsp::kBetTurnStandardBetFieldNumber;
const int ThirdGameStatDataRsp::kBetTurnHalfPotFieldNumber;
const int ThirdGameStatDataRsp::kBetTurnSmallPotFieldNumber;
const int ThirdGameStatDataRsp::kRaiseTurnFieldNumber;
const int ThirdGameStatDataRsp::kRaiseTurnBluffFieldNumber;
const int ThirdGameStatDataRsp::kRaiseTurnBluffToppairFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverOverBetFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverStandardBetFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverHalfPotFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverSmallPotFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverValueFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverBluffFieldNumber;
const int ThirdGameStatDataRsp::kBetRiverBluffToppairFieldNumber;
const int ThirdGameStatDataRsp::kRaiseRiverFieldNumber;
const int ThirdGameStatDataRsp::kRaiseRiverBluffFieldNumber;
const int ThirdGameStatDataRsp::kRaiseRiverBluffToppairFieldNumber;
const int ThirdGameStatDataRsp::kCallDownRiverFieldNumber;
const int ThirdGameStatDataRsp::kErrMsgFieldNumber;
const int ThirdGameStatDataRsp::kWinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdGameStatDataRsp::ThirdGameStatDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_third_2eproto::InitDefaultsThirdGameStatDataRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.ThirdGameStatDataRsp)
}
ThirdGameStatDataRsp::ThirdGameStatDataRsp(const ThirdGameStatDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&win_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(win_));
  // @@protoc_insertion_point(copy_constructor:Pb.ThirdGameStatDataRsp)
}

void ThirdGameStatDataRsp::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&win_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(win_));
  _cached_size_ = 0;
}

ThirdGameStatDataRsp::~ThirdGameStatDataRsp() {
  // @@protoc_insertion_point(destructor:Pb.ThirdGameStatDataRsp)
  SharedDtor();
}

void ThirdGameStatDataRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdGameStatDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdGameStatDataRsp::descriptor() {
  ::protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThirdGameStatDataRsp& ThirdGameStatDataRsp::default_instance() {
  ::protobuf_third_2eproto::InitDefaultsThirdGameStatDataRsp();
  return *internal_default_instance();
}

ThirdGameStatDataRsp* ThirdGameStatDataRsp::New(::google::protobuf::Arena* arena) const {
  ThirdGameStatDataRsp* n = new ThirdGameStatDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdGameStatDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.ThirdGameStatDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&win_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(win_));
  _internal_metadata_.Clear();
}

bool ThirdGameStatDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.ThirdGameStatDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 resultCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vpip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vpip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pfr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pfr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 showdown = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &showdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cbet = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 win_showdown = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &win_showdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 three_bet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &three_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vpip_bb = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vpip_bb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vpip_btn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vpip_btn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fold_to_three_bet = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fold_to_three_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fold_to_four_bet = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fold_to_four_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 four_bet = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &four_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 call_five_bet = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_five_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fold_to_five_bet = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fold_to_five_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limp_raise = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limp_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_ip = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_oop = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_check_raise = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_check_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_fold_to_raise = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_fold_to_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_call_raise = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_call_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_cbet_reraise = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_cbet_reraise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_barreling = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_double_barreling = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_double_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_tripple_barreling = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_tripple_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_fold_to_cbet = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_fold_to_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_fold_to_cbet_ip = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_fold_to_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_fold_to_cbet_oop = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_fold_to_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_call_cbet = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_call_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_call_cbet_ip = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_call_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_check_call_cbet_oop = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_check_call_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_raise_cbet = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_raise_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_check_raise_cbet = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_check_raise_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_miss_cbet_bet_ip = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_miss_cbet_bet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_miss_cbet_bet_oop = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_miss_cbet_bet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_donk = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_donk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_call_fold_to_double_barrel = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_call_fold_to_double_barrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 single_call_call_fold_to_tripple_barrel = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &single_call_call_fold_to_tripple_barrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_ip = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_oop = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_check_raise = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_check_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_fold_to_raise = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_fold_to_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_call_raise = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_call_raise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_cbet_reraise = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_cbet_reraise_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_barreling = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_double_barreling = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_double_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_tripple_barreling = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_tripple_barreling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_fold_to_cbet = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_fold_to_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_fold_to_cbet_ip = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_fold_to_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_fold_to_cbet_oop = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_fold_to_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_call_cbet = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_call_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_call_cbet_ip = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_call_cbet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_check_call_cbet_oop = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_check_call_cbet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_raise_cbet = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 456 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_raise_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_check_raise_cbet = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_check_raise_cbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_miss_cbet_bet_ip = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 472 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_miss_cbet_bet_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_miss_cbet_bet_oop = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_miss_cbet_bet_oop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_donk = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_donk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_call_fold_to_double_barrel = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 496 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_call_fold_to_double_barrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 tbet_call_call_fold_to_tripple_barrel = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 504 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbet_call_call_fold_to_tripple_barrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_turn = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 512 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_turn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_turn_over_bet = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 520 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_turn_over_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_turn_standard_bet = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 528 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_turn_standard_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_turn_half_pot = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 536 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_turn_half_pot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_turn_small_pot = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 544 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_turn_small_pot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_turn = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 552 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_turn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_turn_bluff = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_turn_bluff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_turn_bluff_toppair = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 568 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_turn_bluff_toppair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 576 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_over_bet = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 584 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_over_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_standard_bet = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 592 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_standard_bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_half_pot = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_half_pot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_small_pot = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 608 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_small_pot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_value = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 616 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_bluff = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 624 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_bluff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bet_river_bluff_toppair = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 632 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bet_river_bluff_toppair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_river = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 640 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_river_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_river_bluff = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 648 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_river_bluff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 raise_river_bluff_toppair = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 656 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &raise_river_bluff_toppair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 call_down_river = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 664 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_down_river_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err_msg = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err_msg().data(), static_cast<int>(this->err_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.ThirdGameStatDataRsp.err_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 win = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 680 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.ThirdGameStatDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.ThirdGameStatDataRsp)
  return false;
#undef DO_
}

void ThirdGameStatDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.ThirdGameStatDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uid(), output);
  }

  // uint32 vpip = 3;
  if (this->vpip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vpip(), output);
  }

  // uint32 pfr = 4;
  if (this->pfr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pfr(), output);
  }

  // uint32 showdown = 5;
  if (this->showdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->showdown(), output);
  }

  // uint32 cbet = 6;
  if (this->cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cbet(), output);
  }

  // uint32 win_showdown = 7;
  if (this->win_showdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->win_showdown(), output);
  }

  // uint32 three_bet = 8;
  if (this->three_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->three_bet(), output);
  }

  // uint32 vpip_bb = 9;
  if (this->vpip_bb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->vpip_bb(), output);
  }

  // uint32 vpip_btn = 10;
  if (this->vpip_btn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->vpip_btn(), output);
  }

  // uint32 fold_to_three_bet = 11;
  if (this->fold_to_three_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->fold_to_three_bet(), output);
  }

  // uint32 fold_to_four_bet = 12;
  if (this->fold_to_four_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->fold_to_four_bet(), output);
  }

  // uint32 four_bet = 13;
  if (this->four_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->four_bet(), output);
  }

  // uint32 call_five_bet = 14;
  if (this->call_five_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->call_five_bet(), output);
  }

  // uint32 fold_to_five_bet = 15;
  if (this->fold_to_five_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->fold_to_five_bet(), output);
  }

  // uint32 limp = 16;
  if (this->limp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->limp(), output);
  }

  // uint32 limp_raise = 17;
  if (this->limp_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->limp_raise(), output);
  }

  // uint32 single_cbet = 18;
  if (this->single_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->single_cbet(), output);
  }

  // uint32 single_cbet_ip = 19;
  if (this->single_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->single_cbet_ip(), output);
  }

  // uint32 single_cbet_oop = 20;
  if (this->single_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->single_cbet_oop(), output);
  }

  // uint32 single_cbet_check_raise = 21;
  if (this->single_cbet_check_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->single_cbet_check_raise(), output);
  }

  // uint32 single_cbet_fold_to_raise = 22;
  if (this->single_cbet_fold_to_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->single_cbet_fold_to_raise(), output);
  }

  // uint32 single_cbet_call_raise = 23;
  if (this->single_cbet_call_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->single_cbet_call_raise(), output);
  }

  // uint32 single_cbet_reraise = 24;
  if (this->single_cbet_reraise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->single_cbet_reraise(), output);
  }

  // uint32 single_barreling = 25;
  if (this->single_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->single_barreling(), output);
  }

  // uint32 single_double_barreling = 26;
  if (this->single_double_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->single_double_barreling(), output);
  }

  // uint32 single_tripple_barreling = 27;
  if (this->single_tripple_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->single_tripple_barreling(), output);
  }

  // uint32 single_fold_to_cbet = 28;
  if (this->single_fold_to_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->single_fold_to_cbet(), output);
  }

  // uint32 single_fold_to_cbet_ip = 29;
  if (this->single_fold_to_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->single_fold_to_cbet_ip(), output);
  }

  // uint32 single_fold_to_cbet_oop = 30;
  if (this->single_fold_to_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->single_fold_to_cbet_oop(), output);
  }

  // uint32 single_call_cbet = 31;
  if (this->single_call_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->single_call_cbet(), output);
  }

  // uint32 single_call_cbet_ip = 32;
  if (this->single_call_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->single_call_cbet_ip(), output);
  }

  // uint32 single_check_call_cbet_oop = 33;
  if (this->single_check_call_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->single_check_call_cbet_oop(), output);
  }

  // uint32 single_raise_cbet = 34;
  if (this->single_raise_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->single_raise_cbet(), output);
  }

  // uint32 single_check_raise_cbet = 35;
  if (this->single_check_raise_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->single_check_raise_cbet(), output);
  }

  // uint32 single_miss_cbet_bet_ip = 36;
  if (this->single_miss_cbet_bet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->single_miss_cbet_bet_ip(), output);
  }

  // uint32 single_miss_cbet_bet_oop = 37;
  if (this->single_miss_cbet_bet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->single_miss_cbet_bet_oop(), output);
  }

  // uint32 single_donk = 38;
  if (this->single_donk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->single_donk(), output);
  }

  // uint32 single_call_fold_to_double_barrel = 39;
  if (this->single_call_fold_to_double_barrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->single_call_fold_to_double_barrel(), output);
  }

  // uint32 single_call_call_fold_to_tripple_barrel = 40;
  if (this->single_call_call_fold_to_tripple_barrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->single_call_call_fold_to_tripple_barrel(), output);
  }

  // uint32 tbet_cbet = 41;
  if (this->tbet_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->tbet_cbet(), output);
  }

  // uint32 tbet_cbet_ip = 42;
  if (this->tbet_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->tbet_cbet_ip(), output);
  }

  // uint32 tbet_cbet_oop = 43;
  if (this->tbet_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->tbet_cbet_oop(), output);
  }

  // uint32 tbet_cbet_check_raise = 44;
  if (this->tbet_cbet_check_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->tbet_cbet_check_raise(), output);
  }

  // uint32 tbet_cbet_fold_to_raise = 45;
  if (this->tbet_cbet_fold_to_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->tbet_cbet_fold_to_raise(), output);
  }

  // uint32 tbet_cbet_call_raise = 46;
  if (this->tbet_cbet_call_raise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->tbet_cbet_call_raise(), output);
  }

  // uint32 tbet_cbet_reraise = 47;
  if (this->tbet_cbet_reraise() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->tbet_cbet_reraise(), output);
  }

  // uint32 tbet_barreling = 48;
  if (this->tbet_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->tbet_barreling(), output);
  }

  // uint32 tbet_double_barreling = 49;
  if (this->tbet_double_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->tbet_double_barreling(), output);
  }

  // uint32 tbet_tripple_barreling = 50;
  if (this->tbet_tripple_barreling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->tbet_tripple_barreling(), output);
  }

  // uint32 tbet_fold_to_cbet = 51;
  if (this->tbet_fold_to_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->tbet_fold_to_cbet(), output);
  }

  // uint32 tbet_fold_to_cbet_ip = 52;
  if (this->tbet_fold_to_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(52, this->tbet_fold_to_cbet_ip(), output);
  }

  // uint32 tbet_fold_to_cbet_oop = 53;
  if (this->tbet_fold_to_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(53, this->tbet_fold_to_cbet_oop(), output);
  }

  // uint32 tbet_call_cbet = 54;
  if (this->tbet_call_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->tbet_call_cbet(), output);
  }

  // uint32 tbet_call_cbet_ip = 55;
  if (this->tbet_call_cbet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->tbet_call_cbet_ip(), output);
  }

  // uint32 tbet_check_call_cbet_oop = 56;
  if (this->tbet_check_call_cbet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->tbet_check_call_cbet_oop(), output);
  }

  // uint32 tbet_raise_cbet = 57;
  if (this->tbet_raise_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->tbet_raise_cbet(), output);
  }

  // uint32 tbet_check_raise_cbet = 58;
  if (this->tbet_check_raise_cbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(58, this->tbet_check_raise_cbet(), output);
  }

  // uint32 tbet_miss_cbet_bet_ip = 59;
  if (this->tbet_miss_cbet_bet_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(59, this->tbet_miss_cbet_bet_ip(), output);
  }

  // uint32 tbet_miss_cbet_bet_oop = 60;
  if (this->tbet_miss_cbet_bet_oop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->tbet_miss_cbet_bet_oop(), output);
  }

  // uint32 tbet_donk = 61;
  if (this->tbet_donk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->tbet_donk(), output);
  }

  // uint32 tbet_call_fold_to_double_barrel = 62;
  if (this->tbet_call_fold_to_double_barrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(62, this->tbet_call_fold_to_double_barrel(), output);
  }

  // uint32 tbet_call_call_fold_to_tripple_barrel = 63;
  if (this->tbet_call_call_fold_to_tripple_barrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(63, this->tbet_call_call_fold_to_tripple_barrel(), output);
  }

  // uint32 bet_turn = 64;
  if (this->bet_turn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(64, this->bet_turn(), output);
  }

  // uint32 bet_turn_over_bet = 65;
  if (this->bet_turn_over_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(65, this->bet_turn_over_bet(), output);
  }

  // uint32 bet_turn_standard_bet = 66;
  if (this->bet_turn_standard_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(66, this->bet_turn_standard_bet(), output);
  }

  // uint32 bet_turn_half_pot = 67;
  if (this->bet_turn_half_pot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(67, this->bet_turn_half_pot(), output);
  }

  // uint32 bet_turn_small_pot = 68;
  if (this->bet_turn_small_pot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(68, this->bet_turn_small_pot(), output);
  }

  // uint32 raise_turn = 69;
  if (this->raise_turn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(69, this->raise_turn(), output);
  }

  // uint32 raise_turn_bluff = 70;
  if (this->raise_turn_bluff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(70, this->raise_turn_bluff(), output);
  }

  // uint32 raise_turn_bluff_toppair = 71;
  if (this->raise_turn_bluff_toppair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(71, this->raise_turn_bluff_toppair(), output);
  }

  // uint32 bet_river = 72;
  if (this->bet_river() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(72, this->bet_river(), output);
  }

  // uint32 bet_river_over_bet = 73;
  if (this->bet_river_over_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(73, this->bet_river_over_bet(), output);
  }

  // uint32 bet_river_standard_bet = 74;
  if (this->bet_river_standard_bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(74, this->bet_river_standard_bet(), output);
  }

  // uint32 bet_river_half_pot = 75;
  if (this->bet_river_half_pot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(75, this->bet_river_half_pot(), output);
  }

  // uint32 bet_river_small_pot = 76;
  if (this->bet_river_small_pot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(76, this->bet_river_small_pot(), output);
  }

  // uint32 bet_river_value = 77;
  if (this->bet_river_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(77, this->bet_river_value(), output);
  }

  // uint32 bet_river_bluff = 78;
  if (this->bet_river_bluff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(78, this->bet_river_bluff(), output);
  }

  // uint32 bet_river_bluff_toppair = 79;
  if (this->bet_river_bluff_toppair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(79, this->bet_river_bluff_toppair(), output);
  }

  // uint32 raise_river = 80;
  if (this->raise_river() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(80, this->raise_river(), output);
  }

  // uint32 raise_river_bluff = 81;
  if (this->raise_river_bluff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(81, this->raise_river_bluff(), output);
  }

  // uint32 raise_river_bluff_toppair = 82;
  if (this->raise_river_bluff_toppair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(82, this->raise_river_bluff_toppair(), output);
  }

  // uint32 call_down_river = 83;
  if (this->call_down_river() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(83, this->call_down_river(), output);
  }

  // string err_msg = 84;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataRsp.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->err_msg(), output);
  }

  // uint32 win = 85;
  if (this->win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(85, this->win(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.ThirdGameStatDataRsp)
}

::google::protobuf::uint8* ThirdGameStatDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.ThirdGameStatDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uid(), target);
  }

  // uint32 vpip = 3;
  if (this->vpip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vpip(), target);
  }

  // uint32 pfr = 4;
  if (this->pfr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pfr(), target);
  }

  // uint32 showdown = 5;
  if (this->showdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->showdown(), target);
  }

  // uint32 cbet = 6;
  if (this->cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cbet(), target);
  }

  // uint32 win_showdown = 7;
  if (this->win_showdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->win_showdown(), target);
  }

  // uint32 three_bet = 8;
  if (this->three_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->three_bet(), target);
  }

  // uint32 vpip_bb = 9;
  if (this->vpip_bb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->vpip_bb(), target);
  }

  // uint32 vpip_btn = 10;
  if (this->vpip_btn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->vpip_btn(), target);
  }

  // uint32 fold_to_three_bet = 11;
  if (this->fold_to_three_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->fold_to_three_bet(), target);
  }

  // uint32 fold_to_four_bet = 12;
  if (this->fold_to_four_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->fold_to_four_bet(), target);
  }

  // uint32 four_bet = 13;
  if (this->four_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->four_bet(), target);
  }

  // uint32 call_five_bet = 14;
  if (this->call_five_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->call_five_bet(), target);
  }

  // uint32 fold_to_five_bet = 15;
  if (this->fold_to_five_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->fold_to_five_bet(), target);
  }

  // uint32 limp = 16;
  if (this->limp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->limp(), target);
  }

  // uint32 limp_raise = 17;
  if (this->limp_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->limp_raise(), target);
  }

  // uint32 single_cbet = 18;
  if (this->single_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->single_cbet(), target);
  }

  // uint32 single_cbet_ip = 19;
  if (this->single_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->single_cbet_ip(), target);
  }

  // uint32 single_cbet_oop = 20;
  if (this->single_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->single_cbet_oop(), target);
  }

  // uint32 single_cbet_check_raise = 21;
  if (this->single_cbet_check_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->single_cbet_check_raise(), target);
  }

  // uint32 single_cbet_fold_to_raise = 22;
  if (this->single_cbet_fold_to_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->single_cbet_fold_to_raise(), target);
  }

  // uint32 single_cbet_call_raise = 23;
  if (this->single_cbet_call_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->single_cbet_call_raise(), target);
  }

  // uint32 single_cbet_reraise = 24;
  if (this->single_cbet_reraise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->single_cbet_reraise(), target);
  }

  // uint32 single_barreling = 25;
  if (this->single_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->single_barreling(), target);
  }

  // uint32 single_double_barreling = 26;
  if (this->single_double_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->single_double_barreling(), target);
  }

  // uint32 single_tripple_barreling = 27;
  if (this->single_tripple_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->single_tripple_barreling(), target);
  }

  // uint32 single_fold_to_cbet = 28;
  if (this->single_fold_to_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->single_fold_to_cbet(), target);
  }

  // uint32 single_fold_to_cbet_ip = 29;
  if (this->single_fold_to_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->single_fold_to_cbet_ip(), target);
  }

  // uint32 single_fold_to_cbet_oop = 30;
  if (this->single_fold_to_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->single_fold_to_cbet_oop(), target);
  }

  // uint32 single_call_cbet = 31;
  if (this->single_call_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->single_call_cbet(), target);
  }

  // uint32 single_call_cbet_ip = 32;
  if (this->single_call_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->single_call_cbet_ip(), target);
  }

  // uint32 single_check_call_cbet_oop = 33;
  if (this->single_check_call_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->single_check_call_cbet_oop(), target);
  }

  // uint32 single_raise_cbet = 34;
  if (this->single_raise_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->single_raise_cbet(), target);
  }

  // uint32 single_check_raise_cbet = 35;
  if (this->single_check_raise_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->single_check_raise_cbet(), target);
  }

  // uint32 single_miss_cbet_bet_ip = 36;
  if (this->single_miss_cbet_bet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->single_miss_cbet_bet_ip(), target);
  }

  // uint32 single_miss_cbet_bet_oop = 37;
  if (this->single_miss_cbet_bet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->single_miss_cbet_bet_oop(), target);
  }

  // uint32 single_donk = 38;
  if (this->single_donk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->single_donk(), target);
  }

  // uint32 single_call_fold_to_double_barrel = 39;
  if (this->single_call_fold_to_double_barrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->single_call_fold_to_double_barrel(), target);
  }

  // uint32 single_call_call_fold_to_tripple_barrel = 40;
  if (this->single_call_call_fold_to_tripple_barrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->single_call_call_fold_to_tripple_barrel(), target);
  }

  // uint32 tbet_cbet = 41;
  if (this->tbet_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->tbet_cbet(), target);
  }

  // uint32 tbet_cbet_ip = 42;
  if (this->tbet_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->tbet_cbet_ip(), target);
  }

  // uint32 tbet_cbet_oop = 43;
  if (this->tbet_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->tbet_cbet_oop(), target);
  }

  // uint32 tbet_cbet_check_raise = 44;
  if (this->tbet_cbet_check_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->tbet_cbet_check_raise(), target);
  }

  // uint32 tbet_cbet_fold_to_raise = 45;
  if (this->tbet_cbet_fold_to_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->tbet_cbet_fold_to_raise(), target);
  }

  // uint32 tbet_cbet_call_raise = 46;
  if (this->tbet_cbet_call_raise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->tbet_cbet_call_raise(), target);
  }

  // uint32 tbet_cbet_reraise = 47;
  if (this->tbet_cbet_reraise() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->tbet_cbet_reraise(), target);
  }

  // uint32 tbet_barreling = 48;
  if (this->tbet_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->tbet_barreling(), target);
  }

  // uint32 tbet_double_barreling = 49;
  if (this->tbet_double_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->tbet_double_barreling(), target);
  }

  // uint32 tbet_tripple_barreling = 50;
  if (this->tbet_tripple_barreling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->tbet_tripple_barreling(), target);
  }

  // uint32 tbet_fold_to_cbet = 51;
  if (this->tbet_fold_to_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->tbet_fold_to_cbet(), target);
  }

  // uint32 tbet_fold_to_cbet_ip = 52;
  if (this->tbet_fold_to_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(52, this->tbet_fold_to_cbet_ip(), target);
  }

  // uint32 tbet_fold_to_cbet_oop = 53;
  if (this->tbet_fold_to_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(53, this->tbet_fold_to_cbet_oop(), target);
  }

  // uint32 tbet_call_cbet = 54;
  if (this->tbet_call_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->tbet_call_cbet(), target);
  }

  // uint32 tbet_call_cbet_ip = 55;
  if (this->tbet_call_cbet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->tbet_call_cbet_ip(), target);
  }

  // uint32 tbet_check_call_cbet_oop = 56;
  if (this->tbet_check_call_cbet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(56, this->tbet_check_call_cbet_oop(), target);
  }

  // uint32 tbet_raise_cbet = 57;
  if (this->tbet_raise_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(57, this->tbet_raise_cbet(), target);
  }

  // uint32 tbet_check_raise_cbet = 58;
  if (this->tbet_check_raise_cbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(58, this->tbet_check_raise_cbet(), target);
  }

  // uint32 tbet_miss_cbet_bet_ip = 59;
  if (this->tbet_miss_cbet_bet_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(59, this->tbet_miss_cbet_bet_ip(), target);
  }

  // uint32 tbet_miss_cbet_bet_oop = 60;
  if (this->tbet_miss_cbet_bet_oop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->tbet_miss_cbet_bet_oop(), target);
  }

  // uint32 tbet_donk = 61;
  if (this->tbet_donk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->tbet_donk(), target);
  }

  // uint32 tbet_call_fold_to_double_barrel = 62;
  if (this->tbet_call_fold_to_double_barrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(62, this->tbet_call_fold_to_double_barrel(), target);
  }

  // uint32 tbet_call_call_fold_to_tripple_barrel = 63;
  if (this->tbet_call_call_fold_to_tripple_barrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(63, this->tbet_call_call_fold_to_tripple_barrel(), target);
  }

  // uint32 bet_turn = 64;
  if (this->bet_turn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(64, this->bet_turn(), target);
  }

  // uint32 bet_turn_over_bet = 65;
  if (this->bet_turn_over_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(65, this->bet_turn_over_bet(), target);
  }

  // uint32 bet_turn_standard_bet = 66;
  if (this->bet_turn_standard_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(66, this->bet_turn_standard_bet(), target);
  }

  // uint32 bet_turn_half_pot = 67;
  if (this->bet_turn_half_pot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(67, this->bet_turn_half_pot(), target);
  }

  // uint32 bet_turn_small_pot = 68;
  if (this->bet_turn_small_pot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(68, this->bet_turn_small_pot(), target);
  }

  // uint32 raise_turn = 69;
  if (this->raise_turn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(69, this->raise_turn(), target);
  }

  // uint32 raise_turn_bluff = 70;
  if (this->raise_turn_bluff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(70, this->raise_turn_bluff(), target);
  }

  // uint32 raise_turn_bluff_toppair = 71;
  if (this->raise_turn_bluff_toppair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(71, this->raise_turn_bluff_toppair(), target);
  }

  // uint32 bet_river = 72;
  if (this->bet_river() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(72, this->bet_river(), target);
  }

  // uint32 bet_river_over_bet = 73;
  if (this->bet_river_over_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(73, this->bet_river_over_bet(), target);
  }

  // uint32 bet_river_standard_bet = 74;
  if (this->bet_river_standard_bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(74, this->bet_river_standard_bet(), target);
  }

  // uint32 bet_river_half_pot = 75;
  if (this->bet_river_half_pot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(75, this->bet_river_half_pot(), target);
  }

  // uint32 bet_river_small_pot = 76;
  if (this->bet_river_small_pot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(76, this->bet_river_small_pot(), target);
  }

  // uint32 bet_river_value = 77;
  if (this->bet_river_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(77, this->bet_river_value(), target);
  }

  // uint32 bet_river_bluff = 78;
  if (this->bet_river_bluff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(78, this->bet_river_bluff(), target);
  }

  // uint32 bet_river_bluff_toppair = 79;
  if (this->bet_river_bluff_toppair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(79, this->bet_river_bluff_toppair(), target);
  }

  // uint32 raise_river = 80;
  if (this->raise_river() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(80, this->raise_river(), target);
  }

  // uint32 raise_river_bluff = 81;
  if (this->raise_river_bluff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(81, this->raise_river_bluff(), target);
  }

  // uint32 raise_river_bluff_toppair = 82;
  if (this->raise_river_bluff_toppair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(82, this->raise_river_bluff_toppair(), target);
  }

  // uint32 call_down_river = 83;
  if (this->call_down_river() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(83, this->call_down_river(), target);
  }

  // string err_msg = 84;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.ThirdGameStatDataRsp.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->err_msg(), target);
  }

  // uint32 win = 85;
  if (this->win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(85, this->win(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.ThirdGameStatDataRsp)
  return target;
}

size_t ThirdGameStatDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.ThirdGameStatDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string err_msg = 84;
  if (this->err_msg().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  // int64 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  // int32 resultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // uint32 vpip = 3;
  if (this->vpip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vpip());
  }

  // uint32 pfr = 4;
  if (this->pfr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pfr());
  }

  // uint32 showdown = 5;
  if (this->showdown() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->showdown());
  }

  // uint32 cbet = 6;
  if (this->cbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cbet());
  }

  // uint32 win_showdown = 7;
  if (this->win_showdown() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->win_showdown());
  }

  // uint32 three_bet = 8;
  if (this->three_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->three_bet());
  }

  // uint32 vpip_bb = 9;
  if (this->vpip_bb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vpip_bb());
  }

  // uint32 vpip_btn = 10;
  if (this->vpip_btn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vpip_btn());
  }

  // uint32 fold_to_three_bet = 11;
  if (this->fold_to_three_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fold_to_three_bet());
  }

  // uint32 fold_to_four_bet = 12;
  if (this->fold_to_four_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fold_to_four_bet());
  }

  // uint32 four_bet = 13;
  if (this->four_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->four_bet());
  }

  // uint32 call_five_bet = 14;
  if (this->call_five_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->call_five_bet());
  }

  // uint32 fold_to_five_bet = 15;
  if (this->fold_to_five_bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fold_to_five_bet());
  }

  // uint32 limp = 16;
  if (this->limp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limp());
  }

  // uint32 limp_raise = 17;
  if (this->limp_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limp_raise());
  }

  // uint32 single_cbet = 18;
  if (this->single_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet());
  }

  // uint32 single_cbet_ip = 19;
  if (this->single_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_ip());
  }

  // uint32 single_cbet_oop = 20;
  if (this->single_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_oop());
  }

  // uint32 single_cbet_check_raise = 21;
  if (this->single_cbet_check_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_check_raise());
  }

  // uint32 single_cbet_fold_to_raise = 22;
  if (this->single_cbet_fold_to_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_fold_to_raise());
  }

  // uint32 single_cbet_call_raise = 23;
  if (this->single_cbet_call_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_call_raise());
  }

  // uint32 single_cbet_reraise = 24;
  if (this->single_cbet_reraise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_cbet_reraise());
  }

  // uint32 single_barreling = 25;
  if (this->single_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_barreling());
  }

  // uint32 single_double_barreling = 26;
  if (this->single_double_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_double_barreling());
  }

  // uint32 single_tripple_barreling = 27;
  if (this->single_tripple_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_tripple_barreling());
  }

  // uint32 single_fold_to_cbet = 28;
  if (this->single_fold_to_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_fold_to_cbet());
  }

  // uint32 single_fold_to_cbet_ip = 29;
  if (this->single_fold_to_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_fold_to_cbet_ip());
  }

  // uint32 single_fold_to_cbet_oop = 30;
  if (this->single_fold_to_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_fold_to_cbet_oop());
  }

  // uint32 single_call_cbet = 31;
  if (this->single_call_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_call_cbet());
  }

  // uint32 single_call_cbet_ip = 32;
  if (this->single_call_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_call_cbet_ip());
  }

  // uint32 single_check_call_cbet_oop = 33;
  if (this->single_check_call_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_check_call_cbet_oop());
  }

  // uint32 single_raise_cbet = 34;
  if (this->single_raise_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_raise_cbet());
  }

  // uint32 single_check_raise_cbet = 35;
  if (this->single_check_raise_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_check_raise_cbet());
  }

  // uint32 single_miss_cbet_bet_ip = 36;
  if (this->single_miss_cbet_bet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_miss_cbet_bet_ip());
  }

  // uint32 single_miss_cbet_bet_oop = 37;
  if (this->single_miss_cbet_bet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_miss_cbet_bet_oop());
  }

  // uint32 single_donk = 38;
  if (this->single_donk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_donk());
  }

  // uint32 single_call_fold_to_double_barrel = 39;
  if (this->single_call_fold_to_double_barrel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_call_fold_to_double_barrel());
  }

  // uint32 single_call_call_fold_to_tripple_barrel = 40;
  if (this->single_call_call_fold_to_tripple_barrel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->single_call_call_fold_to_tripple_barrel());
  }

  // uint32 tbet_cbet = 41;
  if (this->tbet_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet());
  }

  // uint32 tbet_cbet_ip = 42;
  if (this->tbet_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_ip());
  }

  // uint32 tbet_cbet_oop = 43;
  if (this->tbet_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_oop());
  }

  // uint32 tbet_cbet_check_raise = 44;
  if (this->tbet_cbet_check_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_check_raise());
  }

  // uint32 tbet_cbet_fold_to_raise = 45;
  if (this->tbet_cbet_fold_to_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_fold_to_raise());
  }

  // uint32 tbet_cbet_call_raise = 46;
  if (this->tbet_cbet_call_raise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_call_raise());
  }

  // uint32 tbet_cbet_reraise = 47;
  if (this->tbet_cbet_reraise() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_cbet_reraise());
  }

  // uint32 tbet_barreling = 48;
  if (this->tbet_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_barreling());
  }

  // uint32 tbet_double_barreling = 49;
  if (this->tbet_double_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_double_barreling());
  }

  // uint32 tbet_tripple_barreling = 50;
  if (this->tbet_tripple_barreling() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_tripple_barreling());
  }

  // uint32 tbet_fold_to_cbet = 51;
  if (this->tbet_fold_to_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_fold_to_cbet());
  }

  // uint32 tbet_fold_to_cbet_ip = 52;
  if (this->tbet_fold_to_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_fold_to_cbet_ip());
  }

  // uint32 tbet_fold_to_cbet_oop = 53;
  if (this->tbet_fold_to_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_fold_to_cbet_oop());
  }

  // uint32 tbet_call_cbet = 54;
  if (this->tbet_call_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_call_cbet());
  }

  // uint32 tbet_call_cbet_ip = 55;
  if (this->tbet_call_cbet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_call_cbet_ip());
  }

  // uint32 tbet_check_call_cbet_oop = 56;
  if (this->tbet_check_call_cbet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_check_call_cbet_oop());
  }

  // uint32 tbet_raise_cbet = 57;
  if (this->tbet_raise_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_raise_cbet());
  }

  // uint32 tbet_check_raise_cbet = 58;
  if (this->tbet_check_raise_cbet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_check_raise_cbet());
  }

  // uint32 tbet_miss_cbet_bet_ip = 59;
  if (this->tbet_miss_cbet_bet_ip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_miss_cbet_bet_ip());
  }

  // uint32 tbet_miss_cbet_bet_oop = 60;
  if (this->tbet_miss_cbet_bet_oop() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_miss_cbet_bet_oop());
  }

  // uint32 tbet_donk = 61;
  if (this->tbet_donk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_donk());
  }

  // uint32 tbet_call_fold_to_double_barrel = 62;
  if (this->tbet_call_fold_to_double_barrel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_call_fold_to_double_barrel());
  }

  // uint32 tbet_call_call_fold_to_tripple_barrel = 63;
  if (this->tbet_call_call_fold_to_tripple_barrel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tbet_call_call_fold_to_tripple_barrel());
  }

  // uint32 bet_turn = 64;
  if (this->bet_turn() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_turn());
  }

  // uint32 bet_turn_over_bet = 65;
  if (this->bet_turn_over_bet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_turn_over_bet());
  }

  // uint32 bet_turn_standard_bet = 66;
  if (this->bet_turn_standard_bet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_turn_standard_bet());
  }

  // uint32 bet_turn_half_pot = 67;
  if (this->bet_turn_half_pot() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_turn_half_pot());
  }

  // uint32 bet_turn_small_pot = 68;
  if (this->bet_turn_small_pot() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_turn_small_pot());
  }

  // uint32 raise_turn = 69;
  if (this->raise_turn() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_turn());
  }

  // uint32 raise_turn_bluff = 70;
  if (this->raise_turn_bluff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_turn_bluff());
  }

  // uint32 raise_turn_bluff_toppair = 71;
  if (this->raise_turn_bluff_toppair() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_turn_bluff_toppair());
  }

  // uint32 bet_river = 72;
  if (this->bet_river() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river());
  }

  // uint32 bet_river_over_bet = 73;
  if (this->bet_river_over_bet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_over_bet());
  }

  // uint32 bet_river_standard_bet = 74;
  if (this->bet_river_standard_bet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_standard_bet());
  }

  // uint32 bet_river_half_pot = 75;
  if (this->bet_river_half_pot() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_half_pot());
  }

  // uint32 bet_river_small_pot = 76;
  if (this->bet_river_small_pot() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_small_pot());
  }

  // uint32 bet_river_value = 77;
  if (this->bet_river_value() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_value());
  }

  // uint32 bet_river_bluff = 78;
  if (this->bet_river_bluff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_bluff());
  }

  // uint32 bet_river_bluff_toppair = 79;
  if (this->bet_river_bluff_toppair() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bet_river_bluff_toppair());
  }

  // uint32 raise_river = 80;
  if (this->raise_river() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_river());
  }

  // uint32 raise_river_bluff = 81;
  if (this->raise_river_bluff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_river_bluff());
  }

  // uint32 raise_river_bluff_toppair = 82;
  if (this->raise_river_bluff_toppair() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->raise_river_bluff_toppair());
  }

  // uint32 call_down_river = 83;
  if (this->call_down_river() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->call_down_river());
  }

  // uint32 win = 85;
  if (this->win() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->win());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdGameStatDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.ThirdGameStatDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ThirdGameStatDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdGameStatDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.ThirdGameStatDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.ThirdGameStatDataRsp)
    MergeFrom(*source);
  }
}

void ThirdGameStatDataRsp::MergeFrom(const ThirdGameStatDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.ThirdGameStatDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.vpip() != 0) {
    set_vpip(from.vpip());
  }
  if (from.pfr() != 0) {
    set_pfr(from.pfr());
  }
  if (from.showdown() != 0) {
    set_showdown(from.showdown());
  }
  if (from.cbet() != 0) {
    set_cbet(from.cbet());
  }
  if (from.win_showdown() != 0) {
    set_win_showdown(from.win_showdown());
  }
  if (from.three_bet() != 0) {
    set_three_bet(from.three_bet());
  }
  if (from.vpip_bb() != 0) {
    set_vpip_bb(from.vpip_bb());
  }
  if (from.vpip_btn() != 0) {
    set_vpip_btn(from.vpip_btn());
  }
  if (from.fold_to_three_bet() != 0) {
    set_fold_to_three_bet(from.fold_to_three_bet());
  }
  if (from.fold_to_four_bet() != 0) {
    set_fold_to_four_bet(from.fold_to_four_bet());
  }
  if (from.four_bet() != 0) {
    set_four_bet(from.four_bet());
  }
  if (from.call_five_bet() != 0) {
    set_call_five_bet(from.call_five_bet());
  }
  if (from.fold_to_five_bet() != 0) {
    set_fold_to_five_bet(from.fold_to_five_bet());
  }
  if (from.limp() != 0) {
    set_limp(from.limp());
  }
  if (from.limp_raise() != 0) {
    set_limp_raise(from.limp_raise());
  }
  if (from.single_cbet() != 0) {
    set_single_cbet(from.single_cbet());
  }
  if (from.single_cbet_ip() != 0) {
    set_single_cbet_ip(from.single_cbet_ip());
  }
  if (from.single_cbet_oop() != 0) {
    set_single_cbet_oop(from.single_cbet_oop());
  }
  if (from.single_cbet_check_raise() != 0) {
    set_single_cbet_check_raise(from.single_cbet_check_raise());
  }
  if (from.single_cbet_fold_to_raise() != 0) {
    set_single_cbet_fold_to_raise(from.single_cbet_fold_to_raise());
  }
  if (from.single_cbet_call_raise() != 0) {
    set_single_cbet_call_raise(from.single_cbet_call_raise());
  }
  if (from.single_cbet_reraise() != 0) {
    set_single_cbet_reraise(from.single_cbet_reraise());
  }
  if (from.single_barreling() != 0) {
    set_single_barreling(from.single_barreling());
  }
  if (from.single_double_barreling() != 0) {
    set_single_double_barreling(from.single_double_barreling());
  }
  if (from.single_tripple_barreling() != 0) {
    set_single_tripple_barreling(from.single_tripple_barreling());
  }
  if (from.single_fold_to_cbet() != 0) {
    set_single_fold_to_cbet(from.single_fold_to_cbet());
  }
  if (from.single_fold_to_cbet_ip() != 0) {
    set_single_fold_to_cbet_ip(from.single_fold_to_cbet_ip());
  }
  if (from.single_fold_to_cbet_oop() != 0) {
    set_single_fold_to_cbet_oop(from.single_fold_to_cbet_oop());
  }
  if (from.single_call_cbet() != 0) {
    set_single_call_cbet(from.single_call_cbet());
  }
  if (from.single_call_cbet_ip() != 0) {
    set_single_call_cbet_ip(from.single_call_cbet_ip());
  }
  if (from.single_check_call_cbet_oop() != 0) {
    set_single_check_call_cbet_oop(from.single_check_call_cbet_oop());
  }
  if (from.single_raise_cbet() != 0) {
    set_single_raise_cbet(from.single_raise_cbet());
  }
  if (from.single_check_raise_cbet() != 0) {
    set_single_check_raise_cbet(from.single_check_raise_cbet());
  }
  if (from.single_miss_cbet_bet_ip() != 0) {
    set_single_miss_cbet_bet_ip(from.single_miss_cbet_bet_ip());
  }
  if (from.single_miss_cbet_bet_oop() != 0) {
    set_single_miss_cbet_bet_oop(from.single_miss_cbet_bet_oop());
  }
  if (from.single_donk() != 0) {
    set_single_donk(from.single_donk());
  }
  if (from.single_call_fold_to_double_barrel() != 0) {
    set_single_call_fold_to_double_barrel(from.single_call_fold_to_double_barrel());
  }
  if (from.single_call_call_fold_to_tripple_barrel() != 0) {
    set_single_call_call_fold_to_tripple_barrel(from.single_call_call_fold_to_tripple_barrel());
  }
  if (from.tbet_cbet() != 0) {
    set_tbet_cbet(from.tbet_cbet());
  }
  if (from.tbet_cbet_ip() != 0) {
    set_tbet_cbet_ip(from.tbet_cbet_ip());
  }
  if (from.tbet_cbet_oop() != 0) {
    set_tbet_cbet_oop(from.tbet_cbet_oop());
  }
  if (from.tbet_cbet_check_raise() != 0) {
    set_tbet_cbet_check_raise(from.tbet_cbet_check_raise());
  }
  if (from.tbet_cbet_fold_to_raise() != 0) {
    set_tbet_cbet_fold_to_raise(from.tbet_cbet_fold_to_raise());
  }
  if (from.tbet_cbet_call_raise() != 0) {
    set_tbet_cbet_call_raise(from.tbet_cbet_call_raise());
  }
  if (from.tbet_cbet_reraise() != 0) {
    set_tbet_cbet_reraise(from.tbet_cbet_reraise());
  }
  if (from.tbet_barreling() != 0) {
    set_tbet_barreling(from.tbet_barreling());
  }
  if (from.tbet_double_barreling() != 0) {
    set_tbet_double_barreling(from.tbet_double_barreling());
  }
  if (from.tbet_tripple_barreling() != 0) {
    set_tbet_tripple_barreling(from.tbet_tripple_barreling());
  }
  if (from.tbet_fold_to_cbet() != 0) {
    set_tbet_fold_to_cbet(from.tbet_fold_to_cbet());
  }
  if (from.tbet_fold_to_cbet_ip() != 0) {
    set_tbet_fold_to_cbet_ip(from.tbet_fold_to_cbet_ip());
  }
  if (from.tbet_fold_to_cbet_oop() != 0) {
    set_tbet_fold_to_cbet_oop(from.tbet_fold_to_cbet_oop());
  }
  if (from.tbet_call_cbet() != 0) {
    set_tbet_call_cbet(from.tbet_call_cbet());
  }
  if (from.tbet_call_cbet_ip() != 0) {
    set_tbet_call_cbet_ip(from.tbet_call_cbet_ip());
  }
  if (from.tbet_check_call_cbet_oop() != 0) {
    set_tbet_check_call_cbet_oop(from.tbet_check_call_cbet_oop());
  }
  if (from.tbet_raise_cbet() != 0) {
    set_tbet_raise_cbet(from.tbet_raise_cbet());
  }
  if (from.tbet_check_raise_cbet() != 0) {
    set_tbet_check_raise_cbet(from.tbet_check_raise_cbet());
  }
  if (from.tbet_miss_cbet_bet_ip() != 0) {
    set_tbet_miss_cbet_bet_ip(from.tbet_miss_cbet_bet_ip());
  }
  if (from.tbet_miss_cbet_bet_oop() != 0) {
    set_tbet_miss_cbet_bet_oop(from.tbet_miss_cbet_bet_oop());
  }
  if (from.tbet_donk() != 0) {
    set_tbet_donk(from.tbet_donk());
  }
  if (from.tbet_call_fold_to_double_barrel() != 0) {
    set_tbet_call_fold_to_double_barrel(from.tbet_call_fold_to_double_barrel());
  }
  if (from.tbet_call_call_fold_to_tripple_barrel() != 0) {
    set_tbet_call_call_fold_to_tripple_barrel(from.tbet_call_call_fold_to_tripple_barrel());
  }
  if (from.bet_turn() != 0) {
    set_bet_turn(from.bet_turn());
  }
  if (from.bet_turn_over_bet() != 0) {
    set_bet_turn_over_bet(from.bet_turn_over_bet());
  }
  if (from.bet_turn_standard_bet() != 0) {
    set_bet_turn_standard_bet(from.bet_turn_standard_bet());
  }
  if (from.bet_turn_half_pot() != 0) {
    set_bet_turn_half_pot(from.bet_turn_half_pot());
  }
  if (from.bet_turn_small_pot() != 0) {
    set_bet_turn_small_pot(from.bet_turn_small_pot());
  }
  if (from.raise_turn() != 0) {
    set_raise_turn(from.raise_turn());
  }
  if (from.raise_turn_bluff() != 0) {
    set_raise_turn_bluff(from.raise_turn_bluff());
  }
  if (from.raise_turn_bluff_toppair() != 0) {
    set_raise_turn_bluff_toppair(from.raise_turn_bluff_toppair());
  }
  if (from.bet_river() != 0) {
    set_bet_river(from.bet_river());
  }
  if (from.bet_river_over_bet() != 0) {
    set_bet_river_over_bet(from.bet_river_over_bet());
  }
  if (from.bet_river_standard_bet() != 0) {
    set_bet_river_standard_bet(from.bet_river_standard_bet());
  }
  if (from.bet_river_half_pot() != 0) {
    set_bet_river_half_pot(from.bet_river_half_pot());
  }
  if (from.bet_river_small_pot() != 0) {
    set_bet_river_small_pot(from.bet_river_small_pot());
  }
  if (from.bet_river_value() != 0) {
    set_bet_river_value(from.bet_river_value());
  }
  if (from.bet_river_bluff() != 0) {
    set_bet_river_bluff(from.bet_river_bluff());
  }
  if (from.bet_river_bluff_toppair() != 0) {
    set_bet_river_bluff_toppair(from.bet_river_bluff_toppair());
  }
  if (from.raise_river() != 0) {
    set_raise_river(from.raise_river());
  }
  if (from.raise_river_bluff() != 0) {
    set_raise_river_bluff(from.raise_river_bluff());
  }
  if (from.raise_river_bluff_toppair() != 0) {
    set_raise_river_bluff_toppair(from.raise_river_bluff_toppair());
  }
  if (from.call_down_river() != 0) {
    set_call_down_river(from.call_down_river());
  }
  if (from.win() != 0) {
    set_win(from.win());
  }
}

void ThirdGameStatDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.ThirdGameStatDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdGameStatDataRsp::CopyFrom(const ThirdGameStatDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.ThirdGameStatDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThirdGameStatDataRsp::IsInitialized() const {
  return true;
}

void ThirdGameStatDataRsp::Swap(ThirdGameStatDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdGameStatDataRsp::InternalSwap(ThirdGameStatDataRsp* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_);
  swap(uid_, other->uid_);
  swap(resultcode_, other->resultcode_);
  swap(vpip_, other->vpip_);
  swap(pfr_, other->pfr_);
  swap(showdown_, other->showdown_);
  swap(cbet_, other->cbet_);
  swap(win_showdown_, other->win_showdown_);
  swap(three_bet_, other->three_bet_);
  swap(vpip_bb_, other->vpip_bb_);
  swap(vpip_btn_, other->vpip_btn_);
  swap(fold_to_three_bet_, other->fold_to_three_bet_);
  swap(fold_to_four_bet_, other->fold_to_four_bet_);
  swap(four_bet_, other->four_bet_);
  swap(call_five_bet_, other->call_five_bet_);
  swap(fold_to_five_bet_, other->fold_to_five_bet_);
  swap(limp_, other->limp_);
  swap(limp_raise_, other->limp_raise_);
  swap(single_cbet_, other->single_cbet_);
  swap(single_cbet_ip_, other->single_cbet_ip_);
  swap(single_cbet_oop_, other->single_cbet_oop_);
  swap(single_cbet_check_raise_, other->single_cbet_check_raise_);
  swap(single_cbet_fold_to_raise_, other->single_cbet_fold_to_raise_);
  swap(single_cbet_call_raise_, other->single_cbet_call_raise_);
  swap(single_cbet_reraise_, other->single_cbet_reraise_);
  swap(single_barreling_, other->single_barreling_);
  swap(single_double_barreling_, other->single_double_barreling_);
  swap(single_tripple_barreling_, other->single_tripple_barreling_);
  swap(single_fold_to_cbet_, other->single_fold_to_cbet_);
  swap(single_fold_to_cbet_ip_, other->single_fold_to_cbet_ip_);
  swap(single_fold_to_cbet_oop_, other->single_fold_to_cbet_oop_);
  swap(single_call_cbet_, other->single_call_cbet_);
  swap(single_call_cbet_ip_, other->single_call_cbet_ip_);
  swap(single_check_call_cbet_oop_, other->single_check_call_cbet_oop_);
  swap(single_raise_cbet_, other->single_raise_cbet_);
  swap(single_check_raise_cbet_, other->single_check_raise_cbet_);
  swap(single_miss_cbet_bet_ip_, other->single_miss_cbet_bet_ip_);
  swap(single_miss_cbet_bet_oop_, other->single_miss_cbet_bet_oop_);
  swap(single_donk_, other->single_donk_);
  swap(single_call_fold_to_double_barrel_, other->single_call_fold_to_double_barrel_);
  swap(single_call_call_fold_to_tripple_barrel_, other->single_call_call_fold_to_tripple_barrel_);
  swap(tbet_cbet_, other->tbet_cbet_);
  swap(tbet_cbet_ip_, other->tbet_cbet_ip_);
  swap(tbet_cbet_oop_, other->tbet_cbet_oop_);
  swap(tbet_cbet_check_raise_, other->tbet_cbet_check_raise_);
  swap(tbet_cbet_fold_to_raise_, other->tbet_cbet_fold_to_raise_);
  swap(tbet_cbet_call_raise_, other->tbet_cbet_call_raise_);
  swap(tbet_cbet_reraise_, other->tbet_cbet_reraise_);
  swap(tbet_barreling_, other->tbet_barreling_);
  swap(tbet_double_barreling_, other->tbet_double_barreling_);
  swap(tbet_tripple_barreling_, other->tbet_tripple_barreling_);
  swap(tbet_fold_to_cbet_, other->tbet_fold_to_cbet_);
  swap(tbet_fold_to_cbet_ip_, other->tbet_fold_to_cbet_ip_);
  swap(tbet_fold_to_cbet_oop_, other->tbet_fold_to_cbet_oop_);
  swap(tbet_call_cbet_, other->tbet_call_cbet_);
  swap(tbet_call_cbet_ip_, other->tbet_call_cbet_ip_);
  swap(tbet_check_call_cbet_oop_, other->tbet_check_call_cbet_oop_);
  swap(tbet_raise_cbet_, other->tbet_raise_cbet_);
  swap(tbet_check_raise_cbet_, other->tbet_check_raise_cbet_);
  swap(tbet_miss_cbet_bet_ip_, other->tbet_miss_cbet_bet_ip_);
  swap(tbet_miss_cbet_bet_oop_, other->tbet_miss_cbet_bet_oop_);
  swap(tbet_donk_, other->tbet_donk_);
  swap(tbet_call_fold_to_double_barrel_, other->tbet_call_fold_to_double_barrel_);
  swap(tbet_call_call_fold_to_tripple_barrel_, other->tbet_call_call_fold_to_tripple_barrel_);
  swap(bet_turn_, other->bet_turn_);
  swap(bet_turn_over_bet_, other->bet_turn_over_bet_);
  swap(bet_turn_standard_bet_, other->bet_turn_standard_bet_);
  swap(bet_turn_half_pot_, other->bet_turn_half_pot_);
  swap(bet_turn_small_pot_, other->bet_turn_small_pot_);
  swap(raise_turn_, other->raise_turn_);
  swap(raise_turn_bluff_, other->raise_turn_bluff_);
  swap(raise_turn_bluff_toppair_, other->raise_turn_bluff_toppair_);
  swap(bet_river_, other->bet_river_);
  swap(bet_river_over_bet_, other->bet_river_over_bet_);
  swap(bet_river_standard_bet_, other->bet_river_standard_bet_);
  swap(bet_river_half_pot_, other->bet_river_half_pot_);
  swap(bet_river_small_pot_, other->bet_river_small_pot_);
  swap(bet_river_value_, other->bet_river_value_);
  swap(bet_river_bluff_, other->bet_river_bluff_);
  swap(bet_river_bluff_toppair_, other->bet_river_bluff_toppair_);
  swap(raise_river_, other->raise_river_);
  swap(raise_river_bluff_, other->raise_river_bluff_);
  swap(raise_river_bluff_toppair_, other->raise_river_bluff_toppair_);
  swap(call_down_river_, other->call_down_river_);
  swap(win_, other->win_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdGameStatDataRsp::GetMetadata() const {
  protobuf_third_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_third_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pb

// @@protoc_insertion_point(global_scope)
