// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tpa.proto

#include "tpa.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Pb {
class TPAPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPAPlayer>
      _instance;
} _TPAPlayer_default_instance_;
class TPAPlayerStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPAPlayerState>
      _instance;
} _TPAPlayerState_default_instance_;
class TPAPlayerActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPAPlayerAction>
      _instance;
} _TPAPlayerAction_default_instance_;
class TPAPlayerCardsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPAPlayerCards>
      _instance;
} _TPAPlayerCards_default_instance_;
class TpaRegisterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaRegisterReq>
      _instance;
} _TpaRegisterReq_default_instance_;
class TpaRegisterRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaRegisterResp>
      _instance;
} _TpaRegisterResp_default_instance_;
class TpaKeepAliveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaKeepAliveReq>
      _instance;
} _TpaKeepAliveReq_default_instance_;
class TpaKeepAliveRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaKeepAliveResp>
      _instance;
} _TpaKeepAliveResp_default_instance_;
class TpaEnterRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaEnterRoomReq>
      _instance;
} _TpaEnterRoomReq_default_instance_;
class TpaEnterRoomRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaEnterRoomResp>
      _instance;
} _TpaEnterRoomResp_default_instance_;
class TpaAIEnterRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaAIEnterRoomReq>
      _instance;
} _TpaAIEnterRoomReq_default_instance_;
class TpaAIEnterRoomRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaAIEnterRoomResp>
      _instance;
} _TpaAIEnterRoomResp_default_instance_;
class TpaLeaveRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaLeaveRoomReq>
      _instance;
} _TpaLeaveRoomReq_default_instance_;
class TpaLeaveRoomRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaLeaveRoomResp>
      _instance;
} _TpaLeaveRoomResp_default_instance_;
class TpaNotifyDestroyRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaNotifyDestroyRoom>
      _instance;
} _TpaNotifyDestroyRoom_default_instance_;
class TpaSetPlayerStateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaSetPlayerStateReq>
      _instance;
} _TpaSetPlayerStateReq_default_instance_;
class TpaSetPlayerStateRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaSetPlayerStateResp>
      _instance;
} _TpaSetPlayerStateResp_default_instance_;
class TpaSetDealerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaSetDealerReq>
      _instance;
} _TpaSetDealerReq_default_instance_;
class TpaSetDealerRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaSetDealerResp>
      _instance;
} _TpaSetDealerResp_default_instance_;
class TpaQueryCardsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryCardsReq>
      _instance;
} _TpaQueryCardsReq_default_instance_;
class TpaQueryCardsRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryCardsResp>
      _instance;
} _TpaQueryCardsResp_default_instance_;
class TpaQueryAllowActionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryAllowActionReq>
      _instance;
} _TpaQueryAllowActionReq_default_instance_;
class TpaQueryAllowActionRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryAllowActionResp>
      _instance;
} _TpaQueryAllowActionResp_default_instance_;
class TpaQueryMatchStateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryMatchStateReq>
      _instance;
} _TpaQueryMatchStateReq_default_instance_;
class TpaQueryMatchStateRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryMatchStateResp>
      _instance;
} _TpaQueryMatchStateResp_default_instance_;
class TpaReportActionTokenReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaReportActionTokenReq>
      _instance;
} _TpaReportActionTokenReq_default_instance_;
class TpaReportActionTokenRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaReportActionTokenResp>
      _instance;
} _TpaReportActionTokenResp_default_instance_;
class TpaReportPlayerActionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaReportPlayerActionReq>
      _instance;
} _TpaReportPlayerActionReq_default_instance_;
class TpaReportPlayerActionRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaReportPlayerActionResp>
      _instance;
} _TpaReportPlayerActionResp_default_instance_;
class TpaQueryAIActionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryAIActionReq>
      _instance;
} _TpaQueryAIActionReq_default_instance_;
class TpaQueryAIActionRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TpaQueryAIActionResp>
      _instance;
} _TpaQueryAIActionResp_default_instance_;
}  // namespace Pb
namespace protobuf_tpa_2eproto {
void InitDefaultsTPAPlayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TPAPlayer_default_instance_;
    new (ptr) ::Pb::TPAPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TPAPlayer::InitAsDefaultInstance();
}

void InitDefaultsTPAPlayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPAPlayerImpl);
}

void InitDefaultsTPAPlayerStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TPAPlayerState_default_instance_;
    new (ptr) ::Pb::TPAPlayerState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TPAPlayerState::InitAsDefaultInstance();
}

void InitDefaultsTPAPlayerState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPAPlayerStateImpl);
}

void InitDefaultsTPAPlayerActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TPAPlayerAction_default_instance_;
    new (ptr) ::Pb::TPAPlayerAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TPAPlayerAction::InitAsDefaultInstance();
}

void InitDefaultsTPAPlayerAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPAPlayerActionImpl);
}

void InitDefaultsTPAPlayerCardsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TPAPlayerCards_default_instance_;
    new (ptr) ::Pb::TPAPlayerCards();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TPAPlayerCards::InitAsDefaultInstance();
}

void InitDefaultsTPAPlayerCards() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPAPlayerCardsImpl);
}

void InitDefaultsTpaRegisterReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaRegisterReq_default_instance_;
    new (ptr) ::Pb::TpaRegisterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaRegisterReq::InitAsDefaultInstance();
}

void InitDefaultsTpaRegisterReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaRegisterReqImpl);
}

void InitDefaultsTpaRegisterRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaRegisterResp_default_instance_;
    new (ptr) ::Pb::TpaRegisterResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaRegisterResp::InitAsDefaultInstance();
}

void InitDefaultsTpaRegisterResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaRegisterRespImpl);
}

void InitDefaultsTpaKeepAliveReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaKeepAliveReq_default_instance_;
    new (ptr) ::Pb::TpaKeepAliveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaKeepAliveReq::InitAsDefaultInstance();
}

void InitDefaultsTpaKeepAliveReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaKeepAliveReqImpl);
}

void InitDefaultsTpaKeepAliveRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaKeepAliveResp_default_instance_;
    new (ptr) ::Pb::TpaKeepAliveResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaKeepAliveResp::InitAsDefaultInstance();
}

void InitDefaultsTpaKeepAliveResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaKeepAliveRespImpl);
}

void InitDefaultsTpaEnterRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaEnterRoomReq_default_instance_;
    new (ptr) ::Pb::TpaEnterRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaEnterRoomReq::InitAsDefaultInstance();
}

void InitDefaultsTpaEnterRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaEnterRoomReqImpl);
}

void InitDefaultsTpaEnterRoomRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaEnterRoomResp_default_instance_;
    new (ptr) ::Pb::TpaEnterRoomResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaEnterRoomResp::InitAsDefaultInstance();
}

void InitDefaultsTpaEnterRoomResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaEnterRoomRespImpl);
}

void InitDefaultsTpaAIEnterRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaAIEnterRoomReq_default_instance_;
    new (ptr) ::Pb::TpaAIEnterRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaAIEnterRoomReq::InitAsDefaultInstance();
}

void InitDefaultsTpaAIEnterRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaAIEnterRoomReqImpl);
}

void InitDefaultsTpaAIEnterRoomRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaAIEnterRoomResp_default_instance_;
    new (ptr) ::Pb::TpaAIEnterRoomResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaAIEnterRoomResp::InitAsDefaultInstance();
}

void InitDefaultsTpaAIEnterRoomResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaAIEnterRoomRespImpl);
}

void InitDefaultsTpaLeaveRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaLeaveRoomReq_default_instance_;
    new (ptr) ::Pb::TpaLeaveRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaLeaveRoomReq::InitAsDefaultInstance();
}

void InitDefaultsTpaLeaveRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaLeaveRoomReqImpl);
}

void InitDefaultsTpaLeaveRoomRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaLeaveRoomResp_default_instance_;
    new (ptr) ::Pb::TpaLeaveRoomResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaLeaveRoomResp::InitAsDefaultInstance();
}

void InitDefaultsTpaLeaveRoomResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaLeaveRoomRespImpl);
}

void InitDefaultsTpaNotifyDestroyRoomImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaNotifyDestroyRoom_default_instance_;
    new (ptr) ::Pb::TpaNotifyDestroyRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaNotifyDestroyRoom::InitAsDefaultInstance();
}

void InitDefaultsTpaNotifyDestroyRoom() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaNotifyDestroyRoomImpl);
}

void InitDefaultsTpaSetPlayerStateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaSetPlayerStateReq_default_instance_;
    new (ptr) ::Pb::TpaSetPlayerStateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaSetPlayerStateReq::InitAsDefaultInstance();
}

void InitDefaultsTpaSetPlayerStateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaSetPlayerStateReqImpl);
}

void InitDefaultsTpaSetPlayerStateRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  {
    void* ptr = &::Pb::_TpaSetPlayerStateResp_default_instance_;
    new (ptr) ::Pb::TpaSetPlayerStateResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaSetPlayerStateResp::InitAsDefaultInstance();
}

void InitDefaultsTpaSetPlayerStateResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaSetPlayerStateRespImpl);
}

void InitDefaultsTpaSetDealerReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaSetDealerReq_default_instance_;
    new (ptr) ::Pb::TpaSetDealerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaSetDealerReq::InitAsDefaultInstance();
}

void InitDefaultsTpaSetDealerReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaSetDealerReqImpl);
}

void InitDefaultsTpaSetDealerRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayerState();
  {
    void* ptr = &::Pb::_TpaSetDealerResp_default_instance_;
    new (ptr) ::Pb::TpaSetDealerResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaSetDealerResp::InitAsDefaultInstance();
}

void InitDefaultsTpaSetDealerResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaSetDealerRespImpl);
}

void InitDefaultsTpaQueryCardsReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryCardsReq_default_instance_;
    new (ptr) ::Pb::TpaQueryCardsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryCardsReq::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryCardsReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryCardsReqImpl);
}

void InitDefaultsTpaQueryCardsRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayerCards();
  {
    void* ptr = &::Pb::_TpaQueryCardsResp_default_instance_;
    new (ptr) ::Pb::TpaQueryCardsResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryCardsResp::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryCardsResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryCardsRespImpl);
}

void InitDefaultsTpaQueryAllowActionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryAllowActionReq_default_instance_;
    new (ptr) ::Pb::TpaQueryAllowActionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryAllowActionReq::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryAllowActionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryAllowActionReqImpl);
}

void InitDefaultsTpaQueryAllowActionRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryAllowActionResp_default_instance_;
    new (ptr) ::Pb::TpaQueryAllowActionResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryAllowActionResp::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryAllowActionResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryAllowActionRespImpl);
}

void InitDefaultsTpaQueryMatchStateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryMatchStateReq_default_instance_;
    new (ptr) ::Pb::TpaQueryMatchStateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryMatchStateReq::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryMatchStateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryMatchStateReqImpl);
}

void InitDefaultsTpaQueryMatchStateRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tpa_2eproto::InitDefaultsTPAPlayerState();
  protobuf_tpa_2eproto::InitDefaultsTPAPlayerAction();
  {
    void* ptr = &::Pb::_TpaQueryMatchStateResp_default_instance_;
    new (ptr) ::Pb::TpaQueryMatchStateResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryMatchStateResp::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryMatchStateResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryMatchStateRespImpl);
}

void InitDefaultsTpaReportActionTokenReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaReportActionTokenReq_default_instance_;
    new (ptr) ::Pb::TpaReportActionTokenReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaReportActionTokenReq::InitAsDefaultInstance();
}

void InitDefaultsTpaReportActionTokenReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaReportActionTokenReqImpl);
}

void InitDefaultsTpaReportActionTokenRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaReportActionTokenResp_default_instance_;
    new (ptr) ::Pb::TpaReportActionTokenResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaReportActionTokenResp::InitAsDefaultInstance();
}

void InitDefaultsTpaReportActionTokenResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaReportActionTokenRespImpl);
}

void InitDefaultsTpaReportPlayerActionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaReportPlayerActionReq_default_instance_;
    new (ptr) ::Pb::TpaReportPlayerActionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaReportPlayerActionReq::InitAsDefaultInstance();
}

void InitDefaultsTpaReportPlayerActionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaReportPlayerActionReqImpl);
}

void InitDefaultsTpaReportPlayerActionRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaReportPlayerActionResp_default_instance_;
    new (ptr) ::Pb::TpaReportPlayerActionResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaReportPlayerActionResp::InitAsDefaultInstance();
}

void InitDefaultsTpaReportPlayerActionResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaReportPlayerActionRespImpl);
}

void InitDefaultsTpaQueryAIActionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryAIActionReq_default_instance_;
    new (ptr) ::Pb::TpaQueryAIActionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryAIActionReq::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryAIActionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryAIActionReqImpl);
}

void InitDefaultsTpaQueryAIActionRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Pb::_TpaQueryAIActionResp_default_instance_;
    new (ptr) ::Pb::TpaQueryAIActionResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pb::TpaQueryAIActionResp::InitAsDefaultInstance();
}

void InitDefaultsTpaQueryAIActionResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTpaQueryAIActionRespImpl);
}

::google::protobuf::Metadata file_level_metadata[31];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayer, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayer, seat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayer, is_ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayer, money_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, seat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, spent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, fold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerState, hole_cards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, seat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerAction, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerCards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerCards, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TPAPlayerCards, hole_cards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterReq, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterResp, ai_server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaRegisterResp, conn_unique_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaKeepAliveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaKeepAliveReq, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaKeepAliveReq, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaKeepAliveResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaKeepAliveResp, ai_server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomReq, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomReq, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomResp, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaEnterRoomResp, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomReq, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomReq, player_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomReq, constant_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomResp, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomResp, player_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaAIEnterRoomResp, constant_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomReq, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaLeaveRoomResp, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaNotifyDestroyRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaNotifyDestroyRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaNotifyDestroyRoom, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateReq, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetPlayerStateResp, player_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerReq, dealer_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerReq, dealer_seat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, dealer_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, hand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, max_spent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaSetDealerResp, player_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsReq, round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, flop_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, turn_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, river_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, player_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryCardsResp, dealer_player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionReq, player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionResp, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAllowActionResp, allow_raise_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateReq, round_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, dealer_player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, hand_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, max_spent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, flop_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, turn_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, river_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, allow_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, player_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, player_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryMatchStateResp, turn_player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenReq, player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportActionTokenResp, player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionReq, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionReq, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionReq, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaReportPlayerActionResp, allow_raise_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionReq, player_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pb::TpaQueryAIActionResp, allow_raise_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pb::TPAPlayer)},
  { 9, -1, sizeof(::Pb::TPAPlayerState)},
  { 19, -1, sizeof(::Pb::TPAPlayerAction)},
  { 29, -1, sizeof(::Pb::TPAPlayerCards)},
  { 36, -1, sizeof(::Pb::TpaRegisterReq)},
  { 43, -1, sizeof(::Pb::TpaRegisterResp)},
  { 50, -1, sizeof(::Pb::TpaKeepAliveReq)},
  { 57, -1, sizeof(::Pb::TpaKeepAliveResp)},
  { 63, -1, sizeof(::Pb::TpaEnterRoomReq)},
  { 71, -1, sizeof(::Pb::TpaEnterRoomResp)},
  { 79, -1, sizeof(::Pb::TpaAIEnterRoomReq)},
  { 88, -1, sizeof(::Pb::TpaAIEnterRoomResp)},
  { 97, -1, sizeof(::Pb::TpaLeaveRoomReq)},
  { 104, -1, sizeof(::Pb::TpaLeaveRoomResp)},
  { 111, -1, sizeof(::Pb::TpaNotifyDestroyRoom)},
  { 118, -1, sizeof(::Pb::TpaSetPlayerStateReq)},
  { 125, -1, sizeof(::Pb::TpaSetPlayerStateResp)},
  { 132, -1, sizeof(::Pb::TpaSetDealerReq)},
  { 140, -1, sizeof(::Pb::TpaSetDealerResp)},
  { 150, -1, sizeof(::Pb::TpaQueryCardsReq)},
  { 157, -1, sizeof(::Pb::TpaQueryCardsResp)},
  { 170, -1, sizeof(::Pb::TpaQueryAllowActionReq)},
  { 177, -1, sizeof(::Pb::TpaQueryAllowActionResp)},
  { 185, -1, sizeof(::Pb::TpaQueryMatchStateReq)},
  { 192, -1, sizeof(::Pb::TpaQueryMatchStateResp)},
  { 210, -1, sizeof(::Pb::TpaReportActionTokenReq)},
  { 217, -1, sizeof(::Pb::TpaReportActionTokenResp)},
  { 224, -1, sizeof(::Pb::TpaReportPlayerActionReq)},
  { 233, -1, sizeof(::Pb::TpaReportPlayerActionResp)},
  { 243, -1, sizeof(::Pb::TpaQueryAIActionReq)},
  { 250, -1, sizeof(::Pb::TpaQueryAIActionResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TPAPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TPAPlayerState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TPAPlayerAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TPAPlayerCards_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaRegisterResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaKeepAliveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaKeepAliveResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaEnterRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaEnterRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaAIEnterRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaAIEnterRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaLeaveRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaLeaveRoomResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaNotifyDestroyRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaSetPlayerStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaSetPlayerStateResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaSetDealerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaSetDealerResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryCardsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryCardsResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryAllowActionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryAllowActionResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryMatchStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryMatchStateResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaReportActionTokenReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaReportActionTokenResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaReportPlayerActionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaReportPlayerActionResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryAIActionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pb::_TpaQueryAIActionResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tpa.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 31);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ttpa.proto\022\002Pb\"M\n\tTPAPlayer\022\021\n\tplayer_i"
      "d\030\001 \001(\004\022\014\n\004seat\030\002 \001(\005\022\020\n\010is_ready\030\003 \001(\005\022"
      "\r\n\005money\030\004 \001(\005\"b\n\016TPAPlayerState\022\021\n\tplay"
      "er_id\030\001 \001(\004\022\014\n\004seat\030\002 \001(\005\022\r\n\005spent\030\003 \001(\r"
      "\022\014\n\004fold\030\004 \001(\r\022\022\n\nhole_cards\030\005 \003(\005\"]\n\017TP"
      "APlayerAction\022\021\n\tplayer_id\030\001 \001(\004\022\014\n\004seat"
      "\030\002 \001(\005\022\r\n\005round\030\003 \001(\005\022\014\n\004type\030\004 \001(\r\022\014\n\004s"
      "ize\030\005 \001(\005\"7\n\016TPAPlayerCards\022\021\n\tplayer_id"
      "\030\001 \001(\004\022\022\n\nhole_cards\030\002 \003(\005\"2\n\016TpaRegiste"
      "rReq\022\r\n\005token\030\001 \001(\t\022\021\n\tserver_id\030\002 \001(\r\"\?"
      "\n\017TpaRegisterResp\022\024\n\014ai_server_id\030\001 \001(\r\022"
      "\026\n\016conn_unique_id\030\002 \001(\004\"7\n\017TpaKeepAliveR"
      "eq\022\021\n\tserver_id\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r"
      "\"(\n\020TpaKeepAliveResp\022\024\n\014ai_server_id\030\001 \001"
      "(\r\"Y\n\017TpaEnterRoomReq\022\017\n\007room_id\030\001 \001(\r\022\021"
      "\n\tgame_type\030\002 \001(\r\022\"\n\013player_list\030\003 \003(\0132\r"
      ".Pb.TPAPlayer\"Z\n\020TpaEnterRoomResp\022\017\n\007roo"
      "m_id\030\001 \001(\r\022\021\n\tgame_type\030\002 \001(\r\022\"\n\013player_"
      "list\030\003 \003(\0132\r.Pb.TPAPlayer\"s\n\021TpaAIEnterR"
      "oomReq\022\017\n\007room_id\030\001 \001(\r\022\021\n\tgame_type\030\002 \001"
      "(\r\022\"\n\013player_list\030\003 \003(\0132\r.Pb.TPAPlayer\022\026"
      "\n\016constant_token\030\004 \001(\t\"t\n\022TpaAIEnterRoom"
      "Resp\022\017\n\007room_id\030\001 \001(\r\022\021\n\tgame_type\030\002 \001(\r"
      "\022\"\n\013player_list\030\003 \003(\0132\r.Pb.TPAPlayer\022\026\n\016"
      "constant_token\030\004 \001(\t\"F\n\017TpaLeaveRoomReq\022"
      "\017\n\007room_id\030\001 \001(\r\022\"\n\013player_list\030\002 \003(\0132\r."
      "Pb.TPAPlayer\"G\n\020TpaLeaveRoomResp\022\017\n\007room"
      "_id\030\001 \001(\r\022\"\n\013player_list\030\002 \003(\0132\r.Pb.TPAP"
      "layer\"7\n\024TpaNotifyDestroyRoom\022\017\n\007room_id"
      "\030\001 \001(\r\022\016\n\006reason\030\002 \001(\r\"K\n\024TpaSetPlayerSt"
      "ateReq\022\017\n\007room_id\030\001 \001(\r\022\"\n\013player_list\030\002"
      " \003(\0132\r.Pb.TPAPlayer\"L\n\025TpaSetPlayerState"
      "Resp\022\017\n\007room_id\030\001 \001(\r\022\"\n\013player_list\030\002 \003"
      "(\0132\r.Pb.TPAPlayer\"Q\n\017TpaSetDealerReq\022\017\n\007"
      "room_id\030\001 \001(\r\022\030\n\020dealer_player_id\030\002 \001(\004\022"
      "\023\n\013dealer_seat\030\003 \001(\005\"\213\001\n\020TpaSetDealerRes"
      "p\022\017\n\007room_id\030\001 \001(\r\022\030\n\020dealer_player_id\030\002"
      " \001(\004\022\017\n\007hand_id\030\003 \001(\r\022\021\n\tmax_spent\030\004 \001(\r"
      "\022(\n\014player_state\030\005 \003(\0132\022.Pb.TPAPlayerSta"
      "te\"2\n\020TpaQueryCardsReq\022\017\n\007room_id\030\001 \001(\r\022"
      "\r\n\005round\030\002 \001(\005\"\306\001\n\021TpaQueryCardsResp\022\017\n\007"
      "room_id\030\001 \001(\r\022\r\n\005round\030\002 \001(\005\022\020\n\010finished"
      "\030\003 \001(\r\022\022\n\nflop_cards\030\004 \003(\005\022\022\n\nturn_cards"
      "\030\005 \003(\005\022\023\n\013river_cards\030\006 \003(\005\022(\n\014player_ca"
      "rds\030\007 \003(\0132\022.Pb.TPAPlayerCards\022\030\n\020dealer_"
      "player_id\030\010 \001(\004\"<\n\026TpaQueryAllowActionRe"
      "q\022\017\n\007room_id\030\001 \001(\r\022\021\n\tplayer_id\030\002 \001(\004\"R\n"
      "\027TpaQueryAllowActionResp\022\017\n\007room_id\030\001 \001("
      "\r\022\021\n\tplayer_id\030\002 \001(\004\022\023\n\013allow_raise\030\003 \003("
      "\r\"7\n\025TpaQueryMatchStateReq\022\017\n\007room_id\030\001 "
      "\001(\r\022\r\n\005round\030\002 \001(\005\"\310\002\n\026TpaQueryMatchStat"
      "eResp\022\017\n\007room_id\030\001 \001(\r\022\030\n\020dealer_player_"
      "id\030\002 \001(\004\022\017\n\007hand_id\030\003 \001(\r\022\r\n\005round\030\004 \001(\005"
      "\022\020\n\010finished\030\005 \001(\r\022\021\n\tmax_spent\030\006 \001(\r\022\022\n"
      "\nflop_cards\030\007 \003(\005\022\022\n\nturn_cards\030\010 \003(\005\022\023\n"
      "\013river_cards\030\t \003(\005\022\023\n\013allow_raise\030\n \003(\r\022"
      "(\n\014player_state\030\013 \003(\0132\022.Pb.TPAPlayerStat"
      "e\022*\n\rplayer_action\030\014 \003(\0132\023.Pb.TPAPlayerA"
      "ction\022\026\n\016turn_player_id\030\r \001(\004\"=\n\027TpaRepo"
      "rtActionTokenReq\022\017\n\007room_id\030\001 \001(\r\022\021\n\tpla"
      "yer_id\030\002 \001(\004\">\n\030TpaReportActionTokenResp"
      "\022\017\n\007room_id\030\001 \001(\r\022\021\n\tplayer_id\030\002 \001(\004\"a\n\030"
      "TpaReportPlayerActionReq\022\017\n\007room_id\030\001 \001("
      "\r\022\021\n\tplayer_id\030\002 \001(\004\022\023\n\013action_type\030\003 \001("
      "\r\022\014\n\004size\030\004 \001(\r\"w\n\031TpaReportPlayerAction"
      "Resp\022\017\n\007room_id\030\001 \001(\r\022\021\n\tplayer_id\030\002 \001(\004"
      "\022\023\n\013action_type\030\003 \001(\r\022\014\n\004size\030\004 \001(\r\022\023\n\013a"
      "llow_raise\030\005 \003(\r\"9\n\023TpaQueryAIActionReq\022"
      "\017\n\007room_id\030\001 \001(\r\022\021\n\tplayer_id\030\002 \001(\004\"r\n\024T"
      "paQueryAIActionResp\022\017\n\007room_id\030\001 \001(\r\022\021\n\t"
      "player_id\030\002 \001(\004\022\023\n\013action_type\030\003 \001(\r\022\014\n\004"
      "size\030\004 \001(\r\022\023\n\013allow_raise\030\005 \003(\r*\352\003\n\007TPA_"
      "CMD\022\026\n\022CMD_TPA_NOT_DEFINE\020\000\022\021\n\013CMD_TPA_M"
      "IN\020\220\277\005\022\026\n\020CMD_TPA_REGISTER\020\221\277\005\022\030\n\022CMD_TP"
      "A_KEEP_ALIVE\020\222\277\005\022\030\n\022CMD_TPA_ENTER_ROOM\020\233"
      "\277\005\022\033\n\025CMD_TPA_AI_ENTER_ROOM\020\234\277\005\022\030\n\022CMD_T"
      "PA_LEAVE_ROOM\020\236\277\005\022\032\n\024CMD_TPA_DESTROY_ROO"
      "M\020\237\277\005\022\036\n\030CMD_TPA_SET_PLAYER_STATE\020\241\277\005\022\030\n"
      "\022CMD_TPA_SET_DEALER\020\242\277\005\022\037\n\031CMD_TPA_QUERY"
      "_MATCH_CARDS\020\245\277\005\022 \n\032CMD_TPA_QUERY_ALLOW_"
      "ACTION\020\246\277\005\022\037\n\031CMD_TPA_QUERY_MATCH_STATE\020"
      "\247\277\005\022\035\n\027CMD_TPA_QUERY_AI_ACTION\020\250\277\005\022!\n\033CM"
      "D_TPA_REPORT_ACTION_TOKEN\020\251\277\005\022\"\n\034CMD_TPA"
      "_REPORT_PLAYER_ACTION\020\252\277\005\022\021\n\013CMD_TPA_MAX"
      "\020\224\306\005*\210\004\n\013TPA_ERRCODE\022\n\n\006TPA_OK\020\000\022#\n\035ERR_"
      "TPA_AUTH_SERVERID_INVALID\020\211\375\r\022\036\n\030ERR_TPA"
      "_AUTH_SERVERID_IP\020\212\375\r\022\030\n\022ERR_TPA_AUTH_TO"
      "KEN\020\213\375\r\022\035\n\027ERR_TPA_CONN_ID_INVALID\020\214\375\r\022\030"
      "\n\022ERR_TPA_ENTER_ROOM\020\222\375\r\022\033\n\025ERR_TPA_AI_E"
      "NTER_ROOM\020\234\375\r\022\030\n\022ERR_TPA_LEAVE_ROOM\020\246\375\r\022"
      "\032\n\024ERR_TPA_DESTROY_ROOM\020\260\375\r\022\036\n\030ERR_TPA_S"
      "ET_PLAYER_STATE\020\272\375\r\022\030\n\022ERR_TPA_SET_DEALE"
      "R\020\304\375\r\022\037\n\031ERR_TPA_QUERY_MATCH_CARDS\020\316\375\r\022 "
      "\n\032ERR_TPA_QUERY_ALLOW_ACTION\020\330\375\r\022\037\n\031ERR_"
      "TPA_QUERY_MATCH_STATE\020\342\375\r\022\035\n\027ERR_TPA_QUE"
      "RY_AI_ACTION\020\366\375\r\022!\n\033ERR_TPA_REPORT_ACTIO"
      "N_TOKEN\020\200\376\r\022\"\n\034ERR_TPA_REPORT_PLAYER_ACT"
      "ION\020\212\376\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3895);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tpa.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tpa_2eproto
namespace Pb {
const ::google::protobuf::EnumDescriptor* TPA_CMD_descriptor() {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tpa_2eproto::file_level_enum_descriptors[0];
}
bool TPA_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 90000:
    case 90001:
    case 90002:
    case 90011:
    case 90012:
    case 90014:
    case 90015:
    case 90017:
    case 90018:
    case 90021:
    case 90022:
    case 90023:
    case 90024:
    case 90025:
    case 90026:
    case 90900:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TPA_ERRCODE_descriptor() {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tpa_2eproto::file_level_enum_descriptors[1];
}
bool TPA_ERRCODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 229001:
    case 229002:
    case 229003:
    case 229004:
    case 229010:
    case 229020:
    case 229030:
    case 229040:
    case 229050:
    case 229060:
    case 229070:
    case 229080:
    case 229090:
    case 229110:
    case 229120:
    case 229130:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TPAPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPAPlayer::kPlayerIdFieldNumber;
const int TPAPlayer::kSeatFieldNumber;
const int TPAPlayer::kIsReadyFieldNumber;
const int TPAPlayer::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPAPlayer::TPAPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TPAPlayer)
}
TPAPlayer::TPAPlayer(const TPAPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:Pb.TPAPlayer)
}

void TPAPlayer::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(money_));
  _cached_size_ = 0;
}

TPAPlayer::~TPAPlayer() {
  // @@protoc_insertion_point(destructor:Pb.TPAPlayer)
  SharedDtor();
}

void TPAPlayer::SharedDtor() {
}

void TPAPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPAPlayer::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPAPlayer& TPAPlayer::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTPAPlayer();
  return *internal_default_instance();
}

TPAPlayer* TPAPlayer::New(::google::protobuf::Arena* arena) const {
  TPAPlayer* n = new TPAPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPAPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TPAPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(money_));
  _internal_metadata_.Clear();
}

bool TPAPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TPAPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_ready = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 money = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TPAPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TPAPlayer)
  return false;
#undef DO_
}

void TPAPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TPAPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seat(), output);
  }

  // int32 is_ready = 3;
  if (this->is_ready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_ready(), output);
  }

  // int32 money = 4;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TPAPlayer)
}

::google::protobuf::uint8* TPAPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TPAPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seat(), target);
  }

  // int32 is_ready = 3;
  if (this->is_ready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_ready(), target);
  }

  // int32 money = 4;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->money(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TPAPlayer)
  return target;
}

size_t TPAPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TPAPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  // int32 is_ready = 3;
  if (this->is_ready() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_ready());
  }

  // int32 money = 4;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPAPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TPAPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const TPAPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPAPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TPAPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TPAPlayer)
    MergeFrom(*source);
  }
}

void TPAPlayer::MergeFrom(const TPAPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TPAPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.seat() != 0) {
    set_seat(from.seat());
  }
  if (from.is_ready() != 0) {
    set_is_ready(from.is_ready());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
}

void TPAPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TPAPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPAPlayer::CopyFrom(const TPAPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TPAPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPAPlayer::IsInitialized() const {
  return true;
}

void TPAPlayer::Swap(TPAPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPAPlayer::InternalSwap(TPAPlayer* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(seat_, other->seat_);
  swap(is_ready_, other->is_ready_);
  swap(money_, other->money_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPAPlayer::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPAPlayerState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPAPlayerState::kPlayerIdFieldNumber;
const int TPAPlayerState::kSeatFieldNumber;
const int TPAPlayerState::kSpentFieldNumber;
const int TPAPlayerState::kFoldFieldNumber;
const int TPAPlayerState::kHoleCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPAPlayerState::TPAPlayerState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TPAPlayerState)
}
TPAPlayerState::TPAPlayerState(const TPAPlayerState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hole_cards_(from.hole_cards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&fold_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(fold_));
  // @@protoc_insertion_point(copy_constructor:Pb.TPAPlayerState)
}

void TPAPlayerState::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fold_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(fold_));
  _cached_size_ = 0;
}

TPAPlayerState::~TPAPlayerState() {
  // @@protoc_insertion_point(destructor:Pb.TPAPlayerState)
  SharedDtor();
}

void TPAPlayerState::SharedDtor() {
}

void TPAPlayerState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPAPlayerState::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPAPlayerState& TPAPlayerState::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerState();
  return *internal_default_instance();
}

TPAPlayerState* TPAPlayerState::New(::google::protobuf::Arena* arena) const {
  TPAPlayerState* n = new TPAPlayerState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPAPlayerState::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TPAPlayerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hole_cards_.Clear();
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fold_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(fold_));
  _internal_metadata_.Clear();
}

bool TPAPlayerState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TPAPlayerState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 spent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fold = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hole_cards = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hole_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_hole_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TPAPlayerState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TPAPlayerState)
  return false;
#undef DO_
}

void TPAPlayerState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TPAPlayerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seat(), output);
  }

  // uint32 spent = 3;
  if (this->spent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->spent(), output);
  }

  // uint32 fold = 4;
  if (this->fold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fold(), output);
  }

  // repeated int32 hole_cards = 5;
  if (this->hole_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hole_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->hole_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hole_cards(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TPAPlayerState)
}

::google::protobuf::uint8* TPAPlayerState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TPAPlayerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seat(), target);
  }

  // uint32 spent = 3;
  if (this->spent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->spent(), target);
  }

  // uint32 fold = 4;
  if (this->fold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fold(), target);
  }

  // repeated int32 hole_cards = 5;
  if (this->hole_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hole_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hole_cards_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TPAPlayerState)
  return target;
}

size_t TPAPlayerState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TPAPlayerState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 hole_cards = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hole_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hole_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  // uint32 spent = 3;
  if (this->spent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spent());
  }

  // uint32 fold = 4;
  if (this->fold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPAPlayerState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TPAPlayerState)
  GOOGLE_DCHECK_NE(&from, this);
  const TPAPlayerState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPAPlayerState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TPAPlayerState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TPAPlayerState)
    MergeFrom(*source);
  }
}

void TPAPlayerState::MergeFrom(const TPAPlayerState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TPAPlayerState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hole_cards_.MergeFrom(from.hole_cards_);
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.seat() != 0) {
    set_seat(from.seat());
  }
  if (from.spent() != 0) {
    set_spent(from.spent());
  }
  if (from.fold() != 0) {
    set_fold(from.fold());
  }
}

void TPAPlayerState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TPAPlayerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPAPlayerState::CopyFrom(const TPAPlayerState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TPAPlayerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPAPlayerState::IsInitialized() const {
  return true;
}

void TPAPlayerState::Swap(TPAPlayerState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPAPlayerState::InternalSwap(TPAPlayerState* other) {
  using std::swap;
  hole_cards_.InternalSwap(&other->hole_cards_);
  swap(player_id_, other->player_id_);
  swap(seat_, other->seat_);
  swap(spent_, other->spent_);
  swap(fold_, other->fold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPAPlayerState::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPAPlayerAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPAPlayerAction::kPlayerIdFieldNumber;
const int TPAPlayerAction::kSeatFieldNumber;
const int TPAPlayerAction::kRoundFieldNumber;
const int TPAPlayerAction::kTypeFieldNumber;
const int TPAPlayerAction::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPAPlayerAction::TPAPlayerAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TPAPlayerAction)
}
TPAPlayerAction::TPAPlayerAction(const TPAPlayerAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:Pb.TPAPlayerAction)
}

void TPAPlayerAction::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _cached_size_ = 0;
}

TPAPlayerAction::~TPAPlayerAction() {
  // @@protoc_insertion_point(destructor:Pb.TPAPlayerAction)
  SharedDtor();
}

void TPAPlayerAction::SharedDtor() {
}

void TPAPlayerAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPAPlayerAction::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPAPlayerAction& TPAPlayerAction::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerAction();
  return *internal_default_instance();
}

TPAPlayerAction* TPAPlayerAction::New(::google::protobuf::Arena* arena) const {
  TPAPlayerAction* n = new TPAPlayerAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPAPlayerAction::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TPAPlayerAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool TPAPlayerAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TPAPlayerAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TPAPlayerAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TPAPlayerAction)
  return false;
#undef DO_
}

void TPAPlayerAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TPAPlayerAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seat(), output);
  }

  // int32 round = 3;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->round(), output);
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  // int32 size = 5;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TPAPlayerAction)
}

::google::protobuf::uint8* TPAPlayerAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TPAPlayerAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seat(), target);
  }

  // int32 round = 3;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->round(), target);
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  // int32 size = 5;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TPAPlayerAction)
  return target;
}

size_t TPAPlayerAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TPAPlayerAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // int32 seat = 2;
  if (this->seat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  // int32 round = 3;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // int32 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPAPlayerAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TPAPlayerAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TPAPlayerAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPAPlayerAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TPAPlayerAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TPAPlayerAction)
    MergeFrom(*source);
  }
}

void TPAPlayerAction::MergeFrom(const TPAPlayerAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TPAPlayerAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.seat() != 0) {
    set_seat(from.seat());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void TPAPlayerAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TPAPlayerAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPAPlayerAction::CopyFrom(const TPAPlayerAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TPAPlayerAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPAPlayerAction::IsInitialized() const {
  return true;
}

void TPAPlayerAction::Swap(TPAPlayerAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPAPlayerAction::InternalSwap(TPAPlayerAction* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(seat_, other->seat_);
  swap(round_, other->round_);
  swap(type_, other->type_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPAPlayerAction::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPAPlayerCards::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPAPlayerCards::kPlayerIdFieldNumber;
const int TPAPlayerCards::kHoleCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPAPlayerCards::TPAPlayerCards()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerCards();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TPAPlayerCards)
}
TPAPlayerCards::TPAPlayerCards(const TPAPlayerCards& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hole_cards_(from.hole_cards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TPAPlayerCards)
}

void TPAPlayerCards::SharedCtor() {
  player_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TPAPlayerCards::~TPAPlayerCards() {
  // @@protoc_insertion_point(destructor:Pb.TPAPlayerCards)
  SharedDtor();
}

void TPAPlayerCards::SharedDtor() {
}

void TPAPlayerCards::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPAPlayerCards::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPAPlayerCards& TPAPlayerCards::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTPAPlayerCards();
  return *internal_default_instance();
}

TPAPlayerCards* TPAPlayerCards::New(::google::protobuf::Arena* arena) const {
  TPAPlayerCards* n = new TPAPlayerCards;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TPAPlayerCards::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TPAPlayerCards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hole_cards_.Clear();
  player_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TPAPlayerCards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TPAPlayerCards)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hole_cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hole_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_hole_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TPAPlayerCards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TPAPlayerCards)
  return false;
#undef DO_
}

void TPAPlayerCards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TPAPlayerCards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // repeated int32 hole_cards = 2;
  if (this->hole_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hole_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->hole_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hole_cards(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TPAPlayerCards)
}

::google::protobuf::uint8* TPAPlayerCards::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TPAPlayerCards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // repeated int32 hole_cards = 2;
  if (this->hole_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hole_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hole_cards_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TPAPlayerCards)
  return target;
}

size_t TPAPlayerCards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TPAPlayerCards)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 hole_cards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hole_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hole_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPAPlayerCards::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TPAPlayerCards)
  GOOGLE_DCHECK_NE(&from, this);
  const TPAPlayerCards* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPAPlayerCards>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TPAPlayerCards)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TPAPlayerCards)
    MergeFrom(*source);
  }
}

void TPAPlayerCards::MergeFrom(const TPAPlayerCards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TPAPlayerCards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hole_cards_.MergeFrom(from.hole_cards_);
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
}

void TPAPlayerCards::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TPAPlayerCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPAPlayerCards::CopyFrom(const TPAPlayerCards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TPAPlayerCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPAPlayerCards::IsInitialized() const {
  return true;
}

void TPAPlayerCards::Swap(TPAPlayerCards* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPAPlayerCards::InternalSwap(TPAPlayerCards* other) {
  using std::swap;
  hole_cards_.InternalSwap(&other->hole_cards_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPAPlayerCards::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaRegisterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaRegisterReq::kTokenFieldNumber;
const int TpaRegisterReq::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaRegisterReq::TpaRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaRegisterReq)
}
TpaRegisterReq::TpaRegisterReq(const TpaRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  server_id_ = from.server_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaRegisterReq)
}

void TpaRegisterReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0u;
  _cached_size_ = 0;
}

TpaRegisterReq::~TpaRegisterReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaRegisterReq)
  SharedDtor();
}

void TpaRegisterReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TpaRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaRegisterReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaRegisterReq& TpaRegisterReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterReq();
  return *internal_default_instance();
}

TpaRegisterReq* TpaRegisterReq::New(::google::protobuf::Arena* arena) const {
  TpaRegisterReq* n = new TpaRegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.TpaRegisterReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaRegisterReq)
  return false;
#undef DO_
}

void TpaRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaRegisterReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaRegisterReq)
}

::google::protobuf::uint8* TpaRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaRegisterReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaRegisterReq)
  return target;
}

size_t TpaRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaRegisterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaRegisterReq)
    MergeFrom(*source);
  }
}

void TpaRegisterReq::MergeFrom(const TpaRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void TpaRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaRegisterReq::CopyFrom(const TpaRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaRegisterReq::IsInitialized() const {
  return true;
}

void TpaRegisterReq::Swap(TpaRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaRegisterReq::InternalSwap(TpaRegisterReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaRegisterReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaRegisterResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaRegisterResp::kAiServerIdFieldNumber;
const int TpaRegisterResp::kConnUniqueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaRegisterResp::TpaRegisterResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaRegisterResp)
}
TpaRegisterResp::TpaRegisterResp(const TpaRegisterResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&conn_unique_id_, &from.conn_unique_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ai_server_id_) -
    reinterpret_cast<char*>(&conn_unique_id_)) + sizeof(ai_server_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaRegisterResp)
}

void TpaRegisterResp::SharedCtor() {
  ::memset(&conn_unique_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ai_server_id_) -
      reinterpret_cast<char*>(&conn_unique_id_)) + sizeof(ai_server_id_));
  _cached_size_ = 0;
}

TpaRegisterResp::~TpaRegisterResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaRegisterResp)
  SharedDtor();
}

void TpaRegisterResp::SharedDtor() {
}

void TpaRegisterResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaRegisterResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaRegisterResp& TpaRegisterResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaRegisterResp();
  return *internal_default_instance();
}

TpaRegisterResp* TpaRegisterResp::New(::google::protobuf::Arena* arena) const {
  TpaRegisterResp* n = new TpaRegisterResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaRegisterResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaRegisterResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&conn_unique_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ai_server_id_) -
      reinterpret_cast<char*>(&conn_unique_id_)) + sizeof(ai_server_id_));
  _internal_metadata_.Clear();
}

bool TpaRegisterResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaRegisterResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ai_server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ai_server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 conn_unique_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conn_unique_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaRegisterResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaRegisterResp)
  return false;
#undef DO_
}

void TpaRegisterResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaRegisterResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ai_server_id(), output);
  }

  // uint64 conn_unique_id = 2;
  if (this->conn_unique_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->conn_unique_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaRegisterResp)
}

::google::protobuf::uint8* TpaRegisterResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaRegisterResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ai_server_id(), target);
  }

  // uint64 conn_unique_id = 2;
  if (this->conn_unique_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->conn_unique_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaRegisterResp)
  return target;
}

size_t TpaRegisterResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaRegisterResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 conn_unique_id = 2;
  if (this->conn_unique_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conn_unique_id());
  }

  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ai_server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaRegisterResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaRegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaRegisterResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaRegisterResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaRegisterResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaRegisterResp)
    MergeFrom(*source);
  }
}

void TpaRegisterResp::MergeFrom(const TpaRegisterResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaRegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conn_unique_id() != 0) {
    set_conn_unique_id(from.conn_unique_id());
  }
  if (from.ai_server_id() != 0) {
    set_ai_server_id(from.ai_server_id());
  }
}

void TpaRegisterResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaRegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaRegisterResp::CopyFrom(const TpaRegisterResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaRegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaRegisterResp::IsInitialized() const {
  return true;
}

void TpaRegisterResp::Swap(TpaRegisterResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaRegisterResp::InternalSwap(TpaRegisterResp* other) {
  using std::swap;
  swap(conn_unique_id_, other->conn_unique_id_);
  swap(ai_server_id_, other->ai_server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaRegisterResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaKeepAliveReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaKeepAliveReq::kServerIdFieldNumber;
const int TpaKeepAliveReq::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaKeepAliveReq::TpaKeepAliveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaKeepAliveReq)
}
TpaKeepAliveReq::TpaKeepAliveReq(const TpaKeepAliveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_id_, &from.server_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&server_id_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaKeepAliveReq)
}

void TpaKeepAliveReq::SharedCtor() {
  ::memset(&server_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&server_id_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

TpaKeepAliveReq::~TpaKeepAliveReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaKeepAliveReq)
  SharedDtor();
}

void TpaKeepAliveReq::SharedDtor() {
}

void TpaKeepAliveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaKeepAliveReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaKeepAliveReq& TpaKeepAliveReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveReq();
  return *internal_default_instance();
}

TpaKeepAliveReq* TpaKeepAliveReq::New(::google::protobuf::Arena* arena) const {
  TpaKeepAliveReq* n = new TpaKeepAliveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaKeepAliveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&server_id_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool TpaKeepAliveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaKeepAliveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaKeepAliveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaKeepAliveReq)
  return false;
#undef DO_
}

void TpaKeepAliveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  // uint32 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaKeepAliveReq)
}

::google::protobuf::uint8* TpaKeepAliveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaKeepAliveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  // uint32 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaKeepAliveReq)
  return target;
}

size_t TpaKeepAliveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaKeepAliveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  // uint32 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaKeepAliveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaKeepAliveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaKeepAliveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaKeepAliveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaKeepAliveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaKeepAliveReq)
    MergeFrom(*source);
  }
}

void TpaKeepAliveReq::MergeFrom(const TpaKeepAliveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaKeepAliveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void TpaKeepAliveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaKeepAliveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaKeepAliveReq::CopyFrom(const TpaKeepAliveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaKeepAliveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaKeepAliveReq::IsInitialized() const {
  return true;
}

void TpaKeepAliveReq::Swap(TpaKeepAliveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaKeepAliveReq::InternalSwap(TpaKeepAliveReq* other) {
  using std::swap;
  swap(server_id_, other->server_id_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaKeepAliveReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaKeepAliveResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaKeepAliveResp::kAiServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaKeepAliveResp::TpaKeepAliveResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaKeepAliveResp)
}
TpaKeepAliveResp::TpaKeepAliveResp(const TpaKeepAliveResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ai_server_id_ = from.ai_server_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaKeepAliveResp)
}

void TpaKeepAliveResp::SharedCtor() {
  ai_server_id_ = 0u;
  _cached_size_ = 0;
}

TpaKeepAliveResp::~TpaKeepAliveResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaKeepAliveResp)
  SharedDtor();
}

void TpaKeepAliveResp::SharedDtor() {
}

void TpaKeepAliveResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaKeepAliveResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaKeepAliveResp& TpaKeepAliveResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaKeepAliveResp();
  return *internal_default_instance();
}

TpaKeepAliveResp* TpaKeepAliveResp::New(::google::protobuf::Arena* arena) const {
  TpaKeepAliveResp* n = new TpaKeepAliveResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaKeepAliveResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaKeepAliveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ai_server_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaKeepAliveResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaKeepAliveResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ai_server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ai_server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaKeepAliveResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaKeepAliveResp)
  return false;
#undef DO_
}

void TpaKeepAliveResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaKeepAliveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ai_server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaKeepAliveResp)
}

::google::protobuf::uint8* TpaKeepAliveResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaKeepAliveResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ai_server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaKeepAliveResp)
  return target;
}

size_t TpaKeepAliveResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaKeepAliveResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ai_server_id = 1;
  if (this->ai_server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ai_server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaKeepAliveResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaKeepAliveResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaKeepAliveResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaKeepAliveResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaKeepAliveResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaKeepAliveResp)
    MergeFrom(*source);
  }
}

void TpaKeepAliveResp::MergeFrom(const TpaKeepAliveResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaKeepAliveResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ai_server_id() != 0) {
    set_ai_server_id(from.ai_server_id());
  }
}

void TpaKeepAliveResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaKeepAliveResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaKeepAliveResp::CopyFrom(const TpaKeepAliveResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaKeepAliveResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaKeepAliveResp::IsInitialized() const {
  return true;
}

void TpaKeepAliveResp::Swap(TpaKeepAliveResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaKeepAliveResp::InternalSwap(TpaKeepAliveResp* other) {
  using std::swap;
  swap(ai_server_id_, other->ai_server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaKeepAliveResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaEnterRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaEnterRoomReq::kRoomIdFieldNumber;
const int TpaEnterRoomReq::kGameTypeFieldNumber;
const int TpaEnterRoomReq::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaEnterRoomReq::TpaEnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaEnterRoomReq)
}
TpaEnterRoomReq::TpaEnterRoomReq(const TpaEnterRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_type_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaEnterRoomReq)
}

void TpaEnterRoomReq::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _cached_size_ = 0;
}

TpaEnterRoomReq::~TpaEnterRoomReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaEnterRoomReq)
  SharedDtor();
}

void TpaEnterRoomReq::SharedDtor() {
}

void TpaEnterRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaEnterRoomReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaEnterRoomReq& TpaEnterRoomReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomReq();
  return *internal_default_instance();
}

TpaEnterRoomReq* TpaEnterRoomReq::New(::google::protobuf::Arena* arena) const {
  TpaEnterRoomReq* n = new TpaEnterRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaEnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _internal_metadata_.Clear();
}

bool TpaEnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaEnterRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaEnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaEnterRoomReq)
  return false;
#undef DO_
}

void TpaEnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_type(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaEnterRoomReq)
}

::google::protobuf::uint8* TpaEnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_type(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaEnterRoomReq)
  return target;
}

size_t TpaEnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaEnterRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaEnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaEnterRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaEnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaEnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaEnterRoomReq)
    MergeFrom(*source);
  }
}

void TpaEnterRoomReq::MergeFrom(const TpaEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.game_type() != 0) {
    set_game_type(from.game_type());
  }
}

void TpaEnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaEnterRoomReq::CopyFrom(const TpaEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaEnterRoomReq::IsInitialized() const {
  return true;
}

void TpaEnterRoomReq::Swap(TpaEnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaEnterRoomReq::InternalSwap(TpaEnterRoomReq* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  swap(game_type_, other->game_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaEnterRoomReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaEnterRoomResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaEnterRoomResp::kRoomIdFieldNumber;
const int TpaEnterRoomResp::kGameTypeFieldNumber;
const int TpaEnterRoomResp::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaEnterRoomResp::TpaEnterRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaEnterRoomResp)
}
TpaEnterRoomResp::TpaEnterRoomResp(const TpaEnterRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_type_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaEnterRoomResp)
}

void TpaEnterRoomResp::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _cached_size_ = 0;
}

TpaEnterRoomResp::~TpaEnterRoomResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaEnterRoomResp)
  SharedDtor();
}

void TpaEnterRoomResp::SharedDtor() {
}

void TpaEnterRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaEnterRoomResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaEnterRoomResp& TpaEnterRoomResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaEnterRoomResp();
  return *internal_default_instance();
}

TpaEnterRoomResp* TpaEnterRoomResp::New(::google::protobuf::Arena* arena) const {
  TpaEnterRoomResp* n = new TpaEnterRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaEnterRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _internal_metadata_.Clear();
}

bool TpaEnterRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaEnterRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaEnterRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaEnterRoomResp)
  return false;
#undef DO_
}

void TpaEnterRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_type(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaEnterRoomResp)
}

::google::protobuf::uint8* TpaEnterRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_type(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaEnterRoomResp)
  return target;
}

size_t TpaEnterRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaEnterRoomResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaEnterRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaEnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaEnterRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaEnterRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaEnterRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaEnterRoomResp)
    MergeFrom(*source);
  }
}

void TpaEnterRoomResp::MergeFrom(const TpaEnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaEnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.game_type() != 0) {
    set_game_type(from.game_type());
  }
}

void TpaEnterRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaEnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaEnterRoomResp::CopyFrom(const TpaEnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaEnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaEnterRoomResp::IsInitialized() const {
  return true;
}

void TpaEnterRoomResp::Swap(TpaEnterRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaEnterRoomResp::InternalSwap(TpaEnterRoomResp* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  swap(game_type_, other->game_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaEnterRoomResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaAIEnterRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaAIEnterRoomReq::kRoomIdFieldNumber;
const int TpaAIEnterRoomReq::kGameTypeFieldNumber;
const int TpaAIEnterRoomReq::kPlayerListFieldNumber;
const int TpaAIEnterRoomReq::kConstantTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaAIEnterRoomReq::TpaAIEnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaAIEnterRoomReq)
}
TpaAIEnterRoomReq::TpaAIEnterRoomReq(const TpaAIEnterRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  constant_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.constant_token().size() > 0) {
    constant_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constant_token_);
  }
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_type_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaAIEnterRoomReq)
}

void TpaAIEnterRoomReq::SharedCtor() {
  constant_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _cached_size_ = 0;
}

TpaAIEnterRoomReq::~TpaAIEnterRoomReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaAIEnterRoomReq)
  SharedDtor();
}

void TpaAIEnterRoomReq::SharedDtor() {
  constant_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TpaAIEnterRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaAIEnterRoomReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaAIEnterRoomReq& TpaAIEnterRoomReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomReq();
  return *internal_default_instance();
}

TpaAIEnterRoomReq* TpaAIEnterRoomReq::New(::google::protobuf::Arena* arena) const {
  TpaAIEnterRoomReq* n = new TpaAIEnterRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaAIEnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaAIEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _internal_metadata_.Clear();
}

bool TpaAIEnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaAIEnterRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string constant_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_constant_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->constant_token().data(), static_cast<int>(this->constant_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.TpaAIEnterRoomReq.constant_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaAIEnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaAIEnterRoomReq)
  return false;
#undef DO_
}

void TpaAIEnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaAIEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_type(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_list(static_cast<int>(i)), output);
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constant_token().data(), static_cast<int>(this->constant_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaAIEnterRoomReq.constant_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->constant_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaAIEnterRoomReq)
}

::google::protobuf::uint8* TpaAIEnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaAIEnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_type(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constant_token().data(), static_cast<int>(this->constant_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaAIEnterRoomReq.constant_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->constant_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaAIEnterRoomReq)
  return target;
}

size_t TpaAIEnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaAIEnterRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->constant_token());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaAIEnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaAIEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaAIEnterRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaAIEnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaAIEnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaAIEnterRoomReq)
    MergeFrom(*source);
  }
}

void TpaAIEnterRoomReq::MergeFrom(const TpaAIEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaAIEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.constant_token().size() > 0) {

    constant_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constant_token_);
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.game_type() != 0) {
    set_game_type(from.game_type());
  }
}

void TpaAIEnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaAIEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaAIEnterRoomReq::CopyFrom(const TpaAIEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaAIEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaAIEnterRoomReq::IsInitialized() const {
  return true;
}

void TpaAIEnterRoomReq::Swap(TpaAIEnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaAIEnterRoomReq::InternalSwap(TpaAIEnterRoomReq* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  constant_token_.Swap(&other->constant_token_);
  swap(room_id_, other->room_id_);
  swap(game_type_, other->game_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaAIEnterRoomReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaAIEnterRoomResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaAIEnterRoomResp::kRoomIdFieldNumber;
const int TpaAIEnterRoomResp::kGameTypeFieldNumber;
const int TpaAIEnterRoomResp::kPlayerListFieldNumber;
const int TpaAIEnterRoomResp::kConstantTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaAIEnterRoomResp::TpaAIEnterRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaAIEnterRoomResp)
}
TpaAIEnterRoomResp::TpaAIEnterRoomResp(const TpaAIEnterRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  constant_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.constant_token().size() > 0) {
    constant_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constant_token_);
  }
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_type_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaAIEnterRoomResp)
}

void TpaAIEnterRoomResp::SharedCtor() {
  constant_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _cached_size_ = 0;
}

TpaAIEnterRoomResp::~TpaAIEnterRoomResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaAIEnterRoomResp)
  SharedDtor();
}

void TpaAIEnterRoomResp::SharedDtor() {
  constant_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TpaAIEnterRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaAIEnterRoomResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaAIEnterRoomResp& TpaAIEnterRoomResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaAIEnterRoomResp();
  return *internal_default_instance();
}

TpaAIEnterRoomResp* TpaAIEnterRoomResp::New(::google::protobuf::Arena* arena) const {
  TpaAIEnterRoomResp* n = new TpaAIEnterRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaAIEnterRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaAIEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  constant_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_type_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(game_type_));
  _internal_metadata_.Clear();
}

bool TpaAIEnterRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaAIEnterRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string constant_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_constant_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->constant_token().data(), static_cast<int>(this->constant_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pb.TpaAIEnterRoomResp.constant_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaAIEnterRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaAIEnterRoomResp)
  return false;
#undef DO_
}

void TpaAIEnterRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaAIEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_type(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_list(static_cast<int>(i)), output);
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constant_token().data(), static_cast<int>(this->constant_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaAIEnterRoomResp.constant_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->constant_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaAIEnterRoomResp)
}

::google::protobuf::uint8* TpaAIEnterRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaAIEnterRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_type(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->constant_token().data(), static_cast<int>(this->constant_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pb.TpaAIEnterRoomResp.constant_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->constant_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaAIEnterRoomResp)
  return target;
}

size_t TpaAIEnterRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaAIEnterRoomResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // string constant_token = 4;
  if (this->constant_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->constant_token());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 game_type = 2;
  if (this->game_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaAIEnterRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaAIEnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaAIEnterRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaAIEnterRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaAIEnterRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaAIEnterRoomResp)
    MergeFrom(*source);
  }
}

void TpaAIEnterRoomResp::MergeFrom(const TpaAIEnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaAIEnterRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.constant_token().size() > 0) {

    constant_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.constant_token_);
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.game_type() != 0) {
    set_game_type(from.game_type());
  }
}

void TpaAIEnterRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaAIEnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaAIEnterRoomResp::CopyFrom(const TpaAIEnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaAIEnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaAIEnterRoomResp::IsInitialized() const {
  return true;
}

void TpaAIEnterRoomResp::Swap(TpaAIEnterRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaAIEnterRoomResp::InternalSwap(TpaAIEnterRoomResp* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  constant_token_.Swap(&other->constant_token_);
  swap(room_id_, other->room_id_);
  swap(game_type_, other->game_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaAIEnterRoomResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaLeaveRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaLeaveRoomReq::kRoomIdFieldNumber;
const int TpaLeaveRoomReq::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaLeaveRoomReq::TpaLeaveRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaLeaveRoomReq)
}
TpaLeaveRoomReq::TpaLeaveRoomReq(const TpaLeaveRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaLeaveRoomReq)
}

void TpaLeaveRoomReq::SharedCtor() {
  room_id_ = 0u;
  _cached_size_ = 0;
}

TpaLeaveRoomReq::~TpaLeaveRoomReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaLeaveRoomReq)
  SharedDtor();
}

void TpaLeaveRoomReq::SharedDtor() {
}

void TpaLeaveRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaLeaveRoomReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaLeaveRoomReq& TpaLeaveRoomReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomReq();
  return *internal_default_instance();
}

TpaLeaveRoomReq* TpaLeaveRoomReq::New(::google::protobuf::Arena* arena) const {
  TpaLeaveRoomReq* n = new TpaLeaveRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaLeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaLeaveRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  room_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaLeaveRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaLeaveRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaLeaveRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaLeaveRoomReq)
  return false;
#undef DO_
}

void TpaLeaveRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaLeaveRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaLeaveRoomReq)
}

::google::protobuf::uint8* TpaLeaveRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaLeaveRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaLeaveRoomReq)
  return target;
}

size_t TpaLeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaLeaveRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaLeaveRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaLeaveRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaLeaveRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaLeaveRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaLeaveRoomReq)
    MergeFrom(*source);
  }
}

void TpaLeaveRoomReq::MergeFrom(const TpaLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaLeaveRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaLeaveRoomReq::CopyFrom(const TpaLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaLeaveRoomReq::IsInitialized() const {
  return true;
}

void TpaLeaveRoomReq::Swap(TpaLeaveRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaLeaveRoomReq::InternalSwap(TpaLeaveRoomReq* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaLeaveRoomReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaLeaveRoomResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaLeaveRoomResp::kRoomIdFieldNumber;
const int TpaLeaveRoomResp::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaLeaveRoomResp::TpaLeaveRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaLeaveRoomResp)
}
TpaLeaveRoomResp::TpaLeaveRoomResp(const TpaLeaveRoomResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaLeaveRoomResp)
}

void TpaLeaveRoomResp::SharedCtor() {
  room_id_ = 0u;
  _cached_size_ = 0;
}

TpaLeaveRoomResp::~TpaLeaveRoomResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaLeaveRoomResp)
  SharedDtor();
}

void TpaLeaveRoomResp::SharedDtor() {
}

void TpaLeaveRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaLeaveRoomResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaLeaveRoomResp& TpaLeaveRoomResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaLeaveRoomResp();
  return *internal_default_instance();
}

TpaLeaveRoomResp* TpaLeaveRoomResp::New(::google::protobuf::Arena* arena) const {
  TpaLeaveRoomResp* n = new TpaLeaveRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaLeaveRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaLeaveRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  room_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaLeaveRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaLeaveRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaLeaveRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaLeaveRoomResp)
  return false;
#undef DO_
}

void TpaLeaveRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaLeaveRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaLeaveRoomResp)
}

::google::protobuf::uint8* TpaLeaveRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaLeaveRoomResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaLeaveRoomResp)
  return target;
}

size_t TpaLeaveRoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaLeaveRoomResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaLeaveRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaLeaveRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaLeaveRoomResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaLeaveRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaLeaveRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaLeaveRoomResp)
    MergeFrom(*source);
  }
}

void TpaLeaveRoomResp::MergeFrom(const TpaLeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaLeaveRoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaLeaveRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaLeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaLeaveRoomResp::CopyFrom(const TpaLeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaLeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaLeaveRoomResp::IsInitialized() const {
  return true;
}

void TpaLeaveRoomResp::Swap(TpaLeaveRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaLeaveRoomResp::InternalSwap(TpaLeaveRoomResp* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaLeaveRoomResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaNotifyDestroyRoom::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaNotifyDestroyRoom::kRoomIdFieldNumber;
const int TpaNotifyDestroyRoom::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaNotifyDestroyRoom::TpaNotifyDestroyRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaNotifyDestroyRoom();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaNotifyDestroyRoom)
}
TpaNotifyDestroyRoom::TpaNotifyDestroyRoom(const TpaNotifyDestroyRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaNotifyDestroyRoom)
}

void TpaNotifyDestroyRoom::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(reason_));
  _cached_size_ = 0;
}

TpaNotifyDestroyRoom::~TpaNotifyDestroyRoom() {
  // @@protoc_insertion_point(destructor:Pb.TpaNotifyDestroyRoom)
  SharedDtor();
}

void TpaNotifyDestroyRoom::SharedDtor() {
}

void TpaNotifyDestroyRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaNotifyDestroyRoom::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaNotifyDestroyRoom& TpaNotifyDestroyRoom::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaNotifyDestroyRoom();
  return *internal_default_instance();
}

TpaNotifyDestroyRoom* TpaNotifyDestroyRoom::New(::google::protobuf::Arena* arena) const {
  TpaNotifyDestroyRoom* n = new TpaNotifyDestroyRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaNotifyDestroyRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaNotifyDestroyRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool TpaNotifyDestroyRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaNotifyDestroyRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaNotifyDestroyRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaNotifyDestroyRoom)
  return false;
#undef DO_
}

void TpaNotifyDestroyRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaNotifyDestroyRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaNotifyDestroyRoom)
}

::google::protobuf::uint8* TpaNotifyDestroyRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaNotifyDestroyRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaNotifyDestroyRoom)
  return target;
}

size_t TpaNotifyDestroyRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaNotifyDestroyRoom)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaNotifyDestroyRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaNotifyDestroyRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaNotifyDestroyRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaNotifyDestroyRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaNotifyDestroyRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaNotifyDestroyRoom)
    MergeFrom(*source);
  }
}

void TpaNotifyDestroyRoom::MergeFrom(const TpaNotifyDestroyRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaNotifyDestroyRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void TpaNotifyDestroyRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaNotifyDestroyRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaNotifyDestroyRoom::CopyFrom(const TpaNotifyDestroyRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaNotifyDestroyRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaNotifyDestroyRoom::IsInitialized() const {
  return true;
}

void TpaNotifyDestroyRoom::Swap(TpaNotifyDestroyRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaNotifyDestroyRoom::InternalSwap(TpaNotifyDestroyRoom* other) {
  using std::swap;
  swap(room_id_, other->room_id_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaNotifyDestroyRoom::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaSetPlayerStateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaSetPlayerStateReq::kRoomIdFieldNumber;
const int TpaSetPlayerStateReq::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaSetPlayerStateReq::TpaSetPlayerStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaSetPlayerStateReq)
}
TpaSetPlayerStateReq::TpaSetPlayerStateReq(const TpaSetPlayerStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaSetPlayerStateReq)
}

void TpaSetPlayerStateReq::SharedCtor() {
  room_id_ = 0u;
  _cached_size_ = 0;
}

TpaSetPlayerStateReq::~TpaSetPlayerStateReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaSetPlayerStateReq)
  SharedDtor();
}

void TpaSetPlayerStateReq::SharedDtor() {
}

void TpaSetPlayerStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaSetPlayerStateReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaSetPlayerStateReq& TpaSetPlayerStateReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateReq();
  return *internal_default_instance();
}

TpaSetPlayerStateReq* TpaSetPlayerStateReq::New(::google::protobuf::Arena* arena) const {
  TpaSetPlayerStateReq* n = new TpaSetPlayerStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaSetPlayerStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaSetPlayerStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  room_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaSetPlayerStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaSetPlayerStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaSetPlayerStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaSetPlayerStateReq)
  return false;
#undef DO_
}

void TpaSetPlayerStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaSetPlayerStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaSetPlayerStateReq)
}

::google::protobuf::uint8* TpaSetPlayerStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaSetPlayerStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaSetPlayerStateReq)
  return target;
}

size_t TpaSetPlayerStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaSetPlayerStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaSetPlayerStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaSetPlayerStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaSetPlayerStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaSetPlayerStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaSetPlayerStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaSetPlayerStateReq)
    MergeFrom(*source);
  }
}

void TpaSetPlayerStateReq::MergeFrom(const TpaSetPlayerStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaSetPlayerStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaSetPlayerStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaSetPlayerStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaSetPlayerStateReq::CopyFrom(const TpaSetPlayerStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaSetPlayerStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaSetPlayerStateReq::IsInitialized() const {
  return true;
}

void TpaSetPlayerStateReq::Swap(TpaSetPlayerStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaSetPlayerStateReq::InternalSwap(TpaSetPlayerStateReq* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaSetPlayerStateReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaSetPlayerStateResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaSetPlayerStateResp::kRoomIdFieldNumber;
const int TpaSetPlayerStateResp::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaSetPlayerStateResp::TpaSetPlayerStateResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaSetPlayerStateResp)
}
TpaSetPlayerStateResp::TpaSetPlayerStateResp(const TpaSetPlayerStateResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_list_(from.player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:Pb.TpaSetPlayerStateResp)
}

void TpaSetPlayerStateResp::SharedCtor() {
  room_id_ = 0u;
  _cached_size_ = 0;
}

TpaSetPlayerStateResp::~TpaSetPlayerStateResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaSetPlayerStateResp)
  SharedDtor();
}

void TpaSetPlayerStateResp::SharedDtor() {
}

void TpaSetPlayerStateResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaSetPlayerStateResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaSetPlayerStateResp& TpaSetPlayerStateResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaSetPlayerStateResp();
  return *internal_default_instance();
}

TpaSetPlayerStateResp* TpaSetPlayerStateResp::New(::google::protobuf::Arena* arena) const {
  TpaSetPlayerStateResp* n = new TpaSetPlayerStateResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaSetPlayerStateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaSetPlayerStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_list_.Clear();
  room_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TpaSetPlayerStateResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaSetPlayerStateResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayer player_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaSetPlayerStateResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaSetPlayerStateResp)
  return false;
#undef DO_
}

void TpaSetPlayerStateResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaSetPlayerStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaSetPlayerStateResp)
}

::google::protobuf::uint8* TpaSetPlayerStateResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaSetPlayerStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // repeated .Pb.TPAPlayer player_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaSetPlayerStateResp)
  return target;
}

size_t TpaSetPlayerStateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaSetPlayerStateResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayer player_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_list(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaSetPlayerStateResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaSetPlayerStateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaSetPlayerStateResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaSetPlayerStateResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaSetPlayerStateResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaSetPlayerStateResp)
    MergeFrom(*source);
  }
}

void TpaSetPlayerStateResp::MergeFrom(const TpaSetPlayerStateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaSetPlayerStateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_list_.MergeFrom(from.player_list_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaSetPlayerStateResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaSetPlayerStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaSetPlayerStateResp::CopyFrom(const TpaSetPlayerStateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaSetPlayerStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaSetPlayerStateResp::IsInitialized() const {
  return true;
}

void TpaSetPlayerStateResp::Swap(TpaSetPlayerStateResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaSetPlayerStateResp::InternalSwap(TpaSetPlayerStateResp* other) {
  using std::swap;
  player_list_.InternalSwap(&other->player_list_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaSetPlayerStateResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaSetDealerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaSetDealerReq::kRoomIdFieldNumber;
const int TpaSetDealerReq::kDealerPlayerIdFieldNumber;
const int TpaSetDealerReq::kDealerSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaSetDealerReq::TpaSetDealerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaSetDealerReq)
}
TpaSetDealerReq::TpaSetDealerReq(const TpaSetDealerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dealer_player_id_, &from.dealer_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dealer_seat_) -
    reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(dealer_seat_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaSetDealerReq)
}

void TpaSetDealerReq::SharedCtor() {
  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dealer_seat_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(dealer_seat_));
  _cached_size_ = 0;
}

TpaSetDealerReq::~TpaSetDealerReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaSetDealerReq)
  SharedDtor();
}

void TpaSetDealerReq::SharedDtor() {
}

void TpaSetDealerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaSetDealerReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaSetDealerReq& TpaSetDealerReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerReq();
  return *internal_default_instance();
}

TpaSetDealerReq* TpaSetDealerReq::New(::google::protobuf::Arena* arena) const {
  TpaSetDealerReq* n = new TpaSetDealerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaSetDealerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaSetDealerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dealer_seat_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(dealer_seat_));
  _internal_metadata_.Clear();
}

bool TpaSetDealerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaSetDealerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dealer_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dealer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dealer_seat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dealer_seat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaSetDealerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaSetDealerReq)
  return false;
#undef DO_
}

void TpaSetDealerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaSetDealerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dealer_player_id(), output);
  }

  // int32 dealer_seat = 3;
  if (this->dealer_seat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dealer_seat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaSetDealerReq)
}

::google::protobuf::uint8* TpaSetDealerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaSetDealerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dealer_player_id(), target);
  }

  // int32 dealer_seat = 3;
  if (this->dealer_seat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dealer_seat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaSetDealerReq)
  return target;
}

size_t TpaSetDealerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaSetDealerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dealer_player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // int32 dealer_seat = 3;
  if (this->dealer_seat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dealer_seat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaSetDealerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaSetDealerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaSetDealerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaSetDealerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaSetDealerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaSetDealerReq)
    MergeFrom(*source);
  }
}

void TpaSetDealerReq::MergeFrom(const TpaSetDealerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaSetDealerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dealer_player_id() != 0) {
    set_dealer_player_id(from.dealer_player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.dealer_seat() != 0) {
    set_dealer_seat(from.dealer_seat());
  }
}

void TpaSetDealerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaSetDealerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaSetDealerReq::CopyFrom(const TpaSetDealerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaSetDealerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaSetDealerReq::IsInitialized() const {
  return true;
}

void TpaSetDealerReq::Swap(TpaSetDealerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaSetDealerReq::InternalSwap(TpaSetDealerReq* other) {
  using std::swap;
  swap(dealer_player_id_, other->dealer_player_id_);
  swap(room_id_, other->room_id_);
  swap(dealer_seat_, other->dealer_seat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaSetDealerReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaSetDealerResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaSetDealerResp::kRoomIdFieldNumber;
const int TpaSetDealerResp::kDealerPlayerIdFieldNumber;
const int TpaSetDealerResp::kHandIdFieldNumber;
const int TpaSetDealerResp::kMaxSpentFieldNumber;
const int TpaSetDealerResp::kPlayerStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaSetDealerResp::TpaSetDealerResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaSetDealerResp)
}
TpaSetDealerResp::TpaSetDealerResp(const TpaSetDealerResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_state_(from.player_state_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dealer_player_id_, &from.dealer_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_spent_) -
    reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaSetDealerResp)
}

void TpaSetDealerResp::SharedCtor() {
  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_spent_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  _cached_size_ = 0;
}

TpaSetDealerResp::~TpaSetDealerResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaSetDealerResp)
  SharedDtor();
}

void TpaSetDealerResp::SharedDtor() {
}

void TpaSetDealerResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaSetDealerResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaSetDealerResp& TpaSetDealerResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaSetDealerResp();
  return *internal_default_instance();
}

TpaSetDealerResp* TpaSetDealerResp::New(::google::protobuf::Arena* arena) const {
  TpaSetDealerResp* n = new TpaSetDealerResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaSetDealerResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaSetDealerResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_state_.Clear();
  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_spent_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  _internal_metadata_.Clear();
}

bool TpaSetDealerResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaSetDealerResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dealer_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dealer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hand_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_spent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayerState player_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaSetDealerResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaSetDealerResp)
  return false;
#undef DO_
}

void TpaSetDealerResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaSetDealerResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dealer_player_id(), output);
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hand_id(), output);
  }

  // uint32 max_spent = 4;
  if (this->max_spent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_spent(), output);
  }

  // repeated .Pb.TPAPlayerState player_state = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_state_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->player_state(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaSetDealerResp)
}

::google::protobuf::uint8* TpaSetDealerResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaSetDealerResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dealer_player_id(), target);
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hand_id(), target);
  }

  // uint32 max_spent = 4;
  if (this->max_spent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_spent(), target);
  }

  // repeated .Pb.TPAPlayerState player_state = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_state_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->player_state(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaSetDealerResp)
  return target;
}

size_t TpaSetDealerResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaSetDealerResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pb.TPAPlayerState player_state = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->player_state_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_state(static_cast<int>(i)));
    }
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dealer_player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hand_id());
  }

  // uint32 max_spent = 4;
  if (this->max_spent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_spent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaSetDealerResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaSetDealerResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaSetDealerResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaSetDealerResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaSetDealerResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaSetDealerResp)
    MergeFrom(*source);
  }
}

void TpaSetDealerResp::MergeFrom(const TpaSetDealerResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaSetDealerResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_state_.MergeFrom(from.player_state_);
  if (from.dealer_player_id() != 0) {
    set_dealer_player_id(from.dealer_player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.hand_id() != 0) {
    set_hand_id(from.hand_id());
  }
  if (from.max_spent() != 0) {
    set_max_spent(from.max_spent());
  }
}

void TpaSetDealerResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaSetDealerResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaSetDealerResp::CopyFrom(const TpaSetDealerResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaSetDealerResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaSetDealerResp::IsInitialized() const {
  return true;
}

void TpaSetDealerResp::Swap(TpaSetDealerResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaSetDealerResp::InternalSwap(TpaSetDealerResp* other) {
  using std::swap;
  player_state_.InternalSwap(&other->player_state_);
  swap(dealer_player_id_, other->dealer_player_id_);
  swap(room_id_, other->room_id_);
  swap(hand_id_, other->hand_id_);
  swap(max_spent_, other->max_spent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaSetDealerResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryCardsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryCardsReq::kRoomIdFieldNumber;
const int TpaQueryCardsReq::kRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryCardsReq::TpaQueryCardsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryCardsReq)
}
TpaQueryCardsReq::TpaQueryCardsReq(const TpaQueryCardsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryCardsReq)
}

void TpaQueryCardsReq::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  _cached_size_ = 0;
}

TpaQueryCardsReq::~TpaQueryCardsReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryCardsReq)
  SharedDtor();
}

void TpaQueryCardsReq::SharedDtor() {
}

void TpaQueryCardsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryCardsReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryCardsReq& TpaQueryCardsReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsReq();
  return *internal_default_instance();
}

TpaQueryCardsReq* TpaQueryCardsReq::New(::google::protobuf::Arena* arena) const {
  TpaQueryCardsReq* n = new TpaQueryCardsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryCardsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryCardsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  _internal_metadata_.Clear();
}

bool TpaQueryCardsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryCardsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryCardsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryCardsReq)
  return false;
#undef DO_
}

void TpaQueryCardsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryCardsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->round(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryCardsReq)
}

::google::protobuf::uint8* TpaQueryCardsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryCardsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->round(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryCardsReq)
  return target;
}

size_t TpaQueryCardsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryCardsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // int32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryCardsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryCardsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryCardsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryCardsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryCardsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryCardsReq)
    MergeFrom(*source);
  }
}

void TpaQueryCardsReq::MergeFrom(const TpaQueryCardsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryCardsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void TpaQueryCardsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryCardsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryCardsReq::CopyFrom(const TpaQueryCardsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryCardsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryCardsReq::IsInitialized() const {
  return true;
}

void TpaQueryCardsReq::Swap(TpaQueryCardsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryCardsReq::InternalSwap(TpaQueryCardsReq* other) {
  using std::swap;
  swap(room_id_, other->room_id_);
  swap(round_, other->round_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryCardsReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryCardsResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryCardsResp::kRoomIdFieldNumber;
const int TpaQueryCardsResp::kRoundFieldNumber;
const int TpaQueryCardsResp::kFinishedFieldNumber;
const int TpaQueryCardsResp::kFlopCardsFieldNumber;
const int TpaQueryCardsResp::kTurnCardsFieldNumber;
const int TpaQueryCardsResp::kRiverCardsFieldNumber;
const int TpaQueryCardsResp::kPlayerCardsFieldNumber;
const int TpaQueryCardsResp::kDealerPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryCardsResp::TpaQueryCardsResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryCardsResp)
}
TpaQueryCardsResp::TpaQueryCardsResp(const TpaQueryCardsResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flop_cards_(from.flop_cards_),
      turn_cards_(from.turn_cards_),
      river_cards_(from.river_cards_),
      player_cards_(from.player_cards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&finished_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(finished_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryCardsResp)
}

void TpaQueryCardsResp::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(finished_));
  _cached_size_ = 0;
}

TpaQueryCardsResp::~TpaQueryCardsResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryCardsResp)
  SharedDtor();
}

void TpaQueryCardsResp::SharedDtor() {
}

void TpaQueryCardsResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryCardsResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryCardsResp& TpaQueryCardsResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryCardsResp();
  return *internal_default_instance();
}

TpaQueryCardsResp* TpaQueryCardsResp::New(::google::protobuf::Arena* arena) const {
  TpaQueryCardsResp* n = new TpaQueryCardsResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryCardsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryCardsResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flop_cards_.Clear();
  turn_cards_.Clear();
  river_cards_.Clear();
  player_cards_.Clear();
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(finished_));
  _internal_metadata_.Clear();
}

bool TpaQueryCardsResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryCardsResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finished = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 flop_cards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_flop_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_flop_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 turn_cards = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_turn_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_turn_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 river_cards = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_river_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_river_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayerCards player_cards = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_cards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dealer_player_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dealer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryCardsResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryCardsResp)
  return false;
#undef DO_
}

void TpaQueryCardsResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryCardsResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->round(), output);
  }

  // uint32 finished = 3;
  if (this->finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->finished(), output);
  }

  // repeated int32 flop_cards = 4;
  if (this->flop_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _flop_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->flop_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->flop_cards(i), output);
  }

  // repeated int32 turn_cards = 5;
  if (this->turn_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->turn_cards(i), output);
  }

  // repeated int32 river_cards = 6;
  if (this->river_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _river_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->river_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->river_cards(i), output);
  }

  // repeated .Pb.TPAPlayerCards player_cards = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_cards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->player_cards(static_cast<int>(i)), output);
  }

  // uint64 dealer_player_id = 8;
  if (this->dealer_player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->dealer_player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryCardsResp)
}

::google::protobuf::uint8* TpaQueryCardsResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryCardsResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->round(), target);
  }

  // uint32 finished = 3;
  if (this->finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->finished(), target);
  }

  // repeated int32 flop_cards = 4;
  if (this->flop_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _flop_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->flop_cards_, target);
  }

  // repeated int32 turn_cards = 5;
  if (this->turn_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _turn_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->turn_cards_, target);
  }

  // repeated int32 river_cards = 6;
  if (this->river_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _river_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->river_cards_, target);
  }

  // repeated .Pb.TPAPlayerCards player_cards = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_cards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->player_cards(static_cast<int>(i)), deterministic, target);
  }

  // uint64 dealer_player_id = 8;
  if (this->dealer_player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->dealer_player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryCardsResp)
  return target;
}

size_t TpaQueryCardsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryCardsResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 flop_cards = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->flop_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _flop_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 turn_cards = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->turn_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 river_cards = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->river_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _river_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Pb.TPAPlayerCards player_cards = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->player_cards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_cards(static_cast<int>(i)));
    }
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // int32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  // uint64 dealer_player_id = 8;
  if (this->dealer_player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dealer_player_id());
  }

  // uint32 finished = 3;
  if (this->finished() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryCardsResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryCardsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryCardsResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryCardsResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryCardsResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryCardsResp)
    MergeFrom(*source);
  }
}

void TpaQueryCardsResp::MergeFrom(const TpaQueryCardsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryCardsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flop_cards_.MergeFrom(from.flop_cards_);
  turn_cards_.MergeFrom(from.turn_cards_);
  river_cards_.MergeFrom(from.river_cards_);
  player_cards_.MergeFrom(from.player_cards_);
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
  if (from.dealer_player_id() != 0) {
    set_dealer_player_id(from.dealer_player_id());
  }
  if (from.finished() != 0) {
    set_finished(from.finished());
  }
}

void TpaQueryCardsResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryCardsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryCardsResp::CopyFrom(const TpaQueryCardsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryCardsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryCardsResp::IsInitialized() const {
  return true;
}

void TpaQueryCardsResp::Swap(TpaQueryCardsResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryCardsResp::InternalSwap(TpaQueryCardsResp* other) {
  using std::swap;
  flop_cards_.InternalSwap(&other->flop_cards_);
  turn_cards_.InternalSwap(&other->turn_cards_);
  river_cards_.InternalSwap(&other->river_cards_);
  player_cards_.InternalSwap(&other->player_cards_);
  swap(room_id_, other->room_id_);
  swap(round_, other->round_);
  swap(dealer_player_id_, other->dealer_player_id_);
  swap(finished_, other->finished_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryCardsResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryAllowActionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryAllowActionReq::kRoomIdFieldNumber;
const int TpaQueryAllowActionReq::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryAllowActionReq::TpaQueryAllowActionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryAllowActionReq)
}
TpaQueryAllowActionReq::TpaQueryAllowActionReq(const TpaQueryAllowActionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryAllowActionReq)
}

void TpaQueryAllowActionReq::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

TpaQueryAllowActionReq::~TpaQueryAllowActionReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryAllowActionReq)
  SharedDtor();
}

void TpaQueryAllowActionReq::SharedDtor() {
}

void TpaQueryAllowActionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryAllowActionReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryAllowActionReq& TpaQueryAllowActionReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionReq();
  return *internal_default_instance();
}

TpaQueryAllowActionReq* TpaQueryAllowActionReq::New(::google::protobuf::Arena* arena) const {
  TpaQueryAllowActionReq* n = new TpaQueryAllowActionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryAllowActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryAllowActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool TpaQueryAllowActionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryAllowActionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryAllowActionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryAllowActionReq)
  return false;
#undef DO_
}

void TpaQueryAllowActionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryAllowActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryAllowActionReq)
}

::google::protobuf::uint8* TpaQueryAllowActionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryAllowActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryAllowActionReq)
  return target;
}

size_t TpaQueryAllowActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryAllowActionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryAllowActionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryAllowActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryAllowActionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryAllowActionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryAllowActionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryAllowActionReq)
    MergeFrom(*source);
  }
}

void TpaQueryAllowActionReq::MergeFrom(const TpaQueryAllowActionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryAllowActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaQueryAllowActionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryAllowActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryAllowActionReq::CopyFrom(const TpaQueryAllowActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryAllowActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryAllowActionReq::IsInitialized() const {
  return true;
}

void TpaQueryAllowActionReq::Swap(TpaQueryAllowActionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryAllowActionReq::InternalSwap(TpaQueryAllowActionReq* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryAllowActionReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryAllowActionResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryAllowActionResp::kRoomIdFieldNumber;
const int TpaQueryAllowActionResp::kPlayerIdFieldNumber;
const int TpaQueryAllowActionResp::kAllowRaiseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryAllowActionResp::TpaQueryAllowActionResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryAllowActionResp)
}
TpaQueryAllowActionResp::TpaQueryAllowActionResp(const TpaQueryAllowActionResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allow_raise_(from.allow_raise_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryAllowActionResp)
}

void TpaQueryAllowActionResp::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

TpaQueryAllowActionResp::~TpaQueryAllowActionResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryAllowActionResp)
  SharedDtor();
}

void TpaQueryAllowActionResp::SharedDtor() {
}

void TpaQueryAllowActionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryAllowActionResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryAllowActionResp& TpaQueryAllowActionResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAllowActionResp();
  return *internal_default_instance();
}

TpaQueryAllowActionResp* TpaQueryAllowActionResp::New(::google::protobuf::Arena* arena) const {
  TpaQueryAllowActionResp* n = new TpaQueryAllowActionResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryAllowActionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryAllowActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_raise_.Clear();
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool TpaQueryAllowActionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryAllowActionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 allow_raise = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allow_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_allow_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryAllowActionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryAllowActionResp)
  return false;
#undef DO_
}

void TpaQueryAllowActionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryAllowActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  // repeated uint32 allow_raise = 3;
  if (this->allow_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _allow_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->allow_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->allow_raise(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryAllowActionResp)
}

::google::protobuf::uint8* TpaQueryAllowActionResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryAllowActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  // repeated uint32 allow_raise = 3;
  if (this->allow_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _allow_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->allow_raise_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryAllowActionResp)
  return target;
}

size_t TpaQueryAllowActionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryAllowActionResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 allow_raise = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allow_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allow_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryAllowActionResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryAllowActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryAllowActionResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryAllowActionResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryAllowActionResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryAllowActionResp)
    MergeFrom(*source);
  }
}

void TpaQueryAllowActionResp::MergeFrom(const TpaQueryAllowActionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryAllowActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allow_raise_.MergeFrom(from.allow_raise_);
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaQueryAllowActionResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryAllowActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryAllowActionResp::CopyFrom(const TpaQueryAllowActionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryAllowActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryAllowActionResp::IsInitialized() const {
  return true;
}

void TpaQueryAllowActionResp::Swap(TpaQueryAllowActionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryAllowActionResp::InternalSwap(TpaQueryAllowActionResp* other) {
  using std::swap;
  allow_raise_.InternalSwap(&other->allow_raise_);
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryAllowActionResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryMatchStateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryMatchStateReq::kRoomIdFieldNumber;
const int TpaQueryMatchStateReq::kRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryMatchStateReq::TpaQueryMatchStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryMatchStateReq)
}
TpaQueryMatchStateReq::TpaQueryMatchStateReq(const TpaQueryMatchStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryMatchStateReq)
}

void TpaQueryMatchStateReq::SharedCtor() {
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  _cached_size_ = 0;
}

TpaQueryMatchStateReq::~TpaQueryMatchStateReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryMatchStateReq)
  SharedDtor();
}

void TpaQueryMatchStateReq::SharedDtor() {
}

void TpaQueryMatchStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryMatchStateReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryMatchStateReq& TpaQueryMatchStateReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateReq();
  return *internal_default_instance();
}

TpaQueryMatchStateReq* TpaQueryMatchStateReq::New(::google::protobuf::Arena* arena) const {
  TpaQueryMatchStateReq* n = new TpaQueryMatchStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryMatchStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryMatchStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(round_));
  _internal_metadata_.Clear();
}

bool TpaQueryMatchStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryMatchStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryMatchStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryMatchStateReq)
  return false;
#undef DO_
}

void TpaQueryMatchStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryMatchStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->round(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryMatchStateReq)
}

::google::protobuf::uint8* TpaQueryMatchStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryMatchStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // int32 round = 2;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->round(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryMatchStateReq)
  return target;
}

size_t TpaQueryMatchStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryMatchStateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // int32 round = 2;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryMatchStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryMatchStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryMatchStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryMatchStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryMatchStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryMatchStateReq)
    MergeFrom(*source);
  }
}

void TpaQueryMatchStateReq::MergeFrom(const TpaQueryMatchStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryMatchStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void TpaQueryMatchStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryMatchStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryMatchStateReq::CopyFrom(const TpaQueryMatchStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryMatchStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryMatchStateReq::IsInitialized() const {
  return true;
}

void TpaQueryMatchStateReq::Swap(TpaQueryMatchStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryMatchStateReq::InternalSwap(TpaQueryMatchStateReq* other) {
  using std::swap;
  swap(room_id_, other->room_id_);
  swap(round_, other->round_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryMatchStateReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryMatchStateResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryMatchStateResp::kRoomIdFieldNumber;
const int TpaQueryMatchStateResp::kDealerPlayerIdFieldNumber;
const int TpaQueryMatchStateResp::kHandIdFieldNumber;
const int TpaQueryMatchStateResp::kRoundFieldNumber;
const int TpaQueryMatchStateResp::kFinishedFieldNumber;
const int TpaQueryMatchStateResp::kMaxSpentFieldNumber;
const int TpaQueryMatchStateResp::kFlopCardsFieldNumber;
const int TpaQueryMatchStateResp::kTurnCardsFieldNumber;
const int TpaQueryMatchStateResp::kRiverCardsFieldNumber;
const int TpaQueryMatchStateResp::kAllowRaiseFieldNumber;
const int TpaQueryMatchStateResp::kPlayerStateFieldNumber;
const int TpaQueryMatchStateResp::kPlayerActionFieldNumber;
const int TpaQueryMatchStateResp::kTurnPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryMatchStateResp::TpaQueryMatchStateResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryMatchStateResp)
}
TpaQueryMatchStateResp::TpaQueryMatchStateResp(const TpaQueryMatchStateResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flop_cards_(from.flop_cards_),
      turn_cards_(from.turn_cards_),
      river_cards_(from.river_cards_),
      allow_raise_(from.allow_raise_),
      player_state_(from.player_state_),
      player_action_(from.player_action_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dealer_player_id_, &from.dealer_player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_spent_) -
    reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryMatchStateResp)
}

void TpaQueryMatchStateResp::SharedCtor() {
  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_spent_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  _cached_size_ = 0;
}

TpaQueryMatchStateResp::~TpaQueryMatchStateResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryMatchStateResp)
  SharedDtor();
}

void TpaQueryMatchStateResp::SharedDtor() {
}

void TpaQueryMatchStateResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryMatchStateResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryMatchStateResp& TpaQueryMatchStateResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryMatchStateResp();
  return *internal_default_instance();
}

TpaQueryMatchStateResp* TpaQueryMatchStateResp::New(::google::protobuf::Arena* arena) const {
  TpaQueryMatchStateResp* n = new TpaQueryMatchStateResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryMatchStateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryMatchStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flop_cards_.Clear();
  turn_cards_.Clear();
  river_cards_.Clear();
  allow_raise_.Clear();
  player_state_.Clear();
  player_action_.Clear();
  ::memset(&dealer_player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_spent_) -
      reinterpret_cast<char*>(&dealer_player_id_)) + sizeof(max_spent_));
  _internal_metadata_.Clear();
}

bool TpaQueryMatchStateResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryMatchStateResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dealer_player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dealer_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hand_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hand_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 round = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finished = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_spent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 flop_cards = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_flop_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_flop_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 turn_cards = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_turn_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_turn_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 river_cards = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_river_cards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_river_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 allow_raise = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allow_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_allow_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayerState player_state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pb.TPAPlayerAction player_action = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 turn_player_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &turn_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryMatchStateResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryMatchStateResp)
  return false;
#undef DO_
}

void TpaQueryMatchStateResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryMatchStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dealer_player_id(), output);
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hand_id(), output);
  }

  // int32 round = 4;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->round(), output);
  }

  // uint32 finished = 5;
  if (this->finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->finished(), output);
  }

  // uint32 max_spent = 6;
  if (this->max_spent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->max_spent(), output);
  }

  // repeated int32 flop_cards = 7;
  if (this->flop_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _flop_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->flop_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->flop_cards(i), output);
  }

  // repeated int32 turn_cards = 8;
  if (this->turn_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _turn_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->turn_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->turn_cards(i), output);
  }

  // repeated int32 river_cards = 9;
  if (this->river_cards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _river_cards_cached_byte_size_));
  }
  for (int i = 0, n = this->river_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->river_cards(i), output);
  }

  // repeated uint32 allow_raise = 10;
  if (this->allow_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _allow_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->allow_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->allow_raise(i), output);
  }

  // repeated .Pb.TPAPlayerState player_state = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_state_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->player_state(static_cast<int>(i)), output);
  }

  // repeated .Pb.TPAPlayerAction player_action = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_action_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->player_action(static_cast<int>(i)), output);
  }

  // uint64 turn_player_id = 13;
  if (this->turn_player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->turn_player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryMatchStateResp)
}

::google::protobuf::uint8* TpaQueryMatchStateResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryMatchStateResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dealer_player_id(), target);
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hand_id(), target);
  }

  // int32 round = 4;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->round(), target);
  }

  // uint32 finished = 5;
  if (this->finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->finished(), target);
  }

  // uint32 max_spent = 6;
  if (this->max_spent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->max_spent(), target);
  }

  // repeated int32 flop_cards = 7;
  if (this->flop_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _flop_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->flop_cards_, target);
  }

  // repeated int32 turn_cards = 8;
  if (this->turn_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _turn_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->turn_cards_, target);
  }

  // repeated int32 river_cards = 9;
  if (this->river_cards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _river_cards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->river_cards_, target);
  }

  // repeated uint32 allow_raise = 10;
  if (this->allow_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _allow_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->allow_raise_, target);
  }

  // repeated .Pb.TPAPlayerState player_state = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_state_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->player_state(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Pb.TPAPlayerAction player_action = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_action_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->player_action(static_cast<int>(i)), deterministic, target);
  }

  // uint64 turn_player_id = 13;
  if (this->turn_player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->turn_player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryMatchStateResp)
  return target;
}

size_t TpaQueryMatchStateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryMatchStateResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 flop_cards = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->flop_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _flop_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 turn_cards = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->turn_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _turn_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 river_cards = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->river_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _river_cards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 allow_raise = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allow_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allow_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Pb.TPAPlayerState player_state = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->player_state_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_state(static_cast<int>(i)));
    }
  }

  // repeated .Pb.TPAPlayerAction player_action = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->player_action_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_action(static_cast<int>(i)));
    }
  }

  // uint64 dealer_player_id = 2;
  if (this->dealer_player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dealer_player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 hand_id = 3;
  if (this->hand_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hand_id());
  }

  // int32 round = 4;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  // uint32 finished = 5;
  if (this->finished() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished());
  }

  // uint64 turn_player_id = 13;
  if (this->turn_player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->turn_player_id());
  }

  // uint32 max_spent = 6;
  if (this->max_spent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_spent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryMatchStateResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryMatchStateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryMatchStateResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryMatchStateResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryMatchStateResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryMatchStateResp)
    MergeFrom(*source);
  }
}

void TpaQueryMatchStateResp::MergeFrom(const TpaQueryMatchStateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryMatchStateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flop_cards_.MergeFrom(from.flop_cards_);
  turn_cards_.MergeFrom(from.turn_cards_);
  river_cards_.MergeFrom(from.river_cards_);
  allow_raise_.MergeFrom(from.allow_raise_);
  player_state_.MergeFrom(from.player_state_);
  player_action_.MergeFrom(from.player_action_);
  if (from.dealer_player_id() != 0) {
    set_dealer_player_id(from.dealer_player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.hand_id() != 0) {
    set_hand_id(from.hand_id());
  }
  if (from.round() != 0) {
    set_round(from.round());
  }
  if (from.finished() != 0) {
    set_finished(from.finished());
  }
  if (from.turn_player_id() != 0) {
    set_turn_player_id(from.turn_player_id());
  }
  if (from.max_spent() != 0) {
    set_max_spent(from.max_spent());
  }
}

void TpaQueryMatchStateResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryMatchStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryMatchStateResp::CopyFrom(const TpaQueryMatchStateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryMatchStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryMatchStateResp::IsInitialized() const {
  return true;
}

void TpaQueryMatchStateResp::Swap(TpaQueryMatchStateResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryMatchStateResp::InternalSwap(TpaQueryMatchStateResp* other) {
  using std::swap;
  flop_cards_.InternalSwap(&other->flop_cards_);
  turn_cards_.InternalSwap(&other->turn_cards_);
  river_cards_.InternalSwap(&other->river_cards_);
  allow_raise_.InternalSwap(&other->allow_raise_);
  player_state_.InternalSwap(&other->player_state_);
  player_action_.InternalSwap(&other->player_action_);
  swap(dealer_player_id_, other->dealer_player_id_);
  swap(room_id_, other->room_id_);
  swap(hand_id_, other->hand_id_);
  swap(round_, other->round_);
  swap(finished_, other->finished_);
  swap(turn_player_id_, other->turn_player_id_);
  swap(max_spent_, other->max_spent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryMatchStateResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaReportActionTokenReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaReportActionTokenReq::kRoomIdFieldNumber;
const int TpaReportActionTokenReq::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaReportActionTokenReq::TpaReportActionTokenReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaReportActionTokenReq)
}
TpaReportActionTokenReq::TpaReportActionTokenReq(const TpaReportActionTokenReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaReportActionTokenReq)
}

void TpaReportActionTokenReq::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

TpaReportActionTokenReq::~TpaReportActionTokenReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaReportActionTokenReq)
  SharedDtor();
}

void TpaReportActionTokenReq::SharedDtor() {
}

void TpaReportActionTokenReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaReportActionTokenReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaReportActionTokenReq& TpaReportActionTokenReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenReq();
  return *internal_default_instance();
}

TpaReportActionTokenReq* TpaReportActionTokenReq::New(::google::protobuf::Arena* arena) const {
  TpaReportActionTokenReq* n = new TpaReportActionTokenReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaReportActionTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaReportActionTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool TpaReportActionTokenReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaReportActionTokenReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaReportActionTokenReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaReportActionTokenReq)
  return false;
#undef DO_
}

void TpaReportActionTokenReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaReportActionTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaReportActionTokenReq)
}

::google::protobuf::uint8* TpaReportActionTokenReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaReportActionTokenReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaReportActionTokenReq)
  return target;
}

size_t TpaReportActionTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaReportActionTokenReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaReportActionTokenReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaReportActionTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaReportActionTokenReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaReportActionTokenReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaReportActionTokenReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaReportActionTokenReq)
    MergeFrom(*source);
  }
}

void TpaReportActionTokenReq::MergeFrom(const TpaReportActionTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaReportActionTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaReportActionTokenReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaReportActionTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaReportActionTokenReq::CopyFrom(const TpaReportActionTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaReportActionTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaReportActionTokenReq::IsInitialized() const {
  return true;
}

void TpaReportActionTokenReq::Swap(TpaReportActionTokenReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaReportActionTokenReq::InternalSwap(TpaReportActionTokenReq* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaReportActionTokenReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaReportActionTokenResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaReportActionTokenResp::kRoomIdFieldNumber;
const int TpaReportActionTokenResp::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaReportActionTokenResp::TpaReportActionTokenResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaReportActionTokenResp)
}
TpaReportActionTokenResp::TpaReportActionTokenResp(const TpaReportActionTokenResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaReportActionTokenResp)
}

void TpaReportActionTokenResp::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

TpaReportActionTokenResp::~TpaReportActionTokenResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaReportActionTokenResp)
  SharedDtor();
}

void TpaReportActionTokenResp::SharedDtor() {
}

void TpaReportActionTokenResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaReportActionTokenResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaReportActionTokenResp& TpaReportActionTokenResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaReportActionTokenResp();
  return *internal_default_instance();
}

TpaReportActionTokenResp* TpaReportActionTokenResp::New(::google::protobuf::Arena* arena) const {
  TpaReportActionTokenResp* n = new TpaReportActionTokenResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaReportActionTokenResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaReportActionTokenResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool TpaReportActionTokenResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaReportActionTokenResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaReportActionTokenResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaReportActionTokenResp)
  return false;
#undef DO_
}

void TpaReportActionTokenResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaReportActionTokenResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaReportActionTokenResp)
}

::google::protobuf::uint8* TpaReportActionTokenResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaReportActionTokenResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaReportActionTokenResp)
  return target;
}

size_t TpaReportActionTokenResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaReportActionTokenResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaReportActionTokenResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaReportActionTokenResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaReportActionTokenResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaReportActionTokenResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaReportActionTokenResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaReportActionTokenResp)
    MergeFrom(*source);
  }
}

void TpaReportActionTokenResp::MergeFrom(const TpaReportActionTokenResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaReportActionTokenResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaReportActionTokenResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaReportActionTokenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaReportActionTokenResp::CopyFrom(const TpaReportActionTokenResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaReportActionTokenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaReportActionTokenResp::IsInitialized() const {
  return true;
}

void TpaReportActionTokenResp::Swap(TpaReportActionTokenResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaReportActionTokenResp::InternalSwap(TpaReportActionTokenResp* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaReportActionTokenResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaReportPlayerActionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaReportPlayerActionReq::kRoomIdFieldNumber;
const int TpaReportPlayerActionReq::kPlayerIdFieldNumber;
const int TpaReportPlayerActionReq::kActionTypeFieldNumber;
const int TpaReportPlayerActionReq::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaReportPlayerActionReq::TpaReportPlayerActionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaReportPlayerActionReq)
}
TpaReportPlayerActionReq::TpaReportPlayerActionReq(const TpaReportPlayerActionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaReportPlayerActionReq)
}

void TpaReportPlayerActionReq::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _cached_size_ = 0;
}

TpaReportPlayerActionReq::~TpaReportPlayerActionReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaReportPlayerActionReq)
  SharedDtor();
}

void TpaReportPlayerActionReq::SharedDtor() {
}

void TpaReportPlayerActionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaReportPlayerActionReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaReportPlayerActionReq& TpaReportPlayerActionReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionReq();
  return *internal_default_instance();
}

TpaReportPlayerActionReq* TpaReportPlayerActionReq::New(::google::protobuf::Arena* arena) const {
  TpaReportPlayerActionReq* n = new TpaReportPlayerActionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaReportPlayerActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaReportPlayerActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool TpaReportPlayerActionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaReportPlayerActionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaReportPlayerActionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaReportPlayerActionReq)
  return false;
#undef DO_
}

void TpaReportPlayerActionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaReportPlayerActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_type(), output);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaReportPlayerActionReq)
}

::google::protobuf::uint8* TpaReportPlayerActionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaReportPlayerActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_type(), target);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaReportPlayerActionReq)
  return target;
}

size_t TpaReportPlayerActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaReportPlayerActionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_type());
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaReportPlayerActionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaReportPlayerActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaReportPlayerActionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaReportPlayerActionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaReportPlayerActionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaReportPlayerActionReq)
    MergeFrom(*source);
  }
}

void TpaReportPlayerActionReq::MergeFrom(const TpaReportPlayerActionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaReportPlayerActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.action_type() != 0) {
    set_action_type(from.action_type());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void TpaReportPlayerActionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaReportPlayerActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaReportPlayerActionReq::CopyFrom(const TpaReportPlayerActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaReportPlayerActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaReportPlayerActionReq::IsInitialized() const {
  return true;
}

void TpaReportPlayerActionReq::Swap(TpaReportPlayerActionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaReportPlayerActionReq::InternalSwap(TpaReportPlayerActionReq* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  swap(action_type_, other->action_type_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaReportPlayerActionReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaReportPlayerActionResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaReportPlayerActionResp::kRoomIdFieldNumber;
const int TpaReportPlayerActionResp::kPlayerIdFieldNumber;
const int TpaReportPlayerActionResp::kActionTypeFieldNumber;
const int TpaReportPlayerActionResp::kSizeFieldNumber;
const int TpaReportPlayerActionResp::kAllowRaiseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaReportPlayerActionResp::TpaReportPlayerActionResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaReportPlayerActionResp)
}
TpaReportPlayerActionResp::TpaReportPlayerActionResp(const TpaReportPlayerActionResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allow_raise_(from.allow_raise_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaReportPlayerActionResp)
}

void TpaReportPlayerActionResp::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _cached_size_ = 0;
}

TpaReportPlayerActionResp::~TpaReportPlayerActionResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaReportPlayerActionResp)
  SharedDtor();
}

void TpaReportPlayerActionResp::SharedDtor() {
}

void TpaReportPlayerActionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaReportPlayerActionResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaReportPlayerActionResp& TpaReportPlayerActionResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaReportPlayerActionResp();
  return *internal_default_instance();
}

TpaReportPlayerActionResp* TpaReportPlayerActionResp::New(::google::protobuf::Arena* arena) const {
  TpaReportPlayerActionResp* n = new TpaReportPlayerActionResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaReportPlayerActionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaReportPlayerActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_raise_.Clear();
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool TpaReportPlayerActionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaReportPlayerActionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 allow_raise = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allow_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_allow_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaReportPlayerActionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaReportPlayerActionResp)
  return false;
#undef DO_
}

void TpaReportPlayerActionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaReportPlayerActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_type(), output);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // repeated uint32 allow_raise = 5;
  if (this->allow_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _allow_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->allow_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->allow_raise(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaReportPlayerActionResp)
}

::google::protobuf::uint8* TpaReportPlayerActionResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaReportPlayerActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_type(), target);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // repeated uint32 allow_raise = 5;
  if (this->allow_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _allow_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->allow_raise_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaReportPlayerActionResp)
  return target;
}

size_t TpaReportPlayerActionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaReportPlayerActionResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 allow_raise = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allow_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allow_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_type());
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaReportPlayerActionResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaReportPlayerActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaReportPlayerActionResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaReportPlayerActionResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaReportPlayerActionResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaReportPlayerActionResp)
    MergeFrom(*source);
  }
}

void TpaReportPlayerActionResp::MergeFrom(const TpaReportPlayerActionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaReportPlayerActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allow_raise_.MergeFrom(from.allow_raise_);
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.action_type() != 0) {
    set_action_type(from.action_type());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void TpaReportPlayerActionResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaReportPlayerActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaReportPlayerActionResp::CopyFrom(const TpaReportPlayerActionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaReportPlayerActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaReportPlayerActionResp::IsInitialized() const {
  return true;
}

void TpaReportPlayerActionResp::Swap(TpaReportPlayerActionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaReportPlayerActionResp::InternalSwap(TpaReportPlayerActionResp* other) {
  using std::swap;
  allow_raise_.InternalSwap(&other->allow_raise_);
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  swap(action_type_, other->action_type_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaReportPlayerActionResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryAIActionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryAIActionReq::kRoomIdFieldNumber;
const int TpaQueryAIActionReq::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryAIActionReq::TpaQueryAIActionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryAIActionReq)
}
TpaQueryAIActionReq::TpaQueryAIActionReq(const TpaQueryAIActionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryAIActionReq)
}

void TpaQueryAIActionReq::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

TpaQueryAIActionReq::~TpaQueryAIActionReq() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryAIActionReq)
  SharedDtor();
}

void TpaQueryAIActionReq::SharedDtor() {
}

void TpaQueryAIActionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryAIActionReq::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryAIActionReq& TpaQueryAIActionReq::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionReq();
  return *internal_default_instance();
}

TpaQueryAIActionReq* TpaQueryAIActionReq::New(::google::protobuf::Arena* arena) const {
  TpaQueryAIActionReq* n = new TpaQueryAIActionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryAIActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryAIActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool TpaQueryAIActionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryAIActionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryAIActionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryAIActionReq)
  return false;
#undef DO_
}

void TpaQueryAIActionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryAIActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryAIActionReq)
}

::google::protobuf::uint8* TpaQueryAIActionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryAIActionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryAIActionReq)
  return target;
}

size_t TpaQueryAIActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryAIActionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryAIActionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryAIActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryAIActionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryAIActionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryAIActionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryAIActionReq)
    MergeFrom(*source);
  }
}

void TpaQueryAIActionReq::MergeFrom(const TpaQueryAIActionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryAIActionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void TpaQueryAIActionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryAIActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryAIActionReq::CopyFrom(const TpaQueryAIActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryAIActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryAIActionReq::IsInitialized() const {
  return true;
}

void TpaQueryAIActionReq::Swap(TpaQueryAIActionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryAIActionReq::InternalSwap(TpaQueryAIActionReq* other) {
  using std::swap;
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryAIActionReq::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TpaQueryAIActionResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpaQueryAIActionResp::kRoomIdFieldNumber;
const int TpaQueryAIActionResp::kPlayerIdFieldNumber;
const int TpaQueryAIActionResp::kActionTypeFieldNumber;
const int TpaQueryAIActionResp::kSizeFieldNumber;
const int TpaQueryAIActionResp::kAllowRaiseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpaQueryAIActionResp::TpaQueryAIActionResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pb.TpaQueryAIActionResp)
}
TpaQueryAIActionResp::TpaQueryAIActionResp(const TpaQueryAIActionResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allow_raise_(from.allow_raise_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_id_, &from.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:Pb.TpaQueryAIActionResp)
}

void TpaQueryAIActionResp::SharedCtor() {
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _cached_size_ = 0;
}

TpaQueryAIActionResp::~TpaQueryAIActionResp() {
  // @@protoc_insertion_point(destructor:Pb.TpaQueryAIActionResp)
  SharedDtor();
}

void TpaQueryAIActionResp::SharedDtor() {
}

void TpaQueryAIActionResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TpaQueryAIActionResp::descriptor() {
  ::protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TpaQueryAIActionResp& TpaQueryAIActionResp::default_instance() {
  ::protobuf_tpa_2eproto::InitDefaultsTpaQueryAIActionResp();
  return *internal_default_instance();
}

TpaQueryAIActionResp* TpaQueryAIActionResp::New(::google::protobuf::Arena* arena) const {
  TpaQueryAIActionResp* n = new TpaQueryAIActionResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TpaQueryAIActionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:Pb.TpaQueryAIActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_raise_.Clear();
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool TpaQueryAIActionResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pb.TpaQueryAIActionResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 allow_raise = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allow_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_allow_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pb.TpaQueryAIActionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pb.TpaQueryAIActionResp)
  return false;
#undef DO_
}

void TpaQueryAIActionResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pb.TpaQueryAIActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_id(), output);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_type(), output);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // repeated uint32 allow_raise = 5;
  if (this->allow_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _allow_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->allow_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->allow_raise(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pb.TpaQueryAIActionResp)
}

::google::protobuf::uint8* TpaQueryAIActionResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pb.TpaQueryAIActionResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_id(), target);
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_type(), target);
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // repeated uint32 allow_raise = 5;
  if (this->allow_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _allow_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->allow_raise_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pb.TpaQueryAIActionResp)
  return target;
}

size_t TpaQueryAIActionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pb.TpaQueryAIActionResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 allow_raise = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allow_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _allow_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 action_type = 3;
  if (this->action_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_type());
  }

  // uint32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TpaQueryAIActionResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pb.TpaQueryAIActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TpaQueryAIActionResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TpaQueryAIActionResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pb.TpaQueryAIActionResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pb.TpaQueryAIActionResp)
    MergeFrom(*source);
  }
}

void TpaQueryAIActionResp::MergeFrom(const TpaQueryAIActionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pb.TpaQueryAIActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allow_raise_.MergeFrom(from.allow_raise_);
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.action_type() != 0) {
    set_action_type(from.action_type());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void TpaQueryAIActionResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pb.TpaQueryAIActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpaQueryAIActionResp::CopyFrom(const TpaQueryAIActionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pb.TpaQueryAIActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpaQueryAIActionResp::IsInitialized() const {
  return true;
}

void TpaQueryAIActionResp::Swap(TpaQueryAIActionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpaQueryAIActionResp::InternalSwap(TpaQueryAIActionResp* other) {
  using std::swap;
  allow_raise_.InternalSwap(&other->allow_raise_);
  swap(player_id_, other->player_id_);
  swap(room_id_, other->room_id_);
  swap(action_type_, other->action_type_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TpaQueryAIActionResp::GetMetadata() const {
  protobuf_tpa_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tpa_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pb

// @@protoc_insertion_point(global_scope)
